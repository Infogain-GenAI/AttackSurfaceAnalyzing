√$
:D:\sonarcube_projects\AttackSurfaceAnalyzer\Cli\AppData.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .
Cli. 1
{ 
public 

class 
AppData 
{ 
public		 !
CollectCommandOptions		 $
CollectOptions		% 3
{		4 5
get		6 9
;		9 :
set		; >
;		> ?
}		@ A
=		B C
new		D G!
CollectCommandOptions		H ]
(		] ^
)		^ _
;		_ `
public

 !
MonitorCommandOptions

 $
MonitorOptions

% 3
{

4 5
get

6 9
;

9 :
set

; >
;

> ?
}

@ A
=

B C
new

D G!
MonitorCommandOptions

H ]
(

] ^
)

^ _
;

_ `
public '
ExportCollectCommandOptions *'
ExportCollectCommandOptions+ F
{G H
getI L
;L M
setN Q
;Q R
}S T
=U V
newW Z'
ExportCollectCommandOptions[ v
(v w
)w x
;x y
public 
string 

FirstRunId  
{ 	
get 
{ 
return 
$" 
{ 
RunId 
}  
$str  '
"' (
;( )
} 
} 	
public 
string 
SecondRunId !
{ 	
get 
{ 
return 
$" 
{ 
RunId 
}  
$str  &
"& '
;' (
} 
} 	
public 
string 
MonitorRunId "
{ 	
get 
{ 
return   
$"   
{   
RunId   
}    
$str    +
"  + ,
;  , -
}!! 
}"" 	
public$$ 

Dictionary$$ 
<$$ 
RESULT_TYPE$$ %
,$$% & 
ANALYSIS_RESULT_TYPE$$' ;
>$$; <
DefaultLevels$$= J
=$$K L
new$$M P

Dictionary$$Q [
<$$[ \
RESULT_TYPE$$\ g
,$$g h 
ANALYSIS_RESULT_TYPE$$i }
>$$} ~
($$~ 
)	$$ Ä
;
$$Ä Å
public%% 
List%% 
<%% 
AsaRule%% 
>%% 
Rules%% "
{%%# $
get%%% (
;%%( )
set%%* -
;%%- .
}%%/ 0
=%%1 2
new%%3 6
List%%7 ;
<%%; <
AsaRule%%< C
>%%C D
(%%D E
)%%E F
;%%F G
public&& 
List&& 
<&& 
CollectObject&& !
>&&! "
TestObjects&&# .
{&&/ 0
get&&1 4
;&&4 5
set&&6 9
;&&9 :
}&&; <
=&&= >
new&&? B
List&&C G
<&&G H
CollectObject&&H U
>&&U V
(&&V W
)&&W X
;&&X Y
public(( 
string(( 
RunId(( 
{(( 
get(( !
;((! "
set((# &
;((& '
}((( )
=((* +
string((, 2
.((2 3
Empty((3 8
;((8 9
public)) !
CompareCommandOptions)) $!
CompareCommandOptions))% :
{)); <
get** 
{++ 
return,, 
new,, !
CompareCommandOptions,, 0
(,,0 1'
ExportCollectCommandOptions,,1 L
.,,L M

FirstRunId,,M W
,,,W X'
ExportCollectCommandOptions,,Y t
.,,t u
SecondRunId	,,u Ä
)
,,Ä Å
{-- (
ApplySubObjectRulesToMonitor.. 0
=..1 2
true..3 7
,..7 8
AnalysesFile//  
=//! "
RuleFile//# +
.//+ ,
LoadEmbeddedFilters//, ?
(//? @
)//@ A
,//A B
DatabaseFilename00 $
=00% &'
ExportCollectCommandOptions00' B
.00B C
DatabaseFilename00C S
,00S T
DisableAnalysis11 #
=11$ %'
ExportCollectCommandOptions11& A
.11A B
DisableAnalysis11B Q
,11Q R
SaveToDatabase22 "
=22# $'
ExportCollectCommandOptions22% @
.22@ A
SaveToDatabase22A O
,22O P

RunScripts33 
=33  '
ExportCollectCommandOptions33! <
.33< =

RunScripts33= G
}44 
;44 
}55 
}66 	
}77 
}88 É†

ND:\sonarcube_projects\AttackSurfaceAnalyzer\Cli\AttackSurfaceAnalyzerClient.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .
Cli. 1
{ 
public 

static 
class '
AttackSurfaceAnalyzerClient 3
{ 
private 
static 
List 
< 
BaseCollector )
>) *

collectors+ 5
=6 7
new8 ;
List< @
<@ A
BaseCollectorA N
>N O
(O P
)P Q
;Q R
private   
static   
readonly   
List    $
<  $ %
BaseMonitor  % 0
>  0 1
monitors  2 :
=  ; <
new  = @
List  A E
<  E F
BaseMonitor  F Q
>  Q R
(  R S
)  S T
;  T U
private!! 
static!! 
List!! 
<!! 
BaseCompare!! '
>!!' (
comparators!!) 4
=!!5 6
new!!7 :
List!!; ?
<!!? @
BaseCompare!!@ K
>!!K L
(!!L M
)!!M N
;!!N O
public## 
static## 
DatabaseManager## %
?##% &
DatabaseManager##' 6
{##7 8
get##9 <
;##< =
private##> E
set##F I
;##I J
}##K L
private%% 
static%% 
void%% 
SetupLogging%% (
(%%( )
CommandOptions%%) 7
opts%%8 <
)%%< =
{&& 	
Logger(( 
.(( 
Setup(( 
((( 
true(( 
,(( 
opts(( #
.((# $
Verbose(($ +
,((+ ,
opts((- 1
.((1 2
Quiet((2 7
)((7 8
;((8 9
},, 	
private.. 
static.. 
void.. 
SetupDatabase.. )
(..) *
CommandOptions..* 8
opts..9 =
)..= >
{// 	
var00 

dbSettings00 
=00 
new00  

DBSettings00! +
(00+ ,
)00, -
{11 
ShardingFactor22 
=22  
opts22! %
.22% &
Shards22& ,
,22, -
LowMemoryUsage33 
=33  
opts33! %
.33% &
LowMemoryUsage33& 4
}44 
;44 

SetupOrDie55 
(55 
opts55 
.55 
DatabaseFilename55 ,
,55, -

dbSettings55. 8
)558 9
;559 :
}66 	
private88 
static88 
void88 
Main88  
(88  !
string88! '
[88' (
]88( )
args88* .
)88. /
{99 	!
AttackSurfaceAnalyzer;; !
.;;! "
Utils;;" '
.;;' (
Logger;;( .
.;;. /
Setup;;/ 4
(;;4 5
true;;5 9
,;;9 :
false;;; @
);;@ A
;;;A B
var?? 
version?? 
=?? 
(?? 
Assembly?? #
.@@ 
GetEntryAssembly@@ )
(@@) *
)@@* +
?@@+ ,
.AA 
GetCustomAttributesAA ,
(AA, -
typeofAA- 3
(AA3 41
%AssemblyInformationalVersionAttributeAA4 Y
)AAY Z
,AAZ [
falseAA\ a
)AAa b
asAAc e2
%AssemblyInformationalVersionAttribute	AAf ã
[
AAã å
]
AAå ç
)
AAç é
?
AAé è
[BB 
$numBB 
]BB 
.BB  
InformationalVersionBB 0
??BB1 3
$strBB4 =
;BB= >
LogDD 
.DD 
InformationDD 
(DD 
$strDD 9
,DD9 :
versionDD; B
)DDB C
;DDC D!
AttackSurfaceAnalyzerFF !
.FF! "
UtilsFF" '
.FF' (
StringsFF( /
.FF/ 0
SetupFF0 5
(FF5 6
)FF6 7
;FF7 8
varHH 

argsResultHH 
=HH 
ParserHH #
.HH# $
DefaultHH$ +
.HH+ ,
ParseArgumentsHH, :
<HH: ;!
CollectCommandOptionsHH; P
,HHP Q!
MonitorCommandOptionsHHR g
,HHg h(
ExportMonitorCommandOptions	HHi Ñ
,
HHÑ Ö)
ExportCollectCommandOptions
HHÜ °
,
HH° ¢"
ConfigCommandOptions
HH£ ∑
,
HH∑ ∏
GuiCommandOptions
HHπ  
,
HH  À
VerifyOptions
HHÃ Ÿ
,
HHŸ ⁄&
GuidedModeCommandOptions
HH€ Û
>
HHÛ Ù
(
HHÙ ı
args
HHı ˘
)
HH˘ ˙
.II 
	MapResultII 
(II 
(JJ !
CollectCommandOptionsJJ *
optsJJ+ /
)JJ/ 0
=>JJ1 3
{KK 
SetupLoggingLL $
(LL$ %
optsLL% )
)LL) *
;LL* +
SetupDatabaseMM %
(MM% &
optsMM& *
)MM* +
;MM+ ,
returnNN 
RunCollectCommandNN 0
(NN0 1
optsNN1 5
)NN5 6
;NN6 7
}OO 
,OO 
(PP !
MonitorCommandOptionsPP *
optsPP+ /
)PP/ 0
=>PP1 3
{QQ 
SetupLoggingRR $
(RR$ %
optsRR% )
)RR) *
;RR* +
SetupDatabaseSS %
(SS% &
optsSS& *
)SS* +
;SS+ ,
returnTT 
RunMonitorCommandTT 0
(TT0 1
optsTT1 5
)TT5 6
;TT6 7
}UU 
,UU 
(VV '
ExportCollectCommandOptionsVV 0
optsVV1 5
)VV5 6
=>VV7 9
{WW 
SetupLoggingXX $
(XX$ %
optsXX% )
)XX) *
;XX* +
SetupDatabaseYY %
(YY% &
optsYY& *
)YY* +
;YY+ ,
returnZZ #
RunExportCollectCommandZZ 6
(ZZ6 7
optsZZ7 ;
)ZZ; <
;ZZ< =
}[[ 
,[[ 
(\\ '
ExportMonitorCommandOptions\\ 0
opts\\1 5
)\\5 6
=>\\7 9
{]] 
SetupLogging^^ $
(^^$ %
opts^^% )
)^^) *
;^^* +
SetupDatabase__ %
(__% &
opts__& *
)__* +
;__+ ,
return`` #
RunExportMonitorCommand`` 6
(``6 7
opts``7 ;
)``; <
;``< =
}aa 
,aa 
(bb  
ConfigCommandOptionsbb )
optsbb* .
)bb. /
=>bb0 2
{cc 
SetupLoggingdd $
(dd$ %
optsdd% )
)dd) *
;dd* +
returnee 
RunConfigCommandee /
(ee/ 0
optsee0 4
)ee4 5
;ee5 6
}ff 
,ff 
(gg 
GuiCommandOptionsgg &
optsgg' +
)gg+ ,
=>gg- /
{hh 
SetupLoggingii $
(ii$ %
optsii% )
)ii) *
;ii* +
SetupDatabasejj %
(jj% &
optsjj& *
)jj* +
;jj+ ,
returnkk 
RunGuiCommandkk ,
(kk, -
optskk- 1
)kk1 2
;kk2 3
}ll 
,ll 
(mm 
VerifyOptionsmm "
optsmm# '
)mm' (
=>mm) +
{nn 
SetupLoggingoo $
(oo$ %
optsoo% )
)oo) *
;oo* +
SetupDatabasepp %
(pp% &
optspp& *
)pp* +
;pp+ ,
returnqq !
RunVerifyRulesCommandqq 4
(qq4 5
optsqq5 9
)qq9 :
;qq: ;
}rr 
,rr 
(ss $
GuidedModeCommandOptionsss -
optsss. 2
)ss2 3
=>ss4 6
{tt 
SetupLogginguu $
(uu$ %
optsuu% )
)uu) *
;uu* +
SetupDatabasevv %
(vv% &
optsvv& *
)vv* +
;vv+ ,
returnww  
RunGuidedModeCommandww 3
(ww3 4
optsww4 8
)ww8 9
;ww9 :
}xx 
,xx 
errsyy 
=>yy 
	ASA_ERRORyy %
.yy% &
UNKNOWNyy& -
)zz 
;zz 
DatabaseManager{{ 
?{{ 
.{{ 
CloseDatabase{{ *
({{* +
){{+ ,
;{{, -
Log|| 
.|| 
CloseAndFlush|| 
(|| 
)|| 
;||  
Environment}} 
.}} 
Exit}} 
(}} 
(}} 
int}} !
)}}! "

argsResult}}" ,
)}}, -
;}}- .
}~~ 	
private
ÖÖ 
static
ÖÖ 
RuleFile
ÖÖ )
LoadRulesFromFileOrEmbedded
ÖÖ  ;
(
ÖÖ; <
string
ÖÖ< B
?
ÖÖB C
analysisFile
ÖÖD P
)
ÖÖP Q
=>
ÖÖR T
string
ÖÖU [
.
ÖÖ[ \
IsNullOrEmpty
ÖÖ\ i
(
ÖÖi j
analysisFile
ÖÖj v
)
ÖÖv w
?
ÖÖx y
RuleFileÖÖz Ç
.ÖÖÇ É#
LoadEmbeddedFiltersÖÖÉ ñ
(ÖÖñ ó
)ÖÖó ò
:ÖÖô ö
RuleFileÖÖõ £
.ÖÖ£ §
FromFileÖÖ§ ¨
(ÖÖ¨ ≠
analysisFileÖÖ≠ π
)ÖÖπ ∫
;ÖÖ∫ ª
private
áá 
static
áá 
	ASA_ERROR
áá  "
RunGuidedModeCommand
áá! 5
(
áá5 6&
GuidedModeCommandOptions
áá6 N
opts
ááO S
)
ááS T
{
àà 	
opts
ââ 
.
ââ 
RunId
ââ 
=
ââ 
opts
ââ 
.
ââ 
RunId
ââ #
?
ââ# $
.
ââ$ %
Trim
ââ% )
(
ââ) *
)
ââ* +
??
ââ, .
DateTime
ââ/ 7
.
ââ7 8
Now
ââ8 ;
.
ââ; <
ToString
ââ< D
(
ââD E
$str
ââE H
,
ââH I
CultureInfo
ââJ U
.
ââU V
InvariantCulture
ââV f
)
ââf g
;
ââg h
var
ãã 
firstCollectRunId
ãã !
=
ãã" #
$"
ãã$ &
{
ãã& '
opts
ãã' +
.
ãã+ ,
RunId
ãã, 1
}
ãã1 2
$str
ãã2 ;
"
ãã; <
;
ãã< =
var
åå  
secondCollectRunId
åå "
=
åå# $
$"
åå% '
{
åå' (
opts
åå( ,
.
åå, -
RunId
åå- 2
}
åå2 3
$str
åå3 9
"
åå9 :
;
åå: ;
var
çç 
monitorRunId
çç 
=
çç 
$"
çç !
{
çç! "
opts
çç" &
.
çç& '
RunId
çç' ,
}
çç, -
$str
çç- 8
"
çç8 9
;
çç9 :
var
èè 
collectorOpts
èè 
=
èè #
CollectCommandOptions
èè  5
.
èè5 6"
FromCollectorOptions
èè6 J
(
èèJ K
opts
èèK O
)
èèO P
;
èèP Q
collectorOpts
ëë 
.
ëë 
RunId
ëë 
=
ëë  !
firstCollectRunId
ëë" 3
;
ëë3 4
RunCollectCommand
ìì 
(
ìì 
collectorOpts
ìì +
)
ìì+ ,
;
ìì, -
var
ïï 
monitorOpts
ïï 
=
ïï 
new
ïï !#
MonitorCommandOptions
ïï" 7
(
ïï7 8
)
ïï8 9
{
ññ 
Duration
óó 
=
óó 
opts
óó 
.
óó  
Duration
óó  (
,
óó( )"
MonitoredDirectories
òò $
=
òò% &
opts
òò' +
.
òò+ ,"
MonitoredDirectories
òò, @
,
òò@ A%
EnableFileSystemMonitor
ôô '
=
ôô( )
opts
ôô* .
.
ôô. /%
EnableFileSystemMonitor
ôô/ F
,
ôôF G
GatherHashes
öö 
=
öö 
opts
öö #
.
öö# $
GatherHashes
öö$ 0
,
öö0 1
FileNamesOnly
õõ 
=
õõ 
opts
õõ  $
.
õõ$ %
FileNamesOnly
õõ% 2
,
õõ2 3
RunId
úú 
=
úú 
monitorRunId
úú $
,
úú$ %
}
ùù 
;
ùù 
RunMonitorCommand
üü 
(
üü 
monitorOpts
üü )
)
üü) *
;
üü* +
collectorOpts
°° 
.
°° 
RunId
°° 
=
°°  ! 
secondCollectRunId
°°" 4
;
°°4 5
RunCollectCommand
££ 
(
££ 
collectorOpts
££ +
)
££+ ,
;
££, -
var
•• 
analysisFile
•• 
=
•• )
LoadRulesFromFileOrEmbedded
•• :
(
••: ;
opts
••; ?
.
••? @
AnalysesFile
••@ L
)
••L M
;
••M N
if
ßß 
(
ßß 
!
ßß 
analysisFile
ßß 
.
ßß 
Rules
ßß #
.
ßß# $
Any
ßß$ '
(
ßß' (
)
ßß( )
)
ßß) *
{
®® 
Log
©© 
.
©© 
Warning
©© 
(
©© 
Strings
©© #
.
©©# $
Get
©©$ '
(
©©' (
$str
©©( 5
)
©©5 6
)
©©6 7
;
©©7 8
return
™™ 
	ASA_ERROR
™™  
.
™™  !
INVALID_RULES
™™! .
;
™™. /
}
´´ 
var
≠≠ 
compareOpts
≠≠ 
=
≠≠ 
new
≠≠ !#
CompareCommandOptions
≠≠" 7
(
≠≠7 8
firstCollectRunId
≠≠8 I
,
≠≠I J 
secondCollectRunId
≠≠K ]
)
≠≠] ^
{
ÆÆ 
DisableAnalysis
ØØ 
=
ØØ  !
opts
ØØ" &
.
ØØ& '
DisableAnalysis
ØØ' 6
,
ØØ6 7
AnalysesFile
∞∞ 
=
∞∞ 
analysisFile
∞∞ +
,
∞∞+ ,

RunScripts
±± 
=
±± 
opts
±± !
.
±±! "

RunScripts
±±" ,
}
≤≤ 
;
≤≤ 
var
¥¥ 
results
¥¥ 
=
¥¥ 
CompareRuns
¥¥ %
(
¥¥% &
compareOpts
¥¥& 1
)
¥¥1 2
;
¥¥2 3
if
∂∂ 
(
∂∂ 
opts
∂∂ 
.
∂∂ 
SaveToDatabase
∂∂ #
)
∂∂# $
{
∑∑ "
InsertCompareResults
∏∏ $
(
∏∏$ %
results
∏∏% ,
,
∏∏, -
firstCollectRunId
∏∏. ?
,
∏∏? @ 
secondCollectRunId
∏∏A S
,
∏∏S T
analysisFile
∏∏U a
.
∏∏a b
GetHash
∏∏b i
(
∏∏i j
)
∏∏j k
)
∏∏k l
;
∏∏l m
}
ππ 
var
ªª  
monitorCompareOpts
ªª "
=
ªª# $
new
ªª% (#
CompareCommandOptions
ªª) >
(
ªª> ?
null
ªª? C
,
ªªC D
monitorRunId
ªªE Q
)
ªªQ R
{
ºº 
DisableAnalysis
ΩΩ 
=
ΩΩ  !
opts
ΩΩ" &
.
ΩΩ& '
DisableAnalysis
ΩΩ' 6
,
ΩΩ6 7
AnalysesFile
ææ 
=
ææ 
analysisFile
ææ +
,
ææ+ ,*
ApplySubObjectRulesToMonitor
øø ,
=
øø- .
opts
øø/ 3
.
øø3 4*
ApplySubObjectRulesToMonitor
øø4 P
,
øøP Q

RunScripts
¿¿ 
=
¿¿ 
opts
¿¿ !
.
¿¿! "

RunScripts
¿¿" ,
}
¡¡ 
;
¡¡ 
var
√√ 
monitorResult
√√ 
=
√√ 
AnalyzeMonitored
√√  0
(
√√0 1 
monitorCompareOpts
√√1 C
)
√√C D
;
√√D E
if
≈≈ 
(
≈≈ 
opts
≈≈ 
.
≈≈ 
SaveToDatabase
≈≈ #
)
≈≈# $
{
∆∆ "
InsertCompareResults
«« $
(
««$ %
monitorResult
««% 2
,
««2 3
null
««4 8
,
««8 9
monitorRunId
««: F
,
««F G
analysisFile
««H T
.
««T U
GetHash
««U \
(
««\ ]
)
««] ^
)
««^ _
;
««_ `
}
»» 
Parallel
   
.
   
ForEach
   
(
   
monitorResult
   *
.
  * +
Keys
  + /
,
  / 0
key
  1 4
=>
  5 7
{
ÀÀ 
results
ÃÃ 
.
ÃÃ 
TryAdd
ÃÃ 
(
ÃÃ 
key
ÃÃ "
,
ÃÃ" #
monitorResult
ÃÃ$ 1
[
ÃÃ1 2
key
ÃÃ2 5
]
ÃÃ5 6
)
ÃÃ6 7
;
ÃÃ7 8
}
ÕÕ 
)
ÕÕ 
;
ÕÕ 
var
ŒŒ 
exOpts
ŒŒ 
=
ŒŒ 
new
ŒŒ 
ExportOptions
ŒŒ *
(
ŒŒ* +
)
ŒŒ+ ,
;
ŒŒ, -
exOpts
œœ 
.
œœ 
OutputSarif
œœ 
=
œœ  
opts
œœ! %
.
œœ% &
ExportSarif
œœ& 1
;
œœ1 2
exOpts
–– 
.
–– 

OutputPath
–– 
=
–– 
opts
––  $
.
––$ %

OutputPath
––% /
;
––/ 0
exOpts
—— 
.
—— 
ExplodedOutput
—— !
=
——" #
opts
——$ (
.
——( )
ExplodedOutput
——) 7
;
——7 8
return
““ "
ExportCompareResults
““ '
(
““' (
results
““( /
,
““/ 0
exOpts
““1 7
,
““7 8

AsaHelpers
““9 C
.
““C D
MakeValidFileName
““D U
(
““U V
opts
““V Z
.
““Z [
RunId
““[ `
)
““` a
,
““a b
analysisFile
““c o
.
““o p
GetHash
““p w
(
““w x
)
““x y
,
““y z
analysisFile““{ á
.““á à
Rules““à ç
)““ç é
;““é è
}
”” 	
public
’’ 
static
’’ "
ConcurrentDictionary
’’ *
<
’’* +
(
’’+ ,
RESULT_TYPE
’’, 7
,
’’7 8
CHANGE_TYPE
’’9 D
)
’’D E
,
’’E F
List
’’G K
<
’’K L
CompareResult
’’L Y
>
’’Y Z
>
’’Z [
AnalyzeMonitored
’’\ l
(
’’l m$
CompareCommandOptions’’m Ç
opts’’É á
)’’á à
{
÷÷ 	
if
◊◊ 
(
◊◊ 
DatabaseManager
◊◊ 
is
◊◊  "
null
◊◊# '
)
◊◊' (
{
ÿÿ 
Log
ŸŸ 
.
ŸŸ 
Error
ŸŸ 
(
ŸŸ 
$str
ŸŸ 3
,
ŸŸ3 4
$str
ŸŸ5 K
)
ŸŸK L
;
ŸŸL M
return
⁄⁄ 
new
⁄⁄ "
ConcurrentDictionary
⁄⁄ /
<
⁄⁄/ 0
(
⁄⁄0 1
RESULT_TYPE
⁄⁄1 <
,
⁄⁄< =
CHANGE_TYPE
⁄⁄> I
)
⁄⁄I J
,
⁄⁄J K
List
⁄⁄L P
<
⁄⁄P Q
CompareResult
⁄⁄Q ^
>
⁄⁄^ _
>
⁄⁄_ `
(
⁄⁄` a
)
⁄⁄a b
;
⁄⁄b c
}
€€ 
if
‹‹ 
(
‹‹ 
opts
‹‹ 
is
‹‹ 
null
‹‹ 
||
‹‹ 
opts
‹‹  $
.
‹‹$ %
SecondRunId
‹‹% 0
is
‹‹1 3
null
‹‹4 8
)
‹‹8 9
{
‹‹: ;
return
‹‹< B
new
‹‹C F"
ConcurrentDictionary
‹‹G [
<
‹‹[ \
(
‹‹\ ]
RESULT_TYPE
‹‹] h
,
‹‹h i
CHANGE_TYPE
‹‹j u
)
‹‹u v
,
‹‹v w
List
‹‹x |
<
‹‹| }
CompareResult‹‹} ä
>‹‹ä ã
>‹‹ã å
(‹‹å ç
)‹‹ç é
;‹‹é è
}‹‹ê ë
var
›› 
analyzer
›› 
=
›› 
new
›› 
AsaAnalyzer
›› *
(
››* +
new
››+ .
AnalyzerOptions
››/ >
(
››> ?
opts
››? C
.
››C D

RunScripts
››D N
)
››N O
)
››O P
;
››P Q
return
ﬁﬁ 
AnalyzeMonitored
ﬁﬁ #
(
ﬁﬁ# $
opts
ﬁﬁ$ (
,
ﬁﬁ( )
analyzer
ﬁﬁ* 2
,
ﬁﬁ2 3
DatabaseManager
ﬁﬁ4 C
.
ﬁﬁC D
GetMonitorResults
ﬁﬁD U
(
ﬁﬁU V
opts
ﬁﬁV Z
.
ﬁﬁZ [
SecondRunId
ﬁﬁ[ f
)
ﬁﬁf g
,
ﬁﬁg h
opts
ﬁﬁi m
.
ﬁﬁm n
AnalysesFile
ﬁﬁn z
??
ﬁﬁ{ }
throwﬁﬁ~ É
newﬁﬁÑ á%
ArgumentNullExceptionﬁﬁà ù
(ﬁﬁù û
nameofﬁﬁû §
(ﬁﬁ§ •
optsﬁﬁ• ©
.ﬁﬁ© ™
AnalysesFileﬁﬁ™ ∂
)ﬁﬁ∂ ∑
)ﬁﬁ∑ ∏
)ﬁﬁ∏ π
;ﬁﬁπ ∫
}
ﬂﬂ 	
public
·· 
static
·· "
ConcurrentDictionary
·· *
<
··* +
(
··+ ,
RESULT_TYPE
··, 7
,
··7 8
CHANGE_TYPE
··9 D
)
··D E
,
··E F
List
··G K
<
··K L
CompareResult
··L Y
>
··Y Z
>
··Z [
AnalyzeMonitored
··\ l
(
··l m$
CompareCommandOptions··m Ç
opts··É á
,··á à
AsaAnalyzer··â î
analyzer··ï ù
,··ù û
IEnumerable··ü ™
<··™ ´
MonitorObject··´ ∏
>··∏ π
collectObjects··∫ »
,··» …
RuleFile··  “
ruleFile··” €
)··€ ‹
{
‚‚ 	
if
„„ 
(
„„ 
opts
„„ 
is
„„ 
null
„„ 
)
„„ 
{
„„ 
return
„„  &
new
„„' *"
ConcurrentDictionary
„„+ ?
<
„„? @
(
„„@ A
RESULT_TYPE
„„A L
,
„„L M
CHANGE_TYPE
„„N Y
)
„„Y Z
,
„„Z [
List
„„\ `
<
„„` a
CompareResult
„„a n
>
„„n o
>
„„o p
(
„„p q
)
„„q r
;
„„r s
}
„„t u
var
‰‰ 
results
‰‰ 
=
‰‰ 
new
‰‰ "
ConcurrentDictionary
‰‰ 2
<
‰‰2 3
(
‰‰3 4
RESULT_TYPE
‰‰4 ?
,
‰‰? @
CHANGE_TYPE
‰‰A L
)
‰‰L M
,
‰‰M N
List
‰‰O S
<
‰‰S T
CompareResult
‰‰T a
>
‰‰a b
>
‰‰b c
(
‰‰c d
)
‰‰d e
;
‰‰e f
var
ÂÂ 
analysesHash
ÂÂ 
=
ÂÂ 
ruleFile
ÂÂ '
.
ÂÂ' (
GetHash
ÂÂ( /
(
ÂÂ/ 0
)
ÂÂ0 1
;
ÂÂ1 2
Parallel
ÊÊ 
.
ÊÊ 
ForEach
ÊÊ 
(
ÊÊ 
collectObjects
ÊÊ +
,
ÊÊ+ ,
monitorResult
ÊÊ- :
=>
ÊÊ; =
{
ÁÁ 
var
ËË 
shellResult
ËË 
=
ËË  !
new
ËË" %
CompareResult
ËË& 3
(
ËË3 4
)
ËË4 5
{
ÈÈ 
Compare
ÍÍ 
=
ÍÍ 
monitorResult
ÍÍ +
,
ÍÍ+ ,
CompareRunId
ÎÎ  
=
ÎÎ! "
opts
ÎÎ# '
.
ÎÎ' (
SecondRunId
ÎÎ( 3
}
ÏÏ 
;
ÏÏ 
shellResult
ÓÓ 
.
ÓÓ 
Rules
ÓÓ !
=
ÓÓ" #
analyzer
ÓÓ$ ,
.
ÓÓ, -
Analyze
ÓÓ- 4
(
ÓÓ4 5
ruleFile
ÓÓ5 =
.
ÓÓ= >
Rules
ÓÓ> C
,
ÓÓC D
shellResult
ÓÓE P
)
ÓÓP Q
.
ÓÓQ R
ToList
ÓÓR X
(
ÓÓX Y
)
ÓÓY Z
;
ÓÓZ [
shellResult
ÔÔ 
.
ÔÔ 
AnalysesHash
ÔÔ (
=
ÔÔ) *
analysesHash
ÔÔ+ 7
;
ÔÔ7 8
if
ÒÒ 
(
ÒÒ 
opts
ÒÒ 
.
ÒÒ *
ApplySubObjectRulesToMonitor
ÒÒ 5
)
ÒÒ5 6
{
ÚÚ 
switch
ÛÛ 
(
ÛÛ 
monitorResult
ÛÛ )
)
ÛÛ) *
{
ÙÙ 
case
ıı 
FileMonitorObject
ıı .
fmo
ıı/ 2
:
ıı2 3
var
ˆˆ 

innerShell
ˆˆ  *
=
ˆˆ+ ,
new
ˆˆ- 0
CompareResult
ˆˆ1 >
(
ˆˆ> ?
)
ˆˆ? @
{
˜˜ 
Compare
¯¯  '
=
¯¯( )
fmo
¯¯* -
.
¯¯- .
FileSystemObject
¯¯. >
,
¯¯> ?
CompareRunId
˘˘  ,
=
˘˘- .
opts
˘˘/ 3
.
˘˘3 4
SecondRunId
˘˘4 ?
}
˙˙ 
;
˙˙ 
shellResult
˚˚ '
.
˚˚' (
Rules
˚˚( -
.
˚˚- .
AddRange
˚˚. 6
(
˚˚6 7
analyzer
˚˚7 ?
.
˚˚? @
Analyze
˚˚@ G
(
˚˚G H
ruleFile
˚˚H P
.
˚˚P Q
Rules
˚˚Q V
,
˚˚V W

innerShell
˚˚X b
)
˚˚b c
)
˚˚c d
;
˚˚d e
break
¸¸ !
;
¸¸! "
}
˝˝ 
}
˛˛ 
shellResult
ÄÄ 
.
ÄÄ 
Analysis
ÄÄ $
=
ÄÄ% &
shellResult
ÄÄ' 2
.
ÄÄ2 3
Rules
ÄÄ3 8
.
ÄÄ8 9
Count
ÄÄ9 >
>
ÄÄ? @
$num
ÄÄA B
?
ÄÄC D
shellResult
ÄÄE P
.
ÄÄP Q
Rules
ÄÄQ V
.
ÄÄV W
Max
ÄÄW Z
(
ÄÄZ [
x
ÄÄ[ \
=>
ÄÄ] _
(
ÄÄ` a
(
ÄÄa b
AsaRule
ÄÄb i
)
ÄÄi j
x
ÄÄj k
)
ÄÄk l
.
ÄÄl m
Flag
ÄÄm q
)
ÄÄq r
:
ÄÄs t
ruleFile
ÄÄu }
.
ÄÄ} ~
DefaultLevelsÄÄ~ ã
[ÄÄã å
shellResultÄÄå ó
.ÄÄó ò

ResultTypeÄÄò ¢
]ÄÄ¢ £
;ÄÄ£ §
results
ÅÅ 
.
ÅÅ 
TryAdd
ÅÅ 
(
ÅÅ 
(
ÅÅ  
monitorResult
ÅÅ  -
.
ÅÅ- .

ResultType
ÅÅ. 8
,
ÅÅ8 9
monitorResult
ÅÅ: G
.
ÅÅG H

ChangeType
ÅÅH R
)
ÅÅR S
,
ÅÅS T
new
ÅÅU X
List
ÅÅY ]
<
ÅÅ] ^
CompareResult
ÅÅ^ k
>
ÅÅk l
(
ÅÅl m
)
ÅÅm n
)
ÅÅn o
;
ÅÅo p
results
ÇÇ 
[
ÇÇ 
(
ÇÇ 
monitorResult
ÇÇ &
.
ÇÇ& '

ResultType
ÇÇ' 1
,
ÇÇ1 2
monitorResult
ÇÇ3 @
.
ÇÇ@ A

ChangeType
ÇÇA K
)
ÇÇK L
]
ÇÇL M
.
ÇÇM N
Add
ÇÇN Q
(
ÇÇQ R
shellResult
ÇÇR ]
)
ÇÇ] ^
;
ÇÇ^ _
}
ÉÉ 
)
ÉÉ 
;
ÉÉ 
return
ÑÑ 
results
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
private
áá 
static
áá 
	ASA_ERROR
áá  #
RunVerifyRulesCommand
áá! 6
(
áá6 7
VerifyOptions
áá7 D
opts
ááE I
)
ááI J
{
àà 	
var
ââ 
analyzer
ââ 
=
ââ 
new
ââ 
AsaAnalyzer
ââ *
(
ââ* +
new
ââ+ .
AnalyzerOptions
ââ/ >
(
ââ> ?
opts
ââ? C
.
ââC D

RunScripts
ââD N
)
ââN O
)
ââO P
;
ââP Q
var
ää 
ruleFile
ää 
=
ää )
LoadRulesFromFileOrEmbedded
ää 6
(
ää6 7
opts
ää7 ;
.
ää; <
AnalysisFile
ää< H
)
ääH I
;
ääI J
if
ãã 
(
ãã 
!
ãã 
ruleFile
ãã 
.
ãã 
Rules
ãã 
.
ãã  
Any
ãã  #
(
ãã# $
)
ãã$ %
)
ãã% &
{
åå 
Log
çç 
.
çç 
Warning
çç 
(
çç 
Strings
çç #
.
çç# $
Get
çç$ '
(
çç' (
$str
çç( 5
)
çç5 6
)
çç6 7
;
çç7 8
return
éé 
	ASA_ERROR
éé  
.
éé  !
INVALID_RULES
éé! .
;
éé. /
}
èè 
var
êê 

violations
êê 
=
êê 
analyzer
êê %
.
êê% &!
EnumerateRuleIssues
êê& 9
(
êê9 :
ruleFile
êê: B
.
êêB C
Rules
êêC H
)
êêH I
;
êêI J
OAT
ëë 
.
ëë 
Utils
ëë 
.
ëë 
Strings
ëë 
.
ëë 
Setup
ëë #
(
ëë# $
)
ëë$ %
;
ëë% &
OAT
íí 
.
íí 
Utils
íí 
.
íí 
Helpers
íí 
.
íí 
PrintViolations
íí -
(
íí- .

violations
íí. 8
)
íí8 9
;
íí9 :
if
ìì 
(
ìì 

violations
ìì 
.
ìì 
Any
ìì 
(
ìì 
)
ìì  
)
ìì  !
{
îî 
Log
ïï 
.
ïï 
Error
ïï 
(
ïï 
$str
ïï D
,
ïïD E

violations
ïïF P
.
ïïP Q
Count
ïïQ V
(
ïïV W
)
ïïW X
,
ïïX Y
opts
ïïZ ^
.
ïï^ _
AnalysisFile
ïï_ k
??
ïïl n
$str
ïïo y
)
ïïy z
;
ïïz {
return
ññ 
	ASA_ERROR
ññ  
.
ññ  !
INVALID_RULES
ññ! .
;
ññ. /
}
óó 
Log
òò 
.
òò 
Information
òò 
(
òò 
$str
òò @
,
òò@ A
ruleFile
òòB J
.
òòJ K
Rules
òòK P
.
òòP Q
Count
òòQ V
(
òòV W
)
òòW X
)
òòX Y
;
òòY Z
return
ôô 
	ASA_ERROR
ôô 
.
ôô 
NONE
ôô !
;
ôô! "
}
öö 	
internal
úú 
static
úú 
void
úú "
InsertCompareResults
úú 1
(
úú1 2"
ConcurrentDictionary
úú2 F
<
úúF G
(
úúG H
RESULT_TYPE
úúH S
,
úúS T
CHANGE_TYPE
úúU `
)
úú` a
,
úúa b
List
úúc g
<
úúg h
CompareResult
úúh u
>
úúu v
>
úúv w
results
úúx 
,úú Ä
stringúúÅ á
?úúá à

FirstRunIdúúâ ì
,úúì î
stringúúï õ
SecondRunIdúúú ß
,úúß ®
stringúú© Ø
AnalysesHashúú∞ º
)úúº Ω
{
ùù 	
if
ûû 
(
ûû 
DatabaseManager
ûû 
is
ûû  "
null
ûû# '
)
ûû' (
{
üü 
Log
†† 
.
†† 
Error
†† 
(
†† 
$str
†† 3
,
††3 4
$str
††5 K
)
††K L
;
††L M
return
°° 
;
°° 
}
¢¢ 
DatabaseManager
££ 
.
££ 
InsertCompareRun
££ ,
(
££, -

FirstRunId
££- 7
,
££7 8
SecondRunId
££9 D
,
££D E
AnalysesHash
££F R
,
££R S

RUN_STATUS
££T ^
.
££^ _
RUNNING
££_ f
)
££f g
;
££g h
foreach
§§ 
(
§§ 
var
§§ 
key
§§ 
in
§§ 
results
§§  '
.
§§' (
Keys
§§( ,
)
§§, -
{
•• 
if
¶¶ 
(
¶¶ 
results
¶¶ 
.
¶¶ 
TryGetValue
¶¶ '
(
¶¶' (
key
¶¶( +
,
¶¶+ ,
out
¶¶- 0
List
¶¶1 5
<
¶¶5 6
CompareResult
¶¶6 C
>
¶¶C D
?
¶¶D E
obj
¶¶F I
)
¶¶I J
)
¶¶J K
{
ßß 
if
®® 
(
®® 
obj
®® 
is
®® 
List
®® #
<
®®# $
CompareResult
®®$ 1
>
®®1 2
Queue
®®3 8
)
®®8 9
{
©© 
foreach
™™ 
(
™™  !
var
™™! $
result
™™% +
in
™™, .
Queue
™™/ 4
)
™™4 5
{
´´ 
DatabaseManager
¨¨ +
.
¨¨+ ,
InsertAnalyzed
¨¨, :
(
¨¨: ;
result
¨¨; A
)
¨¨A B
;
¨¨B C
}
≠≠ 
}
ÆÆ 
}
ØØ 
}
∞∞ 
DatabaseManager
±± 
.
±± 
UpdateCompareRun
±± ,
(
±±, -

FirstRunId
±±- 7
,
±±7 8
SecondRunId
±±9 D
,
±±D E

RUN_STATUS
±±F P
.
±±P Q
	COMPLETED
±±Q Z
)
±±Z [
;
±±[ \
DatabaseManager
≥≥ 
.
≥≥ 
Commit
≥≥ "
(
≥≥" #
)
≥≥# $
;
≥≥$ %
}
¥¥ 	
private
∂∂ 
static
∂∂ 
void
∂∂ 

SetupOrDie
∂∂ &
(
∂∂& '
string
∂∂' -
path
∂∂. 2
,
∂∂2 3

DBSettings
∂∂4 >
?
∂∂> ?
dbSettingsIn
∂∂@ L
=
∂∂M N
null
∂∂O S
)
∂∂S T
{
∑∑ 	
DatabaseManager
∏∏ 
=
∏∏ 
new
∏∏ !#
SqliteDatabaseManager
∏∏" 7
(
∏∏7 8
path
∏∏8 <
,
∏∏< =
dbSettingsIn
∏∏> J
)
∏∏J K
;
∏∏K L
var
ππ 
	errorCode
ππ 
=
ππ 
DatabaseManager
ππ +
.
ππ+ ,
Setup
ππ, 1
(
ππ1 2
)
ππ2 3
;
ππ3 4
if
ªª 
(
ªª 
	errorCode
ªª 
!=
ªª 
	ASA_ERROR
ªª &
.
ªª& '
NONE
ªª' +
)
ªª+ ,
{
ºº 
Log
ΩΩ 
.
ΩΩ 
Fatal
ΩΩ 
(
ΩΩ #
AttackSurfaceAnalyzer
ΩΩ /
.
ΩΩ/ 0
Utils
ΩΩ0 5
.
ΩΩ5 6
Strings
ΩΩ6 =
.
ΩΩ= >
Get
ΩΩ> A
(
ΩΩA B
$str
ΩΩB Y
)
ΩΩY Z
)
ΩΩZ [
;
ΩΩ[ \
Environment
ææ 
.
ææ 
Exit
ææ  
(
ææ  !
(
ææ! "
int
ææ" %
)
ææ% &
	errorCode
ææ& /
)
ææ/ 0
;
ææ0 1
}
øø 
}
¿¿ 	
private
¬¬ 
static
¬¬ 
	ASA_ERROR
¬¬  
RunGuiCommand
¬¬! .
(
¬¬. /
GuiCommandOptions
¬¬/ @
opts
¬¬A E
)
¬¬E F
{
√√ 	
var
ƒƒ 
server
ƒƒ 
=
ƒƒ 
Host
ƒƒ 
.
ƒƒ "
CreateDefaultBuilder
ƒƒ 2
(
ƒƒ2 3
Array
ƒƒ3 8
.
ƒƒ8 9
Empty
ƒƒ9 >
<
ƒƒ> ?
string
ƒƒ? E
>
ƒƒE F
(
ƒƒF G
)
ƒƒG H
)
ƒƒH I
.
»» &
ConfigureWebHostDefaults
»» )
(
»») *

webBuilder
»»* 4
=>
»»5 7
{
…… 

webBuilder
   
.
   

UseStartup
   )
<
  ) *
Startup
  * 1
>
  1 2
(
  2 3
)
  3 4
;
  4 5
}
ÀÀ 
)
ÀÀ 
.
ÃÃ 
Build
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
if
ŒŒ 
(
ŒŒ 
!
ŒŒ 
opts
ŒŒ 
.
ŒŒ 
NoLaunch
ŒŒ 
)
ŒŒ 
{
œœ 
(
–– 
(
–– 
Action
–– 
)
–– 
(
–– 
async
–– 
(
––  !
)
––! "
=>
––# %
{
—— 
await
““ 
Task
““ 
.
““ 
Run
““ "
(
““" #
(
““# $
)
““$ %
=>
““& (!
SleepAndOpenBrowser
““) <
(
““< =
$num
““= A
)
““A B
)
““B C
.
““C D
ConfigureAwait
““D R
(
““R S
false
““S X
)
““X Y
;
““Y Z
}
”” 
)
”” 
)
”” 
(
”” 
)
”” 
;
”” 
}
‘‘ 
server
÷÷ 
.
÷÷ 
Run
÷÷ 
(
÷÷ 
)
÷÷ 
;
÷÷ 
return
◊◊ 
$num
◊◊ 
;
◊◊ 
}
ÿÿ 	
private
⁄⁄ 
static
⁄⁄ 
void
⁄⁄ !
SleepAndOpenBrowser
⁄⁄ /
(
⁄⁄/ 0
int
⁄⁄0 3
sleep
⁄⁄4 9
)
⁄⁄9 :
{
€€ 	
Thread
‹‹ 
.
‹‹ 
Sleep
‹‹ 
(
‹‹ 
sleep
‹‹ 
)
‹‹ 
;
‹‹  

AsaHelpers
›› 
.
›› 
OpenBrowser
›› "
(
››" #
new
››# &
System
››' -
.
››- .
Uri
››. 1
(
››1 2
$str
››2 I
)
››I J
)
››J K
;
››K L
}
ﬁﬁ 	
[
‡‡ 	
System
‡‡	 
.
‡‡ 
Diagnostics
‡‡ 
.
‡‡ 
CodeAnalysis
‡‡ (
.
‡‡( )
SuppressMessage
‡‡) 8
(
‡‡8 9
$str
‡‡9 @
,
‡‡@ A
$str
‡‡B z
,
‡‡z {
Justification‡‡| â
=‡‡ä ã
$str‡‡å ó
)‡‡ó ò
]‡‡ò ô
[
·· 	
System
··	 
.
·· 
Diagnostics
·· 
.
·· 
CodeAnalysis
·· (
.
··( )
SuppressMessage
··) 8
(
··8 9
$str
··9 H
,
··H I
$str
··J j
,
··j k
Justification
··l y
=
··z {
$str··| á
)··á à
]··à â
private
‚‚ 
static
‚‚ 
	ASA_ERROR
‚‚  
RunConfigCommand
‚‚! 1
(
‚‚1 2"
ConfigCommandOptions
‚‚2 F
opts
‚‚G K
)
‚‚K L
{
„„ 	
if
‰‰ 
(
‰‰ 
opts
‰‰ 
.
‰‰ 
ResetDatabase
‰‰ "
)
‰‰" #
{
ÂÂ 
var
ÊÊ 
filename
ÊÊ 
=
ÊÊ 
opts
ÊÊ #
.
ÊÊ# $
DatabaseFilename
ÊÊ$ 4
;
ÊÊ4 5
DatabaseManager
ÁÁ 
.
ÁÁ  
Destroy
ÁÁ  '
(
ÁÁ' (
opts
ÁÁ( ,
.
ÁÁ, -
DatabaseFilename
ÁÁ- =
)
ÁÁ= >
;
ÁÁ> ?
Log
ËË 
.
ËË 
Information
ËË 
(
ËË  
Strings
ËË  '
.
ËË' (
Get
ËË( +
(
ËË+ ,
$str
ËË, ?
)
ËË? @
,
ËË@ A
filename
ËËB J
)
ËËJ K
;
ËËK L
}
ÈÈ 
else
ÍÍ 
{
ÎÎ 
SetupDatabase
ÏÏ 
(
ÏÏ 
opts
ÏÏ "
)
ÏÏ" #
;
ÏÏ# $
if
ÌÌ 
(
ÌÌ 
DatabaseManager
ÌÌ #
is
ÌÌ$ &
null
ÌÌ' +
)
ÌÌ+ ,
{
ÓÓ 
Log
ÔÔ 
.
ÔÔ 
Error
ÔÔ 
(
ÔÔ 
$str
ÔÔ 7
,
ÔÔ7 8
$str
ÔÔ9 K
)
ÔÔK L
;
ÔÔL M
return
 
	ASA_ERROR
 $
.
$ %
DATABASE_NULL
% 2
;
2 3
}
ÒÒ 
if
ÚÚ 
(
ÚÚ 
opts
ÚÚ 
.
ÚÚ 
ListRuns
ÚÚ !
)
ÚÚ! "
{
ÛÛ 
if
ÙÙ 
(
ÙÙ 
DatabaseManager
ÙÙ '
.
ÙÙ' (
FirstRun
ÙÙ( 0
)
ÙÙ0 1
{
ıı 
Log
ˆˆ 
.
ˆˆ 
Warning
ˆˆ #
(
ˆˆ# $
Strings
ˆˆ$ +
.
ˆˆ+ ,
Get
ˆˆ, /
(
ˆˆ/ 0
$str
ˆˆ0 G
)
ˆˆG H
,
ˆˆH I
opts
ˆˆJ N
.
ˆˆN O
DatabaseFilename
ˆˆO _
)
ˆˆ_ `
;
ˆˆ` a
}
˜˜ 
else
¯¯ 
{
˘˘ 
Log
˙˙ 
.
˙˙ 
Information
˙˙ '
(
˙˙' (
Strings
˙˙( /
.
˙˙/ 0
Get
˙˙0 3
(
˙˙3 4
$str
˙˙4 M
)
˙˙M N
,
˙˙N O
opts
˙˙P T
.
˙˙T U
DatabaseFilename
˙˙U e
)
˙˙e f
;
˙˙f g
List
˚˚ 
<
˚˚ 
string
˚˚ #
>
˚˚# $
CollectRuns
˚˚% 0
=
˚˚1 2
DatabaseManager
˚˚3 B
.
˚˚B C
GetRuns
˚˚C J
(
˚˚J K
RUN_TYPE
˚˚K S
.
˚˚S T
COLLECT
˚˚T [
)
˚˚[ \
;
˚˚\ ]
if
¸¸ 
(
¸¸ 
CollectRuns
¸¸ '
.
¸¸' (
Count
¸¸( -
>
¸¸. /
$num
¸¸0 1
)
¸¸1 2
{
˝˝ 
Log
˛˛ 
.
˛˛  
Information
˛˛  +
(
˛˛+ ,
Strings
˛˛, 3
.
˛˛3 4
Get
˛˛4 7
(
˛˛7 8
$str
˛˛8 ?
)
˛˛? @
,
˛˛@ A
Strings
˛˛B I
.
˛˛I J
Get
˛˛J M
(
˛˛M N
$str
˛˛N h
)
˛˛h i
)
˛˛i j
;
˛˛j k
foreach
ˇˇ #
(
ˇˇ$ %
string
ˇˇ% +
runId
ˇˇ, 1
in
ˇˇ2 4
CollectRuns
ˇˇ5 @
)
ˇˇ@ A
{
ÄÄ 
var
ÅÅ  #
run
ÅÅ$ '
=
ÅÅ( )
DatabaseManager
ÅÅ* 9
.
ÅÅ9 :
GetRun
ÅÅ: @
(
ÅÅ@ A
runId
ÅÅA F
)
ÅÅF G
;
ÅÅG H
if
ÉÉ  "
(
ÉÉ# $
run
ÉÉ$ '
is
ÉÉ( *
AsaRun
ÉÉ+ 1
)
ÉÉ1 2
{
ÑÑ  !
Log
ÖÖ$ '
.
ÖÖ' (
Information
ÖÖ( 3
(
ÖÖ3 4
$str
ÖÖ4 ]
,
ÖÖ] ^
run
ÜÜ$ '
.
ÜÜ' (
	Timestamp
ÜÜ( 1
,
ÜÜ1 2
run
áá$ '
.
áá' (
Version
áá( /
,
áá/ 0
run
àà$ '
.
àà' (
RunId
àà( -
)
àà- .
;
àà. /
var
ää$ '"
resultTypesAndCounts
ää( <
=
ää= >
DatabaseManager
ää? N
.
ääN O%
GetResultTypesAndCounts
ääO f
(
ääf g
run
ääg j
.
ääj k
RunId
ääk p
)
ääp q
;
ääq r
foreach
åå$ +
(
åå, -
var
åå- 0
kvPair
åå1 7
in
åå8 :"
resultTypesAndCounts
åå; O
)
ååO P
{
çç$ %
Log
éé( +
.
éé+ ,
Information
éé, 7
(
éé7 8
$str
éé8 C
,
ééC D
kvPair
ééE K
.
ééK L
Key
ééL O
,
ééO P
kvPair
ééQ W
.
ééW X
Value
ééX ]
)
éé] ^
;
éé^ _
}
èè$ %
}
êê  !
}
ëë 
}
íí 
else
ìì 
{
îî 
Log
ïï 
.
ïï  
Information
ïï  +
(
ïï+ ,
Strings
ïï, 3
.
ïï3 4
Get
ïï4 7
(
ïï7 8
$str
ïï8 G
)
ïïG H
)
ïïH I
;
ïïI J
}
ññ 
List
òò 
<
òò 
string
òò #
>
òò# $
MonitorRuns
òò% 0
=
òò1 2
DatabaseManager
òò3 B
.
òòB C
GetRuns
òòC J
(
òòJ K
RUN_TYPE
òòK S
.
òòS T
MONITOR
òòT [
)
òò[ \
;
òò\ ]
if
ôô 
(
ôô 
MonitorRuns
ôô '
.
ôô' (
Count
ôô( -
>
ôô. /
$num
ôô0 1
)
ôô1 2
{
öö 
Log
õõ 
.
õõ  
Information
õõ  +
(
õõ+ ,
Strings
õõ, 3
.
õõ3 4
Get
õõ4 7
(
õõ7 8
$str
õõ8 ?
)
õõ? @
,
õõ@ A
Strings
õõB I
.
õõI J
Get
õõJ M
(
õõM N
$str
õõN h
)
õõh i
)
õõi j
;
õõj k
foreach
ùù #
(
ùù$ %
string
ùù% +

monitorRun
ùù, 6
in
ùù7 9
MonitorRuns
ùù: E
)
ùùE F
{
ûû 
var
üü  #
run
üü$ '
=
üü( )
DatabaseManager
üü* 9
.
üü9 :
GetRun
üü: @
(
üü@ A

monitorRun
üüA K
)
üüK L
;
üüL M
if
°°  "
(
°°# $
run
°°$ '
!=
°°( *
null
°°+ /
)
°°/ 0
{
¢¢  !
string
££$ *
output
££+ 1
=
££2 3
$"
££4 6
{
££6 7
run
££7 :
.
££: ;
RunId
££; @
}
££@ A
$str
££A B
{
££B C
run
££C F
.
££F G
	Timestamp
££G P
}
££P Q
$str
££Q R
{
££R S
run
££S V
.
££V W
Version
££W ^
}
££^ _
$str
££_ `
{
££` a
run
££a d
.
££d e
Type
££e i
}
££i j
"
££j k
;
££k l
Log
§§$ '
.
§§' (
Information
§§( 3
(
§§3 4
output
§§4 :
)
§§: ;
;
§§; <
Log
••$ '
.
••' (
Information
••( 3
(
••3 4
string
••4 :
.
••: ;
Join
••; ?
(
••? @
$char
••@ C
,
••C D
run
••E H
.
••H I
ResultTypes
••I T
.
••T U
Where
••U Z
(
••Z [
x
••[ \
=>
••] _
run
••` c
.
••c d
ResultTypes
••d o
.
••o p
Contains
••p x
(
••x y
x
••y z
)
••z {
)
••{ |
)
••| }
)
••} ~
;
••~ 
}
¶¶  !
}
ßß 
}
®® 
else
©© 
{
™™ 
Log
´´ 
.
´´  
Information
´´  +
(
´´+ ,
Strings
´´, 3
.
´´3 4
Get
´´4 7
(
´´7 8
$str
´´8 G
)
´´G H
)
´´H I
;
´´I J
}
¨¨ 
}
≠≠ 
}
ÆÆ 
if
∞∞ 
(
∞∞ 
opts
∞∞ 
.
∞∞ 
DeleteRunId
∞∞ $
!=
∞∞% '
null
∞∞( ,
)
∞∞, -
{
±± 
DatabaseManager
≤≤ #
.
≤≤# $
	DeleteRun
≤≤$ -
(
≤≤- .
opts
≤≤. 2
.
≤≤2 3
DeleteRunId
≤≤3 >
)
≤≤> ?
;
≤≤? @
}
≥≥ 
if
¥¥ 
(
¥¥ 
opts
¥¥ 
.
¥¥ 
TrimToLatest
¥¥ %
)
¥¥% &
{
µµ 
DatabaseManager
∂∂ #
.
∂∂# $
TrimToLatest
∂∂$ 0
(
∂∂0 1
)
∂∂1 2
;
∂∂2 3
}
∑∑ 
}
∏∏ 
return
ππ 
	ASA_ERROR
ππ 
.
ππ 
NONE
ππ !
;
ππ! "
}
∫∫ 	
private
ºº 
static
ºº 
	ASA_ERROR
ºº  %
RunExportCollectCommand
ºº! 8
(
ºº8 9)
ExportCollectCommandOptions
ºº9 T
opts
ººU Y
)
ººY Z
{
ΩΩ 	
if
ææ 
(
ææ 
DatabaseManager
ææ 
is
ææ  "
null
ææ# '
)
ææ' (
{
øø 
Log
¿¿ 
.
¿¿ 
Error
¿¿ 
(
¿¿ 
$str
¿¿ 3
,
¿¿3 4
$str
¿¿5 N
)
¿¿N O
;
¿¿O P
return
¡¡ 
	ASA_ERROR
¡¡  
.
¡¡  !
DATABASE_NULL
¡¡! .
;
¡¡. /
}
¬¬ 
if
√√ 
(
√√ 
opts
√√ 
.
√√ 

OutputPath
√√ 
!=
√√  "
null
√√# '
&&
√√( *
!
√√+ ,
	Directory
√√, 5
.
√√5 6
Exists
√√6 <
(
√√< =
opts
√√= A
.
√√A B

OutputPath
√√B L
)
√√L M
)
√√M N
{
ƒƒ 
Log
≈≈ 
.
≈≈ 
Fatal
≈≈ 
(
≈≈ 
Strings
≈≈ !
.
≈≈! "
Get
≈≈" %
(
≈≈% &
$str
≈≈& >
)
≈≈> ?
,
≈≈? @
opts
≈≈A E
.
≈≈E F

OutputPath
≈≈F P
)
≈≈P Q
;
≈≈Q R
return
∆∆ 
$num
∆∆ 
;
∆∆ 
}
«« 
if
…… 
(
…… 
opts
…… 
.
…… 
ExportSingleRun
…… $
)
……$ %
{
   
if
ÀÀ 
(
ÀÀ 
opts
ÀÀ 
.
ÀÀ 
SecondRunId
ÀÀ $
is
ÀÀ% '
null
ÀÀ( ,
)
ÀÀ, -
{
ÃÃ 
Log
ÕÕ 
.
ÕÕ 
Information
ÕÕ #
(
ÕÕ# $
$str
ÕÕ$ S
)
ÕÕS T
;
ÕÕT U
List
ŒŒ 
<
ŒŒ 
string
ŒŒ 
>
ŒŒ  
runIds
ŒŒ! '
=
ŒŒ( )
DatabaseManager
ŒŒ* 9
.
ŒŒ9 :
GetLatestRunIds
ŒŒ: I
(
ŒŒI J
$num
ŒŒJ K
,
ŒŒK L
RUN_TYPE
ŒŒM U
.
ŒŒU V
COLLECT
ŒŒV ]
)
ŒŒ] ^
;
ŒŒ^ _
if
œœ 
(
œœ 
runIds
œœ 
.
œœ 
Count
œœ $
<
œœ% &
$num
œœ' (
)
œœ( )
{
–– 
Log
—— 
.
—— 
Fatal
—— !
(
——! "
Strings
——" )
.
——) *
Get
——* -
(
——- .
$str
——. J
)
——J K
)
——K L
;
——L M
return
““ 
	ASA_ERROR
““ (
.
““( )

INVALID_ID
““) 3
;
““3 4
}
”” 
else
‘‘ 
{
’’ 
opts
◊◊ 
.
◊◊ 
SecondRunId
◊◊ (
=
◊◊) *
runIds
◊◊+ 1
.
◊◊1 2
First
◊◊2 7
(
◊◊7 8
)
◊◊8 9
;
◊◊9 :
opts
ÿÿ 
.
ÿÿ 

FirstRunId
ÿÿ '
=
ÿÿ( )
null
ÿÿ* .
;
ÿÿ. /
}
ŸŸ 
}
⁄⁄ 
}
€€ 
else
‹‹ 
if
‹‹ 
(
‹‹ 
opts
‹‹ 
.
‹‹ 

FirstRunId
‹‹ $
is
‹‹% '
null
‹‹( ,
||
‹‹- /
opts
‹‹0 4
.
‹‹4 5
SecondRunId
‹‹5 @
is
‹‹A C
null
‹‹D H
)
‹‹H I
{
›› 
Log
ﬁﬁ 
.
ﬁﬁ 
Information
ﬁﬁ 
(
ﬁﬁ  
$str
ﬁﬁ  N
)
ﬁﬁN O
;
ﬁﬁO P
List
ﬂﬂ 
<
ﬂﬂ 
string
ﬂﬂ 
>
ﬂﬂ 
runIds
ﬂﬂ #
=
ﬂﬂ$ %
DatabaseManager
ﬂﬂ& 5
.
ﬂﬂ5 6
GetLatestRunIds
ﬂﬂ6 E
(
ﬂﬂE F
$num
ﬂﬂF G
,
ﬂﬂG H
RUN_TYPE
ﬂﬂI Q
.
ﬂﬂQ R
COLLECT
ﬂﬂR Y
)
ﬂﬂY Z
;
ﬂﬂZ [
if
·· 
(
·· 
runIds
·· 
.
·· 
Count
··  
<
··! "
$num
··# $
)
··$ %
{
‚‚ 
Log
„„ 
.
„„ 
Fatal
„„ 
(
„„ 
Strings
„„ %
.
„„% &
Get
„„& )
(
„„) *
$str
„„* F
)
„„F G
)
„„G H
;
„„H I
System
‰‰ 
.
‰‰ 
Environment
‰‰ &
.
‰‰& '
Exit
‰‰' +
(
‰‰+ ,
-
‰‰, -
$num
‰‰- .
)
‰‰. /
;
‰‰/ 0
}
ÂÂ 
else
ÊÊ 
{
ÁÁ 
opts
ËË 
.
ËË 
SecondRunId
ËË $
=
ËË% &
runIds
ËË' -
.
ËË- .
First
ËË. 3
(
ËË3 4
)
ËË4 5
;
ËË5 6
opts
ÈÈ 
.
ÈÈ 

FirstRunId
ÈÈ #
=
ÈÈ$ %
runIds
ÈÈ& ,
.
ÈÈ, -
	ElementAt
ÈÈ- 6
(
ÈÈ6 7
$num
ÈÈ7 8
)
ÈÈ8 9
;
ÈÈ9 :
}
ÍÍ 
}
ÎÎ 
var
ÌÌ 
ruleFile
ÌÌ 
=
ÌÌ )
LoadRulesFromFileOrEmbedded
ÌÌ 6
(
ÌÌ6 7
opts
ÌÌ7 ;
.
ÌÌ; <
AnalysesFile
ÌÌ< H
)
ÌÌH I
;
ÌÌI J
if
ÓÓ 
(
ÓÓ 
!
ÓÓ 
ruleFile
ÓÓ 
.
ÓÓ 
Rules
ÓÓ 
.
ÓÓ  
Any
ÓÓ  #
(
ÓÓ# $
)
ÓÓ$ %
)
ÓÓ% &
{
ÔÔ 
Log
 
.
 
Warning
 
(
 
Strings
 #
.
# $
Get
$ '
(
' (
$str
( 5
)
5 6
)
6 7
;
7 8
return
ÒÒ 
	ASA_ERROR
ÒÒ  
.
ÒÒ  !
INVALID_RULES
ÒÒ! .
;
ÒÒ. /
}
ÚÚ 
Log
ÙÙ 
.
ÙÙ 
Information
ÙÙ 
(
ÙÙ 
Strings
ÙÙ #
.
ÙÙ# $
Get
ÙÙ$ '
(
ÙÙ' (
$str
ÙÙ( 3
)
ÙÙ3 4
,
ÙÙ4 5
opts
ÙÙ6 :
.
ÙÙ: ;

FirstRunId
ÙÙ; E
,
ÙÙE F
opts
ÙÙG K
.
ÙÙK L
SecondRunId
ÙÙL W
)
ÙÙW X
;
ÙÙX Y#
CompareCommandOptions
ˆˆ !
options
ˆˆ" )
=
ˆˆ* +
new
ˆˆ, /#
CompareCommandOptions
ˆˆ0 E
(
ˆˆE F
opts
ˆˆF J
.
ˆˆJ K

FirstRunId
ˆˆK U
,
ˆˆU V
opts
ˆˆW [
.
ˆˆ[ \
SecondRunId
ˆˆ\ g
)
ˆˆg h
{
˜˜ 
DatabaseFilename
¯¯  
=
¯¯! "
opts
¯¯# '
.
¯¯' (
DatabaseFilename
¯¯( 8
,
¯¯8 9
AnalysesFile
˘˘ 
=
˘˘ 
ruleFile
˘˘ '
,
˘˘' (
DisableAnalysis
˙˙ 
=
˙˙  !
opts
˙˙" &
.
˙˙& '
DisableAnalysis
˙˙' 6
,
˙˙6 7
SaveToDatabase
˚˚ 
=
˚˚  
opts
˚˚! %
.
˚˚% &
SaveToDatabase
˚˚& 4
,
˚˚4 5

RunScripts
¸¸ 
=
¸¸ 
opts
¸¸ !
.
¸¸! "

RunScripts
¸¸" ,
}
˝˝ 
;
˝˝ 
var
ˇˇ 
results
ˇˇ 
=
ˇˇ 
CompareRuns
ˇˇ %
(
ˇˇ% &
options
ˇˇ& -
)
ˇˇ- .
;
ˇˇ. /
var
ÄÄ 
analysesHash
ÄÄ 
=
ÄÄ 
options
ÄÄ &
.
ÄÄ& '
AnalysesFile
ÄÄ' 3
.
ÄÄ3 4
GetHash
ÄÄ4 ;
(
ÄÄ; <
)
ÄÄ< =
;
ÄÄ= >
if
ÅÅ 
(
ÅÅ 
opts
ÅÅ 
.
ÅÅ 
SaveToDatabase
ÅÅ #
)
ÅÅ# $
{
ÇÇ "
InsertCompareResults
ÉÉ $
(
ÉÉ$ %
results
ÉÉ% ,
,
ÉÉ, -
opts
ÉÉ. 2
.
ÉÉ2 3

FirstRunId
ÉÉ3 =
,
ÉÉ= >
opts
ÉÉ? C
.
ÉÉC D
SecondRunId
ÉÉD O
,
ÉÉO P
analysesHash
ÉÉQ ]
)
ÉÉ] ^
;
ÉÉ^ _
}
ÑÑ 
return
ÜÜ "
ExportCompareResults
ÜÜ '
(
ÜÜ' (
results
ÜÜ( /
,
ÜÜ/ 0
opts
ÜÜ1 5
,
ÜÜ5 6

AsaHelpers
ÜÜ7 A
.
ÜÜA B
MakeValidFileName
ÜÜB S
(
ÜÜS T
opts
ÜÜT X
.
ÜÜX Y

FirstRunId
ÜÜY c
+
ÜÜd e
$str
ÜÜf l
+
ÜÜm n
opts
ÜÜo s
.
ÜÜs t
SecondRunId
ÜÜt 
)ÜÜ Ä
,ÜÜÄ Å
analysesHashÜÜÇ é
,ÜÜé è
ruleFileÜÜê ò
.ÜÜò ô
RulesÜÜô û
)ÜÜû ü
;ÜÜü †
}
áá 	
private
ââ 
static
ââ 
	ASA_ERROR
ââ  "
ExportCompareResults
ââ! 5
(
ââ5 6"
ConcurrentDictionary
ââ6 J
<
ââJ K
(
ââK L
RESULT_TYPE
ââL W
,
ââW X
CHANGE_TYPE
ââY d
)
ââd e
,
ââe f
List
ââg k
<
ââk l
CompareResult
ââl y
>
âây z
>
ââz {
	resultsInââ| Ö
,ââÖ Ü
ExportOptionsââá î
optsââï ô
,ââô ö
stringââõ °
baseFileNameââ¢ Æ
,ââÆ Ø
stringââ∞ ∂
analysesHashââ∑ √
,ââ√ ƒ
IEnumerableââ≈ –
<ââ– —
AsaRuleââ— ÿ
>ââÿ Ÿ
rulesââ⁄ ﬂ
)ââﬂ ‡
{
ää 	
var
ãã 
results
ãã 
=
ãã 
	resultsIn
ãã #
.
ãã# $
Select
ãã$ *
(
ãã* +
x
ãã+ ,
=>
ãã- /
new
ãã0 3
KeyValuePair
ãã4 @
<
ãã@ A
string
ããA G
,
ããG H
object
ããI O
>
ããO P
(
ããP Q
$"
ããQ S
{
ããS T
x
ããT U
.
ããU V
Key
ããV Y
.
ããY Z
Item1
ããZ _
}
ãã_ `
$str
ãã` a
{
ããa b
x
ããb c
.
ããc d
Key
ããd g
.
ããg h
Item2
ããh m
}
ããm n
"
ããn o
,
ãão p
x
ããq r
.
ããr s
Value
ããs x
)
ããx y
)
ããy z
.
ããz {
ToDictionaryãã{ á
(ããá à
xããà â
=>ããä å
xããç é
.ããé è
Keyããè í
,ããí ì
xããî ï
=>ããñ ò
xããô ö
.ããö õ
Valueããõ †
)ãã† °
;ãã° ¢
JsonSerializer
åå 

serializer
åå %
=
åå& '
JsonSerializer
åå( 6
.
åå6 7
Create
åå7 =
(
åå= >
new
åå> A$
JsonSerializerSettings
ååB X
(
ååX Y
)
ååY Z
{
çç 

Formatting
éé 
=
éé 

Formatting
éé '
.
éé' (
Indented
éé( 0
,
éé0 1
NullValueHandling
èè !
=
èè" #
NullValueHandling
èè$ 5
.
èè5 6
Ignore
èè6 <
,
èè< ="
DefaultValueHandling
êê $
=
êê% &"
DefaultValueHandling
êê' ;
.
êê; <
Ignore
êê< B
,
êêB C

Converters
ëë 
=
ëë 
new
ëë  
List
ëë! %
<
ëë% &
JsonConverter
ëë& 3
>
ëë3 4
(
ëë4 5
)
ëë5 6
{
ëë7 8
new
ëë9 <!
StringEnumConverter
ëë= P
(
ëëP Q
)
ëëQ R
}
ëëS T
,
ëëT U
ContractResolver
íí  
=
íí! "
new
íí# &'
AsaExportContractResolver
íí' @
(
íí@ A
)
ííA B
}
ìì 
)
ìì 
;
ìì 
var
îî 

outputPath
îî 
=
îî 
opts
îî !
.
îî! "

OutputPath
îî" ,
;
îî, -
if
ïï 
(
ïï 

outputPath
ïï 
is
ïï 
null
ïï "
)
ïï" #
{
ññ 

outputPath
óó 
=
óó 
	Directory
óó &
.
óó& '!
GetCurrentDirectory
óó' :
(
óó: ;
)
óó; <
;
óó< =
}
òò 
var
ôô 
metadata
ôô 
=
ôô 

AsaHelpers
ôô %
.
ôô% &
GenerateMetadata
ôô& 6
(
ôô6 7
)
ôô7 8
;
ôô8 9
metadata
öö 
.
öö 
Add
öö 
(
öö 
$str
öö (
,
öö( )
analysesHash
öö* 6
)
öö6 7
;
öö7 8
if
õõ 
(
õõ 
opts
õõ 
.
õõ 
ExplodedOutput
õõ #
)
õõ# $
{
úú 
results
ùù 
.
ùù 
Add
ùù 
(
ùù 
$str
ùù &
,
ùù& '
metadata
ùù( 0
)
ùù0 1
;
ùù1 2
string
üü 
path
üü 
=
üü 
Path
üü "
.
üü" #
Combine
üü# *
(
üü* +

outputPath
üü+ 5
,
üü5 6

AsaHelpers
üü7 A
.
üüA B
MakeValidFileName
üüB S
(
üüS T
baseFileName
üüT `
)
üü` a
)
üüa b
;
üüb c
	Directory
†† 
.
†† 
CreateDirectory
†† )
(
††) *
path
††* .
)
††. /
;
††/ 0
foreach
°° 
(
°° 
var
°° 
key
°°  
in
°°! #
results
°°$ +
.
°°+ ,
Keys
°°, 0
)
°°0 1
{
¢¢ 
string
££ 
filePath
££ #
=
££$ %
Path
££& *
.
££* +
Combine
££+ 2
(
££2 3
path
££3 7
,
££7 8

AsaHelpers
££9 C
.
££C D
MakeValidFileName
££D U
(
££U V
key
££V Y
)
££Y Z
)
££Z [
;
££[ \
if
§§ 
(
§§ 
opts
§§ 
.
§§ 
OutputSarif
§§ (
)
§§( )
{
•• 
WriteSarifLog
¶¶ %
(
¶¶% &
new
¶¶& )

Dictionary
¶¶* 4
<
¶¶4 5
string
¶¶5 ;
,
¶¶; <
object
¶¶= C
>
¶¶C D
(
¶¶D E
)
¶¶E F
{
¶¶G H
{
¶¶I J
key
¶¶K N
,
¶¶N O
results
¶¶P W
[
¶¶W X
key
¶¶X [
]
¶¶[ \
}
¶¶] ^
}
¶¶_ `
,
¶¶` a
rules
¶¶b g
,
¶¶g h
filePath
¶¶i q
)
¶¶q r
;
¶¶r s
}
ßß 
else
®® 
{
©© 
using
™™ 
(
™™ 
StreamWriter
™™ +
sw
™™, .
=
™™/ 0
new
™™1 4
StreamWriter
™™5 A
(
™™A B
filePath
™™B J
)
™™J K
)
™™K L
{
´´ 
using
¨¨ !
(
¨¨" #

JsonWriter
¨¨# -
writer
¨¨. 4
=
¨¨5 6
new
¨¨7 :
JsonTextWriter
¨¨; I
(
¨¨I J
sw
¨¨J L
)
¨¨L M
)
¨¨M N
{
≠≠ 

serializer
ÆÆ  *
.
ÆÆ* +
	Serialize
ÆÆ+ 4
(
ÆÆ4 5
writer
ÆÆ5 ;
,
ÆÆ; <
results
ÆÆ= D
[
ÆÆD E
key
ÆÆE H
]
ÆÆH I
)
ÆÆI J
;
ÆÆJ K
}
ØØ 
}
∞∞ 
}
±± 
}
≤≤ 
Log
≥≥ 
.
≥≥ 
Information
≥≥ 
(
≥≥  
Strings
≥≥  '
.
≥≥' (
Get
≥≥( +
(
≥≥+ ,
$str
≥≥, =
)
≥≥= >
,
≥≥> ?
(
≥≥@ A
new
≥≥A D
DirectoryInfo
≥≥E R
(
≥≥R S
path
≥≥S W
)
≥≥W X
)
≥≥X Y
.
≥≥Y Z
FullName
≥≥Z b
)
≥≥b c
;
≥≥c d
}
¥¥ 
else
µµ 
{
∂∂ 
string
∑∑ 
path
∑∑ 
=
∑∑ 
Path
∑∑ "
.
∑∑" #
Combine
∑∑# *
(
∑∑* +

outputPath
∑∑+ 5
,
∑∑5 6

AsaHelpers
∑∑7 A
.
∑∑A B
MakeValidFileName
∑∑B S
(
∑∑S T
baseFileName
∑∑T `
+
∑∑a b
$str
∑∑c v
)
∑∑v w
)
∑∑w x
;
∑∑x y
var
∏∏ 
output
∏∏ 
=
∏∏ 
new
∏∏  

Dictionary
∏∏! +
<
∏∏+ ,
string
∏∏, 2
,
∏∏2 3
object
∏∏4 :
>
∏∏: ;
(
∏∏; <
)
∏∏< =
;
∏∏= >
output
ππ 
[
ππ 
$str
ππ  
]
ππ  !
=
ππ" #
results
ππ$ +
;
ππ+ ,
output
∫∫ 
[
∫∫ 
$str
∫∫ !
]
∫∫! "
=
∫∫# $
metadata
∫∫% -
;
∫∫- .
if
ºº 
(
ºº 
opts
ºº 
.
ºº 
OutputSarif
ºº $
)
ºº$ %
{
ΩΩ 
string
ææ 
	pathSarif
ææ $
=
ææ% &
Path
ææ' +
.
ææ+ ,
Combine
ææ, 3
(
ææ3 4

outputPath
ææ4 >
,
ææ> ?

AsaHelpers
ææ@ J
.
ææJ K
MakeValidFileName
ææK \
(
ææ\ ]
baseFileName
ææ] i
+
ææj k
$str
ææl |
)
ææ| }
)
ææ} ~
;
ææ~ 
WriteSarifLog
øø !
(
øø! "
output
øø" (
,
øø( )
rules
øø* /
,
øø/ 0
	pathSarif
øø1 :
)
øø: ;
;
øø; <
Log
¿¿ 
.
¿¿ 
Information
¿¿ #
(
¿¿# $
Strings
¿¿$ +
.
¿¿+ ,
Get
¿¿, /
(
¿¿/ 0
$str
¿¿0 A
)
¿¿A B
,
¿¿B C
(
¿¿D E
new
¿¿E H
FileInfo
¿¿I Q
(
¿¿Q R
	pathSarif
¿¿R [
)
¿¿[ \
)
¿¿\ ]
.
¿¿] ^
FullName
¿¿^ f
)
¿¿f g
;
¿¿g h
}
¡¡ 
else
¬¬ 
{
√√ 
using
≈≈ 
(
≈≈ 
StreamWriter
≈≈ '
sw
≈≈( *
=
≈≈+ ,
new
≈≈- 0
StreamWriter
≈≈1 =
(
≈≈= >
path
≈≈> B
)
≈≈B C
)
≈≈C D
{
∆∆ 
using
«« 
(
«« 

JsonWriter
«« )
writer
««* 0
=
««1 2
new
««3 6
JsonTextWriter
««7 E
(
««E F
sw
««F H
)
««H I
)
««I J
{
»» 

serializer
…… &
.
……& '
	Serialize
……' 0
(
……0 1
writer
……1 7
,
……7 8
output
……9 ?
)
……? @
;
……@ A
}
   
}
ÀÀ 
Log
ÃÃ 
.
ÃÃ 
Information
ÃÃ #
(
ÃÃ# $
Strings
ÃÃ$ +
.
ÃÃ+ ,
Get
ÃÃ, /
(
ÃÃ/ 0
$str
ÃÃ0 A
)
ÃÃA B
,
ÃÃB C
(
ÃÃD E
new
ÃÃE H
FileInfo
ÃÃI Q
(
ÃÃQ R
path
ÃÃR V
)
ÃÃV W
)
ÃÃW X
.
ÃÃX Y
FullName
ÃÃY a
)
ÃÃa b
;
ÃÃb c
}
ÕÕ 
}
ŒŒ 
return
œœ 
	ASA_ERROR
œœ 
.
œœ 
NONE
œœ !
;
œœ! "
}
–– 	
public
ÿÿ 
static
ÿÿ 
void
ÿÿ 
WriteSarifLog
ÿÿ (
(
ÿÿ( )

Dictionary
ÿÿ) 3
<
ÿÿ3 4
string
ÿÿ4 :
,
ÿÿ: ;
object
ÿÿ< B
>
ÿÿB C
output
ÿÿD J
,
ÿÿJ K
IEnumerable
ÿÿL W
<
ÿÿW X
AsaRule
ÿÿX _
>
ÿÿ_ `
rules
ÿÿa f
,
ÿÿf g
string
ÿÿh n
outputFilePath
ÿÿo }
)
ÿÿ} ~
{
ŸŸ 	
var
⁄⁄ 
log
⁄⁄ 
=
⁄⁄ 
GenerateSarifLog
⁄⁄ &
(
⁄⁄& '
output
⁄⁄' -
,
⁄⁄- .
rules
⁄⁄/ 4
)
⁄⁄4 5
;
⁄⁄5 6
var
‹‹ 
settings
‹‹ 
=
‹‹ 
new
‹‹ $
JsonSerializerSettings
‹‹ 5
(
‹‹5 6
)
‹‹6 7
{
›› 

Formatting
ﬁﬁ 
=
ﬁﬁ 

Formatting
ﬁﬁ '
.
ﬁﬁ' (
Indented
ﬁﬁ( 0
,
ﬁﬁ0 1
}
ﬂﬂ 
;
ﬂﬂ 
File
·· 
.
·· 
WriteAllText
·· 
(
·· 
outputFilePath
·· ,
,
··, -
JsonConvert
··. 9
.
··9 :
SerializeObject
··: I
(
··I J
log
··J M
,
··M N
settings
··O W
)
··W X
)
··X Y
;
··Y Z
}
‚‚ 	
public
‰‰ 
static
‰‰ 
SarifLog
‰‰ 
GenerateSarifLog
‰‰ /
(
‰‰/ 0

Dictionary
‰‰0 :
<
‰‰: ;
string
‰‰; A
,
‰‰A B
object
‰‰C I
>
‰‰I J
output
‰‰K Q
,
‰‰Q R
IEnumerable
‰‰S ^
<
‰‰^ _
AsaRule
‰‰_ f
>
‰‰f g
rules
‰‰h m
)
‰‰m n
{
ÂÂ 	
var
ÊÊ 
metadata
ÊÊ 
=
ÊÊ 
(
ÊÊ 

Dictionary
ÊÊ &
<
ÊÊ& '
string
ÊÊ' -
,
ÊÊ- .
string
ÊÊ/ 5
>
ÊÊ5 6
)
ÊÊ6 7
output
ÊÊ7 =
[
ÊÊ= >
$str
ÊÊ> H
]
ÊÊH I
;
ÊÊI J
var
ÁÁ 
results
ÁÁ 
=
ÁÁ 
(
ÁÁ 

Dictionary
ÁÁ %
<
ÁÁ% &
string
ÁÁ& ,
,
ÁÁ, -
object
ÁÁ. 4
>
ÁÁ4 5
)
ÁÁ5 6
output
ÁÁ6 <
[
ÁÁ< =
$str
ÁÁ= F
]
ÁÁF G
;
ÁÁG H
var
ËË 
version
ËË 
=
ËË 
metadata
ËË "
[
ËË" #
$str
ËË# 4
]
ËË4 5
;
ËË5 6
var
ÍÍ 
log
ÍÍ 
=
ÍÍ 
new
ÍÍ 
SarifLog
ÍÍ "
(
ÍÍ" #
)
ÍÍ# $
;
ÍÍ$ %
SarifVersion
ÎÎ 
sarifVersion
ÎÎ %
=
ÎÎ& '
SarifVersion
ÎÎ( 4
.
ÎÎ4 5
Current
ÎÎ5 <
;
ÎÎ< =
log
ÏÏ 
.
ÏÏ 
	SchemaUri
ÏÏ 
=
ÏÏ 
sarifVersion
ÏÏ (
.
ÏÏ( ) 
ConvertToSchemaUri
ÏÏ) ;
(
ÏÏ; <
)
ÏÏ< =
;
ÏÏ= >
log
ÌÌ 
.
ÌÌ 
Version
ÌÌ 
=
ÌÌ 
sarifVersion
ÌÌ &
;
ÌÌ& '
log
ÓÓ 
.
ÓÓ 
Runs
ÓÓ 
=
ÓÓ 
new
ÓÓ 
List
ÓÓ 
<
ÓÓ  
Run
ÓÓ  #
>
ÓÓ# $
(
ÓÓ$ %
)
ÓÓ% &
;
ÓÓ& '
var
ÔÔ 
run
ÔÔ 
=
ÔÔ 
new
ÔÔ 
Run
ÔÔ 
(
ÔÔ 
)
ÔÔ 
;
ÔÔ  
var
 
	artifacts
 
=
 
new
 
List
  $
<
$ %
Artifact
% -
>
- .
(
. /
)
/ 0
;
0 1
run
ÒÒ 
.
ÒÒ 
Tool
ÒÒ 
=
ÒÒ 
new
ÒÒ 
Tool
ÒÒ 
{
ÚÚ 
Driver
ÛÛ 
=
ÛÛ 
new
ÛÛ 
ToolComponent
ÛÛ *
{
ÙÙ 
Name
ıı 
=
ıı 
$"
ıı 
$str
ıı 4
"
ıı4 5
,
ıı5 6
InformationUri
ˆˆ "
=
ˆˆ# $
new
ˆˆ% (
Uri
ˆˆ) ,
(
ˆˆ, -
$str
ˆˆ- b
)
ˆˆb c
,
ˆˆc d
Organization
˜˜  
=
˜˜! "
$str
˜˜# .
,
˜˜. /
Version
¯¯ 
=
¯¯ 
version
¯¯ %
,
¯¯% &
}
˘˘ 
}
˙˙ 
;
˙˙ 
var
¸¸ "
reportingDescriptors
¸¸ $
=
¸¸% &
new
¸¸' *
List
¸¸+ /
<
¸¸/ 0!
ReportingDescriptor
¸¸0 C
>
¸¸C D
(
¸¸D E
)
¸¸E F
;
¸¸F G
foreach
˛˛ 
(
˛˛ 
var
˛˛ 
rule
˛˛ 
in
˛˛  
rules
˛˛! &
)
˛˛& '
{
ˇˇ 
if
ÄÄ 
(
ÄÄ 
!
ÄÄ "
reportingDescriptors
ÄÄ )
.
ÄÄ) *
Any
ÄÄ* -
(
ÄÄ- .
r
ÄÄ. /
=>
ÄÄ0 2
r
ÄÄ3 4
.
ÄÄ4 5
Id
ÄÄ5 7
==
ÄÄ8 :
rule
ÄÄ; ?
.
ÄÄ? @
Name
ÄÄ@ D
)
ÄÄD E
)
ÄÄE F
{
ÅÅ 
var
ÇÇ !
reportingDescriptor
ÇÇ +
=
ÇÇ, -
new
ÇÇ. 1!
ReportingDescriptor
ÇÇ2 E
(
ÇÇE F
)
ÇÇF G
{
ÉÉ 
FullDescription
ÑÑ '
=
ÑÑ( )
new
ÑÑ* -&
MultiformatMessageString
ÑÑ. F
(
ÑÑF G
)
ÑÑG H
{
ÑÑI J
Text
ÑÑK O
=
ÑÑP Q
rule
ÑÑR V
.
ÑÑV W
Description
ÑÑW b
}
ÑÑc d
,
ÑÑd e
Id
ÖÖ 
=
ÖÖ 
rule
ÖÖ !
.
ÖÖ! "
Name
ÖÖ" &
,
ÖÖ& '
}
ÜÜ 
;
ÜÜ !
reportingDescriptor
áá '
.
áá' ("
DefaultConfiguration
áá( <
=
áá= >
new
áá? B$
ReportingConfiguration
ááC Y
(
ááY Z
)
ááZ [
{
àà 
Level
ââ 
=
ââ "
GetSarifFailureLevel
ââ  4
(
ââ4 5
(
ââ5 6"
ANALYSIS_RESULT_TYPE
ââ6 J
)
ââJ K
rule
ââK O
.
ââO P
Severity
ââP X
)
ââX Y
}
ää 
;
ää !
reportingDescriptor
ãã '
.
ãã' (
SetProperty
ãã( 3
(
ãã3 4
$str
ãã4 A
,
ããA B
string
ããC I
.
ããI J
Join
ããJ N
(
ããN O
$char
ããO R
,
ããR S
rule
ããT X
.
ããX Y
ChangeTypes
ããY d
)
ããd e
)
ããe f
;
ããf g!
reportingDescriptor
åå '
.
åå' (
SetProperty
åå( 3
(
åå3 4
$str
åå4 ?
,
åå? @
string
ååA G
.
ååG H
Join
ååH L
(
ååL M
$char
ååM P
,
ååP Q
rule
ååR V
.
ååV W
	Platforms
ååW `
)
åå` a
)
ååa b
;
ååb c!
reportingDescriptor
çç '
.
çç' (
SetProperty
çç( 3
(
çç3 4
$str
çç4 @
,
çç@ A
rule
ççB F
.
ççF G

ResultType
ççG Q
.
ççQ R
ToString
ççR Z
(
ççZ [
)
çç[ \
)
çç\ ]
;
çç] ^"
reportingDescriptors
éé (
.
éé( )
Add
éé) ,
(
éé, -!
reportingDescriptor
éé- @
)
éé@ A
;
ééA B
}
èè 
}
êê 
run
íí 
.
íí 
Tool
íí 
.
íí 
Driver
íí 
.
íí 
Rules
íí !
=
íí" #
new
íí$ '
List
íí( ,
<
íí, -!
ReportingDescriptor
íí- @
>
íí@ A
(
ííA B"
reportingDescriptors
ííB V
)
ííV W
;
ííW X
var
îî 
sarifResults
îî 
=
îî 
new
îî "
List
îî# '
<
îî' (
Result
îî( .
>
îî. /
(
îî/ 0
)
îî0 1
;
îî1 2
foreach
ññ 
(
ññ 
var
ññ 
item
ññ 
in
ññ  
results
ññ! (
)
ññ( )
{
óó 
var
òò 
compareResults
òò "
=
òò# $
(
òò% &
List
òò& *
<
òò* +
CompareResult
òò+ 8
>
òò8 9
)
òò9 :
item
òò: >
.
òò> ?
Value
òò? D
;
òòD E
foreach
ôô 
(
ôô 
var
ôô 
compareResult
ôô *
in
ôô+ -
compareResults
ôô. <
)
ôô< =
{
öö 
if
õõ 
(
õõ 
!
õõ 
	artifacts
õõ "
.
õõ" #
Any
õõ# &
(
õõ& '
a
õõ' (
=>
õõ) +
a
õõ, -
.
õõ- .
Location
õõ. 6
.
õõ6 7
Description
õõ7 B
.
õõB C
Text
õõC G
.
õõG H
ToString
õõH P
(
õõP Q
)
õõQ R
==
õõS U
compareResult
õõV c
.
õõc d
Identity
õõd l
)
õõl m
)
õõm n
{
úú 
var
ùù 
artifact
ùù $
=
ùù% &
new
ùù' *
Artifact
ùù+ 3
{
ûû 
Location
üü $
=
üü% &
new
üü' *
ArtifactLocation
üü+ ;
(
üü; <
)
üü< =
{
†† 
Index
°°  %
=
°°& '
	artifacts
°°( 1
.
°°1 2
Count
°°2 7
,
°°7 8
Description
¢¢  +
=
¢¢, -
new
¢¢. 1
Message
¢¢2 9
(
¢¢9 :
)
¢¢: ;
{
¢¢< =
Text
¢¢> B
=
¢¢C D
compareResult
¢¢E R
.
¢¢R S
Identity
¢¢S [
}
¢¢\ ]
}
££ 
}
§§ 
;
§§ 
if
¶¶ 
(
¶¶ 
Uri
¶¶ 
.
¶¶  
	TryCreate
¶¶  )
(
¶¶) *
compareResult
¶¶* 7
.
¶¶7 8
Identity
¶¶8 @
,
¶¶@ A
UriKind
¶¶B I
.
¶¶I J 
RelativeOrAbsolute
¶¶J \
,
¶¶\ ]
out
¶¶^ a
Uri
¶¶b e
?
¶¶e f
outUri
¶¶g m
)
¶¶m n
)
¶¶n o
{
ßß 
artifact
®® $
.
®®$ %
Location
®®% -
.
®®- .
Uri
®®. 1
=
®®2 3
outUri
®®4 :
;
®®: ;
}
©© 
artifact
´´  
.
´´  !
SetProperty
´´! ,
(
´´, -
$str
´´- 7
,
´´7 8
compareResult
´´9 F
.
´´F G
Analysis
´´G O
.
´´O P
ToString
´´P X
(
´´X Y
)
´´Y Z
)
´´Z [
;
´´[ \
if
≠≠ 
(
≠≠ 
compareResult
≠≠ )
.
≠≠) *
Base
≠≠* .
!=
≠≠/ 1
null
≠≠2 6
)
≠≠6 7
{
ÆÆ 
artifact
ØØ $
.
ØØ$ %
SetProperty
ØØ% 0
(
ØØ0 1
$str
ØØ1 7
,
ØØ7 8
compareResult
ØØ9 F
.
ØØF G
Base
ØØG K
)
ØØK L
;
ØØL M
}
∞∞ 
if
≤≤ 
(
≤≤ 
!
≤≤ 
string
≤≤ #
.
≤≤# $ 
IsNullOrWhiteSpace
≤≤$ 6
(
≤≤6 7
compareResult
≤≤7 D
.
≤≤D E
	BaseRunId
≤≤E N
)
≤≤N O
)
≤≤O P
{
≥≥ 
artifact
¥¥ $
.
¥¥$ %
SetProperty
¥¥% 0
(
¥¥0 1
$str
¥¥1 <
,
¥¥< =
compareResult
¥¥> K
.
¥¥K L
	BaseRunId
¥¥L U
.
¥¥U V
ToString
¥¥V ^
(
¥¥^ _
)
¥¥_ `
)
¥¥` a
;
¥¥a b
}
µµ 
artifact
∑∑  
.
∑∑  !
SetProperty
∑∑! ,
(
∑∑, -
$str
∑∑- 9
,
∑∑9 :
compareResult
∑∑; H
.
∑∑H I

ChangeType
∑∑I S
.
∑∑S T
ToString
∑∑T \
(
∑∑\ ]
)
∑∑] ^
)
∑∑^ _
;
∑∑_ `
if
ππ 
(
ππ 
compareResult
ππ )
.
ππ) *
Compare
ππ* 1
!=
ππ2 4
null
ππ5 9
)
ππ9 :
{
∫∫ 
artifact
ªª $
.
ªª$ %
SetProperty
ªª% 0
(
ªª0 1
$str
ªª1 :
,
ªª: ;
compareResult
ªª< I
.
ªªI J
Compare
ªªJ Q
)
ªªQ R
;
ªªR S
}
ºº 
if
ææ 
(
ææ 
!
ææ 
string
ææ #
.
ææ# $ 
IsNullOrWhiteSpace
ææ$ 6
(
ææ6 7
compareResult
ææ7 D
.
ææD E
CompareRunId
ææE Q
)
ææQ R
)
ææR S
{
øø 
artifact
¿¿ $
.
¿¿$ %
SetProperty
¿¿% 0
(
¿¿0 1
$str
¿¿1 ?
,
¿¿? @
compareResult
¿¿A N
.
¿¿N O
CompareRunId
¿¿O [
)
¿¿[ \
;
¿¿\ ]
}
¡¡ 
if
√√ 
(
√√ 
compareResult
√√ )
.
√√) *
Diffs
√√* /
!=
√√0 2
null
√√3 7
&&
√√8 :
compareResult
√√; H
.
√√H I
Diffs
√√I N
.
√√N O
Count
√√O T
>
√√U V
$num
√√W X
)
√√X Y
{
ƒƒ 
artifact
≈≈ $
.
≈≈$ %
SetProperty
≈≈% 0
(
≈≈0 1
$str
≈≈1 8
,
≈≈8 9
compareResult
≈≈: G
.
≈≈G H
Diffs
≈≈H M
)
≈≈M N
;
≈≈N O
}
∆∆ 
artifact
»»  
.
»»  !
SetProperty
»»! ,
(
»», -
$str
»»- 9
,
»»9 :
compareResult
»»; H
.
»»H I

ResultType
»»I S
.
»»S T
ToString
»»T \
(
»»\ ]
)
»»] ^
)
»»^ _
;
»»_ `
	artifacts
   !
.
  ! "
Add
  " %
(
  % &
artifact
  & .
)
  . /
;
  / 0
}
ÀÀ 
foreach
ÕÕ 
(
ÕÕ 
var
ÕÕ  
rule
ÕÕ! %
in
ÕÕ& (
compareResult
ÕÕ) 6
.
ÕÕ6 7
Rules
ÕÕ7 <
)
ÕÕ< =
{
ŒŒ 
var
œœ 
sarifResult
œœ '
=
œœ( )
new
œœ* -
Result
œœ. 4
(
œœ4 5
)
œœ5 6
;
œœ6 7
int
–– 
index
–– !
=
––" #
	artifacts
––$ -
.
––- .
	FindIndex
––. 7
(
––7 8
a
––8 9
=>
––: <
a
––= >
.
––> ?
Location
––? G
.
––G H
Description
––H S
.
––S T
Text
––T X
==
––Y [
compareResult
––\ i
.
––i j
Identity
––j r
)
––r s
;
––s t
sarifResult
““ #
.
““# $
	Locations
““$ -
=
““. /
new
““0 3
List
““4 8
<
““8 9
Location
““9 A
>
““A B
(
““B C
)
““C D
{
”” 
new
‘‘ 
Location
‘‘  (
(
‘‘( )
)
‘‘) *
{
‘‘+ ,
PhysicalLocation
’’  0
=
’’1 2
new
’’3 6
PhysicalLocation
’’7 G
(
’’G H
)
’’H I
{
÷÷  !
ArtifactLocation
◊◊$ 4
=
◊◊5 6
new
◊◊7 :
ArtifactLocation
◊◊; K
(
◊◊K L
)
◊◊L M
{
ÿÿ$ %
Index
ŸŸ( -
=
ŸŸ. /
index
ŸŸ0 5
}
⁄⁄$ %
}
€€  !
}
‹‹ 
}
›› 
;
›› 
sarifResult
ﬂﬂ #
.
ﬂﬂ# $
Level
ﬂﬂ$ )
=
ﬂﬂ* +"
GetSarifFailureLevel
ﬂﬂ, @
(
ﬂﬂ@ A
(
ﬂﬂA B"
ANALYSIS_RESULT_TYPE
ﬂﬂB V
)
ﬂﬂV W
rule
ﬂﬂW [
.
ﬂﬂ[ \
Severity
ﬂﬂ\ d
)
ﬂﬂd e
;
ﬂﬂe f
if
·· 
(
·· 
!
·· 
string
·· #
.
··# $ 
IsNullOrWhiteSpace
··$ 6
(
··6 7
rule
··7 ;
.
··; <
Name
··< @
)
··@ A
)
··A B
{
‚‚ 
sarifResult
„„ '
.
„„' (
RuleId
„„( .
=
„„/ 0
rule
„„1 5
.
„„5 6
Name
„„6 :
;
„„: ;
}
‰‰ 
sarifResult
ÊÊ #
.
ÊÊ# $
Message
ÊÊ$ +
=
ÊÊ, -
new
ÊÊ. 1
Message
ÊÊ2 9
(
ÊÊ9 :
)
ÊÊ: ;
{
ÊÊ< =
Text
ÊÊ> B
=
ÊÊC D
string
ÊÊE K
.
ÊÊK L
Format
ÊÊL R
(
ÊÊR S
$str
ÊÊS c
,
ÊÊc d
rule
ÊÊe i
.
ÊÊi j
Name
ÊÊj n
,
ÊÊn o
compareResult
ÊÊp }
.
ÊÊ} ~
IdentityÊÊ~ Ü
,ÊÊÜ á
compareResultÊÊà ï
.ÊÊï ñ

ChangeTypeÊÊñ †
.ÊÊ† °
ToStringÊÊ° ©
(ÊÊ© ™
)ÊÊ™ ´
)ÊÊ´ ¨
}ÊÊ≠ Æ
;ÊÊÆ Ø
sarifResults
ËË $
.
ËË$ %
Add
ËË% (
(
ËË( )
sarifResult
ËË) 4
)
ËË4 5
;
ËË5 6
}
ÈÈ 
}
ÍÍ 
}
ÎÎ 
run
ÌÌ 
.
ÌÌ 
Results
ÌÌ 
=
ÌÌ 
sarifResults
ÌÌ &
;
ÌÌ& '
run
ÓÓ 
.
ÓÓ 
	Artifacts
ÓÓ 
=
ÓÓ 
	artifacts
ÓÓ %
;
ÓÓ% &
run
 
.
 
SetProperty
 
(
 
$str
 (
,
( )
metadata
* 2
[
2 3
$str
3 ?
]
? @
)
@ A
;
A B
run
ÒÒ 
.
ÒÒ 
SetProperty
ÒÒ 
(
ÒÒ 
$str
ÒÒ /
,
ÒÒ/ 0
metadata
ÒÒ1 9
[
ÒÒ9 :
$str
ÒÒ: M
]
ÒÒM N
)
ÒÒN O
;
ÒÒO P
run
ÚÚ 
.
ÚÚ 
SetProperty
ÚÚ 
(
ÚÚ 
$str
ÚÚ +
,
ÚÚ+ ,
metadata
ÚÚ- 5
[
ÚÚ5 6
$str
ÚÚ6 E
]
ÚÚE F
)
ÚÚF G
;
ÚÚG H
log
ÙÙ 
.
ÙÙ 
Runs
ÙÙ 
.
ÙÙ 
Add
ÙÙ 
(
ÙÙ 
run
ÙÙ 
)
ÙÙ 
;
ÙÙ 
return
ˆˆ 
log
ˆˆ 
;
ˆˆ 
}
˜˜ 	
private
˘˘ 
static
˘˘ 
FailureLevel
˘˘ #"
GetSarifFailureLevel
˘˘$ 8
(
˘˘8 9"
ANALYSIS_RESULT_TYPE
˘˘9 M
type
˘˘N R
)
˘˘R S
{
˙˙ 	
return
˚˚ 
type
˚˚ 
switch
˚˚ 
{
¸¸ "
ANALYSIS_RESULT_TYPE
˝˝ $
.
˝˝$ %
NONE
˝˝% )
or
˝˝* ,"
ANALYSIS_RESULT_TYPE
˛˛ $
.
˛˛$ %
VERBOSE
˛˛% ,
or
˛˛- /"
ANALYSIS_RESULT_TYPE
ˇˇ $
.
ˇˇ$ %
DEBUG
ˇˇ% *
or
ˇˇ+ -"
ANALYSIS_RESULT_TYPE
ÄÄ $
.
ÄÄ$ %
INFORMATION
ÄÄ% 0
=>
ÄÄ1 3
FailureLevel
ÄÄ4 @
.
ÄÄ@ A
Note
ÄÄA E
,
ÄÄE F"
ANALYSIS_RESULT_TYPE
ÅÅ $
.
ÅÅ$ %
WARNING
ÅÅ% ,
=>
ÅÅ- /
FailureLevel
ÅÅ0 <
.
ÅÅ< =
Warning
ÅÅ= D
,
ÅÅD E"
ANALYSIS_RESULT_TYPE
ÇÇ $
.
ÇÇ$ %
ERROR
ÇÇ% *
or
ÇÇ+ -"
ANALYSIS_RESULT_TYPE
ÇÇ. B
.
ÇÇB C
FATAL
ÇÇC H
=>
ÇÇI K
FailureLevel
ÇÇL X
.
ÇÇX Y
Error
ÇÇY ^
,
ÇÇ^ _
_
ÉÉ 
=>
ÉÉ 
FailureLevel
ÉÉ !
.
ÉÉ! "
None
ÉÉ" &
,
ÉÉ& '
}
ÑÑ 
;
ÑÑ 
}
ÖÖ 	
private
áá 
class
áá '
AsaExportContractResolver
áá /
:
áá0 1%
DefaultContractResolver
áá2 I
{
àà 	
public
ââ 
static
ââ 
readonly
ââ "'
AsaExportContractResolver
ââ# <
Instance
ââ= E
=
ââF G
new
ââH K'
AsaExportContractResolver
ââL e
(
ââe f
)
ââf g
;
ââg h
	protected
ãã 
override
ãã 
JsonProperty
ãã +
CreateProperty
ãã, :
(
ãã: ;

MemberInfo
ãã; E
member
ããF L
,
ããL M!
MemberSerialization
ããN a!
memberSerialization
ããb u
)
ããu v
{
åå 
JsonProperty
çç 
property
çç %
=
çç& '
base
çç( ,
.
çç, -
CreateProperty
çç- ;
(
çç; <
member
çç< B
,
ççB C!
memberSerialization
ççD W
)
ççW X
;
ççX Y
if
èè 
(
èè 
property
èè 
.
èè 
DeclaringType
èè *
==
èè+ -
typeof
èè. 4
(
èè4 5
RegistryObject
èè5 C
)
èèC D
)
èèD E
{
êê 
if
ëë 
(
ëë 
property
ëë  
.
ëë  !
PropertyName
ëë! -
==
ëë. 0
$str
ëë1 :
||
ëë; =
property
ëë> F
.
ëëF G
PropertyName
ëëG S
==
ëëT V
$str
ëëW _
)
ëë_ `
{
íí 
property
ìì  
.
ìì  !
ShouldSerialize
ìì! 0
=
ìì1 2
_
ìì3 4
=>
ìì5 7
{
ìì8 9
return
ìì: @
false
ììA F
;
ììF G
}
ììH I
;
ììI J
}
îî 
}
ïï 
if
óó 
(
óó 
property
óó 
.
óó 
DeclaringType
óó *
==
óó+ -
typeof
óó. 4
(
óó4 5
Rule
óó5 9
)
óó9 :
)
óó: ;
{
òò 
if
ôô 
(
ôô 
property
ôô  
.
ôô  !
PropertyName
ôô! -
!=
ôô. 0
$str
ôô1 7
&&
ôô8 :
property
ôô; C
.
ôôC D
PropertyName
ôôD P
!=
ôôQ S
$str
ôôT a
&&
ôôb d
property
ôôe m
.
ôôm n
PropertyName
ôôn z
!=
ôô{ }
$strôô~ Ñ
)ôôÑ Ö
{
öö 
property
õõ  
.
õõ  !
ShouldSerialize
õõ! 0
=
õõ1 2
_
õõ3 4
=>
õõ5 7
{
õõ8 9
return
õõ: @
false
õõA F
;
õõF G
}
õõH I
;
õõI J
}
úú 
}
ùù 
if
üü 
(
üü 
property
üü 
.
üü 
DeclaringType
üü *
==
üü+ -
typeof
üü. 4
(
üü4 5
CompareResult
üü5 B
)
üüB C
)
üüC D
{
†† 
if
°° 
(
°° 
property
°°  
.
°°  !
PropertyName
°°! -
==
°°. 0
$str
°°1 ?
)
°°? @
{
¢¢ 
property
££  
.
££  !
ShouldSerialize
££! 0
=
££1 2
_
££3 4
=>
££5 7
{
££8 9
return
££: @
false
££A F
;
££F G
}
££H I
;
££I J
}
§§ 
}
•• 
return
ßß 
property
ßß 
;
ßß  
}
®® 
}
©© 	
private
´´ 
static
´´ 
	ASA_ERROR
´´  %
RunExportMonitorCommand
´´! 8
(
´´8 9)
ExportMonitorCommandOptions
´´9 T
opts
´´U Y
)
´´Y Z
{
¨¨ 	
if
≠≠ 
(
≠≠ 
DatabaseManager
≠≠ 
is
≠≠  "
null
≠≠# '
)
≠≠' (
{
ÆÆ 
Log
ØØ 
.
ØØ 
Error
ØØ 
(
ØØ 
$str
ØØ 3
,
ØØ3 4
$str
ØØ5 N
)
ØØN O
;
ØØO P
return
∞∞ 
	ASA_ERROR
∞∞  
.
∞∞  !
DATABASE_NULL
∞∞! .
;
∞∞. /
}
±± 
if
≤≤ 
(
≤≤ 
opts
≤≤ 
.
≤≤ 
RunId
≤≤ 
is
≤≤ 
null
≤≤ "
)
≤≤" #
{
≥≥ 
var
¥¥ 
runIds
¥¥ 
=
¥¥ 
DatabaseManager
¥¥ ,
.
¥¥, -
GetLatestRunIds
¥¥- <
(
¥¥< =
$num
¥¥= >
,
¥¥> ?
RUN_TYPE
¥¥@ H
.
¥¥H I
MONITOR
¥¥I P
)
¥¥P Q
;
¥¥Q R
if
µµ 
(
µµ 
runIds
µµ 
.
µµ 
Any
µµ 
(
µµ 
)
µµ  
)
µµ  !
{
∂∂ 
opts
∑∑ 
.
∑∑ 
RunId
∑∑ 
=
∑∑  
runIds
∑∑! '
.
∑∑' (
First
∑∑( -
(
∑∑- .
)
∑∑. /
;
∑∑/ 0
}
∏∏ 
else
ππ 
{
∫∫ 
Log
ªª 
.
ªª 
Fatal
ªª 
(
ªª 
Strings
ªª %
.
ªª% &
Get
ªª& )
(
ªª) *
$str
ªª* F
)
ªªF G
)
ªªG H
;
ªªH I
return
ºº 
	ASA_ERROR
ºº $
.
ºº$ %

INVALID_ID
ºº% /
;
ºº/ 0
}
ΩΩ 
}
ææ 
var
¿¿ 
ruleFile
¿¿ 
=
¿¿ )
LoadRulesFromFileOrEmbedded
¿¿ 6
(
¿¿6 7
opts
¿¿7 ;
.
¿¿; <
AnalysesFile
¿¿< H
)
¿¿H I
;
¿¿I J
if
¡¡ 
(
¡¡ 
!
¡¡ 
ruleFile
¡¡ 
.
¡¡ 
Rules
¡¡ 
.
¡¡  
Any
¡¡  #
(
¡¡# $
)
¡¡$ %
)
¡¡% &
{
¬¬ 
Log
√√ 
.
√√ 
Warning
√√ 
(
√√ 
Strings
√√ #
.
√√# $
Get
√√$ '
(
√√' (
$str
√√( 5
)
√√5 6
)
√√6 7
;
√√7 8
return
ƒƒ 
	ASA_ERROR
ƒƒ  
.
ƒƒ  !
INVALID_RULES
ƒƒ! .
;
ƒƒ. /
}
≈≈ 
var
∆∆  
monitorCompareOpts
∆∆ "
=
∆∆# $
new
∆∆% (#
CompareCommandOptions
∆∆) >
(
∆∆> ?
null
∆∆? C
,
∆∆C D
opts
∆∆E I
.
∆∆I J
RunId
∆∆J O
)
∆∆O P
{
«« 
DisableAnalysis
»» 
=
»»  !
opts
»»" &
.
»»& '
DisableAnalysis
»»' 6
,
»»6 7
AnalysesFile
…… 
=
…… 
ruleFile
…… '
,
……' (*
ApplySubObjectRulesToMonitor
   ,
=
  - .
opts
  / 3
.
  3 4*
ApplySubObjectRulesToMonitor
  4 P
,
  P Q

RunScripts
ÀÀ 
=
ÀÀ 
opts
ÀÀ !
.
ÀÀ! "

RunScripts
ÀÀ" ,
}
ÃÃ 
;
ÃÃ 
var
ŒŒ 
monitorResult
ŒŒ 
=
ŒŒ 
AnalyzeMonitored
ŒŒ  0
(
ŒŒ0 1 
monitorCompareOpts
ŒŒ1 C
)
ŒŒC D
;
ŒŒD E
var
–– 
analysesHash
–– 
=
––  
monitorCompareOpts
–– 1
.
––1 2
AnalysesFile
––2 >
.
––> ?
GetHash
––? F
(
––F G
)
––G H
;
––H I
if
““ 
(
““ 
opts
““ 
.
““ 
SaveToDatabase
““ #
)
““# $
{
”” "
InsertCompareResults
‘‘ $
(
‘‘$ %
monitorResult
‘‘% 2
,
‘‘2 3
null
‘‘4 8
,
‘‘8 9
opts
‘‘: >
.
‘‘> ?
RunId
‘‘? D
,
‘‘D E
analysesHash
‘‘F R
)
‘‘R S
;
‘‘S T
}
’’ 
return
◊◊ "
ExportCompareResults
◊◊ '
(
◊◊' (
monitorResult
◊◊( 5
,
◊◊5 6
opts
◊◊7 ;
,
◊◊; <

AsaHelpers
◊◊= G
.
◊◊G H
MakeValidFileName
◊◊H Y
(
◊◊Y Z
opts
◊◊Z ^
.
◊◊^ _
RunId
◊◊_ d
)
◊◊d e
,
◊◊e f
analysesHash
◊◊g s
,
◊◊s t
ruleFile
◊◊u }
.
◊◊} ~
Rules◊◊~ É
)◊◊É Ñ
;◊◊Ñ Ö
}
ÿÿ 	
public
⁄⁄ 
static
⁄⁄ 
void
⁄⁄ 
WriteMonitorJson
⁄⁄ +
(
⁄⁄+ ,
string
⁄⁄, 2
RunId
⁄⁄3 8
,
⁄⁄8 9
int
⁄⁄: =

ResultType
⁄⁄> H
,
⁄⁄H I
string
⁄⁄J P

OutputPath
⁄⁄Q [
)
⁄⁄[ \
{
€€ 	
if
‹‹ 
(
‹‹ 
DatabaseManager
‹‹ 
is
‹‹  "
null
‹‹# '
)
‹‹' (
{
›› 
Log
ﬁﬁ 
.
ﬁﬁ 
Error
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ 3
,
ﬁﬁ3 4
$str
ﬁﬁ5 G
)
ﬁﬁG H
;
ﬁﬁH I
return
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 
var
·· "
invalidFileNameChars
·· $
=
··% &
Path
··' +
.
··+ ,!
GetInvalidPathChars
··, ?
(
··? @
)
··@ A
.
··A B
ToList
··B H
(
··H I
)
··I J
;
··J K

OutputPath
‚‚ 
=
‚‚ 
new
‚‚ 
string
‚‚ #
(
‚‚# $

OutputPath
‚‚$ .
.
‚‚. /
Select
‚‚/ 5
(
‚‚5 6
ch
‚‚6 8
=>
‚‚9 ;"
invalidFileNameChars
‚‚< P
.
‚‚P Q
Contains
‚‚Q Y
(
‚‚Y Z
ch
‚‚Z \
)
‚‚\ ]
?
‚‚^ _
Convert
‚‚` g
.
‚‚g h
ToChar
‚‚h n
(
‚‚n o#
invalidFileNameChars‚‚o É
.‚‚É Ñ
IndexOf‚‚Ñ ã
(‚‚ã å
ch‚‚å é
)‚‚é è
+‚‚ê ë
$num‚‚í î
)‚‚î ï
:‚‚ñ ó
ch‚‚ò ö
)‚‚ö õ
.‚‚õ ú
ToArray‚‚ú £
(‚‚£ §
)‚‚§ •
)‚‚• ¶
;‚‚¶ ß
List
‰‰ 
<
‰‰ 
FileMonitorEvent
‰‰ !
>
‰‰! "
records
‰‰# *
=
‰‰+ ,
DatabaseManager
‰‰- <
.
‰‰< =)
GetSerializedMonitorResults
‰‰= X
(
‰‰X Y
RunId
‰‰Y ^
)
‰‰^ _
;
‰‰_ `
JsonSerializer
ÊÊ 

serializer
ÊÊ %
=
ÊÊ& '
JsonSerializer
ÊÊ( 6
.
ÊÊ6 7
Create
ÊÊ7 =
(
ÊÊ= >
new
ÊÊ> A$
JsonSerializerSettings
ÊÊB X
(
ÊÊX Y
)
ÊÊY Z
{
ÁÁ 

Formatting
ËË 
=
ËË 

Formatting
ËË '
.
ËË' (
Indented
ËË( 0
,
ËË0 1
NullValueHandling
ÈÈ !
=
ÈÈ" #
NullValueHandling
ÈÈ$ 5
.
ÈÈ5 6
Ignore
ÈÈ6 <
,
ÈÈ< ="
DefaultValueHandling
ÍÍ $
=
ÍÍ% &"
DefaultValueHandling
ÍÍ' ;
.
ÍÍ; <
Ignore
ÍÍ< B
,
ÍÍB C

Converters
ÎÎ 
=
ÎÎ 
new
ÎÎ  
List
ÎÎ! %
<
ÎÎ% &
JsonConverter
ÎÎ& 3
>
ÎÎ3 4
(
ÎÎ4 5
)
ÎÎ5 6
{
ÎÎ7 8
new
ÎÎ9 <!
StringEnumConverter
ÎÎ= P
(
ÎÎP Q
)
ÎÎQ R
}
ÎÎS T
}
ÏÏ 
)
ÏÏ 
;
ÏÏ 
var
ÌÌ 
output
ÌÌ 
=
ÌÌ 
new
ÌÌ 

Dictionary
ÌÌ '
<
ÌÌ' (
string
ÌÌ( .
,
ÌÌ. /
Object
ÌÌ0 6
>
ÌÌ6 7
(
ÌÌ7 8
)
ÌÌ8 9
;
ÌÌ9 :
output
ÓÓ 
[
ÓÓ 
$str
ÓÓ 
]
ÓÓ 
=
ÓÓ 
records
ÓÓ  '
;
ÓÓ' (
output
ÔÔ 
[
ÔÔ 
$str
ÔÔ 
]
ÔÔ 
=
ÔÔ  

AsaHelpers
ÔÔ! +
.
ÔÔ+ ,
GenerateMetadata
ÔÔ, <
(
ÔÔ< =
)
ÔÔ= >
;
ÔÔ> ?
string
 
path
 
=
 
Path
 
.
 
Combine
 &
(
& '

OutputPath
' 1
,
1 2

AsaHelpers
3 =
.
= >
MakeValidFileName
> O
(
O P
RunId
P U
+
V W
$str
X f
+
g h
(
i j
(
j k
RESULT_TYPE
k v
)
v w

ResultTypew Å
)Å Ç
.Ç É
ToStringÉ ã
(ã å
)å ç
+é è
$strê õ
)õ ú
)ú ù
;ù û
using
ÚÚ 
(
ÚÚ 
StreamWriter
ÚÚ 
sw
ÚÚ  "
=
ÚÚ# $
new
ÚÚ% (
StreamWriter
ÚÚ) 5
(
ÚÚ5 6
path
ÚÚ6 :
)
ÚÚ: ;
)
ÚÚ; <
using
ÛÛ 
(
ÛÛ 

JsonWriter
ÛÛ 
writer
ÛÛ $
=
ÛÛ% &
new
ÛÛ' *
JsonTextWriter
ÛÛ+ 9
(
ÛÛ9 :
sw
ÛÛ: <
)
ÛÛ< =
)
ÛÛ= >
{
ÙÙ 

serializer
ıı 
.
ıı 
	Serialize
ıı $
(
ıı$ %
writer
ıı% +
,
ıı+ ,
output
ıı- 3
)
ıı3 4
;
ıı4 5
}
ˆˆ 
Log
¯¯ 
.
¯¯ 
Information
¯¯ 
(
¯¯ 
Strings
¯¯ #
.
¯¯# $
Get
¯¯$ '
(
¯¯' (
$str
¯¯( 9
)
¯¯9 :
,
¯¯: ;
(
¯¯< =
new
¯¯= @
FileInfo
¯¯A I
(
¯¯I J
path
¯¯J N
)
¯¯N O
)
¯¯O P
.
¯¯P Q
FullName
¯¯Q Y
)
¯¯Y Z
;
¯¯Z [
}
˘˘ 	
private
˚˚ 
static
˚˚ 
	ASA_ERROR
˚˚  
RunMonitorCommand
˚˚! 2
(
˚˚2 3#
MonitorCommandOptions
˚˚3 H
opts
˚˚I M
)
˚˚M N
{
¸¸ 	
if
˝˝ 
(
˝˝ 
DatabaseManager
˝˝ 
is
˝˝  "
null
˝˝# '
)
˝˝' (
{
˛˛ 
Log
ˇˇ 
.
ˇˇ 
Error
ˇˇ 
(
ˇˇ 
$str
ˇˇ 3
,
ˇˇ3 4
$str
ˇˇ5 H
)
ˇˇH I
;
ˇˇI J
return
ÄÄ 
	ASA_ERROR
ÄÄ  
.
ÄÄ  !
DATABASE_NULL
ÄÄ! .
;
ÄÄ. /
}
ÅÅ 
if
ÇÇ 
(
ÇÇ 
opts
ÇÇ 
.
ÇÇ 
RunId
ÇÇ 
is
ÇÇ 
string
ÇÇ $
)
ÇÇ$ %
{
ÉÉ 
opts
ÑÑ 
.
ÑÑ 
RunId
ÑÑ 
=
ÑÑ 
opts
ÑÑ !
.
ÑÑ! "
RunId
ÑÑ" '
.
ÑÑ' (
Trim
ÑÑ( ,
(
ÑÑ, -
)
ÑÑ- .
;
ÑÑ. /
}
ÖÖ 
else
ÜÜ 
{
áá 
opts
àà 
.
àà 
RunId
àà 
=
àà 
DateTime
àà %
.
àà% &
Now
àà& )
.
àà) *
ToString
àà* 2
(
àà2 3
$str
àà3 6
,
àà6 7
CultureInfo
àà8 C
.
ààC D
InvariantCulture
ààD T
)
ààT U
;
ààU V
}
ââ 
if
ãã 
(
ãã 
opts
ãã 
.
ãã 
	Overwrite
ãã 
)
ãã 
{
åå 
DatabaseManager
çç 
.
çç  
	DeleteRun
çç  )
(
çç) *
opts
çç* .
.
çç. /
RunId
çç/ 4
)
çç4 5
;
çç5 6
}
éé 
else
èè 
{
êê 
if
ëë 
(
ëë 
DatabaseManager
ëë #
.
ëë# $
GetRun
ëë$ *
(
ëë* +
opts
ëë+ /
.
ëë/ 0
RunId
ëë0 5
)
ëë5 6
!=
ëë7 9
null
ëë: >
)
ëë> ?
{
íí 
Log
ìì 
.
ìì 
Error
ìì 
(
ìì 
Strings
ìì %
.
ìì% &
Get
ìì& )
(
ìì) *
$str
ìì* @
)
ìì@ A
)
ììA B
;
ììB C
return
îî 
	ASA_ERROR
îî $
.
îî$ %
	UNIQUE_ID
îî% .
;
îî. /
}
ïï 
}
ññ 
var
óó 
run
óó 
=
óó 
new
óó 
AsaRun
óó  
(
óó  !
RunId
óó! &
:
óó& '
opts
óó( ,
.
óó, -
RunId
óó- 2
,
óó2 3
	Timestamp
óó4 =
:
óó= >
DateTime
óó? G
.
óóG H
Now
óóH K
,
óóK L
Version
óóM T
:
óóT U

AsaHelpers
óóV `
.
óó` a
GetVersionString
óóa q
(
óóq r
)
óór s
,
óós t
Platform
óóu }
:
óó} ~

AsaHelpersóó â
.óóâ ä
GetPlatformóóä ï
(óóï ñ
)óóñ ó
,óóó ò
newóóô ú
Listóóù °
<óó° ¢
RESULT_TYPEóó¢ ≠
>óó≠ Æ
(óóÆ Ø
)óóØ ∞
{óó± ≤
RESULT_TYPEóó≥ æ
.óóæ ø
FILEMONITORóóø  
}óóÀ Ã
,óóÃ Õ
RUN_TYPEóóŒ ÷
.óó÷ ◊
MONITORóó◊ ﬁ
)óóﬁ ﬂ
;óóﬂ ‡
DatabaseManager
ôô 
.
ôô 
	InsertRun
ôô %
(
ôô% &
run
ôô& )
)
ôô) *
;
ôô* +
var
õõ 
returnValue
õõ 
=
õõ 
	ASA_ERROR
õõ '
.
õõ' (
NONE
õõ( ,
;
õõ, -
if
ùù 
(
ùù 
opts
ùù 
.
ùù %
EnableFileSystemMonitor
ùù ,
)
ùù, -
{
ûû 
monitors
üü 
.
üü 
Add
üü 
(
üü 
new
üü  
FileSystemMonitor
üü! 2
(
üü2 3
opts
üü3 7
,
üü7 8
x
üü9 :
=>
üü; =
DatabaseManager
üü> M
.
üüM N
Write
üüN S
(
üüS T
x
üüT U
,
üüU V
opts
üüW [
.
üü[ \
RunId
üü\ a
)
üüa b
)
üüb c
)
üüc d
;
üüd e
}
†† 
if
¢¢ 
(
¢¢ 
monitors
¢¢ 
.
¢¢ 
Count
¢¢ 
==
¢¢ !
$num
¢¢" #
)
¢¢# $
{
££ 
Log
§§ 
.
§§ 
Warning
§§ 
(
§§ 
Strings
§§ #
.
§§# $
Get
§§$ '
(
§§' (
$str
§§( 8
)
§§8 9
)
§§9 :
;
§§: ;
returnValue
•• 
=
•• 
	ASA_ERROR
•• '
.
••' (
NO_COLLECTORS
••( 5
;
••5 6
}
¶¶ 
using
®® 
var
®® 
	exitEvent
®® 
=
®®  !
new
®®" %
ManualResetEvent
®®& 6
(
®®6 7
false
®®7 <
)
®®< =
;
®®= >
if
´´ 
(
´´ 
opts
´´ 
.
´´ 
Duration
´´ 
>
´´ 
$num
´´  !
)
´´! "
{
¨¨ 
Log
≠≠ 
.
≠≠ 
Information
≠≠ 
(
≠≠  
$str
≠≠  .
,
≠≠. /
Strings
≠≠0 7
.
≠≠7 8
Get
≠≠8 ;
(
≠≠; <
$str
≠≠< O
)
≠≠O P
,
≠≠P Q
opts
≠≠R V
.
≠≠V W
Duration
≠≠W _
,
≠≠_ `
Strings
≠≠a h
.
≠≠h i
Get
≠≠i l
(
≠≠l m
$str
≠≠m v
)
≠≠v w
)
≠≠w x
;
≠≠x y
using
ÆÆ 
var
ÆÆ 
aTimer
ÆÆ  
=
ÆÆ! "
new
ÆÆ# &
System
ÆÆ' -
.
ÆÆ- .
Timers
ÆÆ. 4
.
ÆÆ4 5
Timer
ÆÆ5 :
{
ØØ 
Interval
∞∞ 
=
∞∞ 
opts
∞∞ #
.
∞∞# $
Duration
∞∞$ ,
*
∞∞- .
$num
∞∞/ 1
*
∞∞2 3
$num
∞∞4 8
,
∞∞8 9
	AutoReset
±± 
=
±± 
false
±±  %
,
±±% &
}
≤≤ 
;
≤≤ 
aTimer
≥≥ 
.
≥≥ 
Elapsed
≥≥ 
+=
≥≥ !
(
≥≥" #
source
≥≥# )
,
≥≥) *
e
≥≥+ ,
)
≥≥, -
=>
≥≥. 0
{
≥≥1 2
	exitEvent
≥≥3 <
.
≥≥< =
Set
≥≥= @
(
≥≥@ A
)
≥≥A B
;
≥≥B C
}
≥≥D E
;
≥≥E F
aTimer
∂∂ 
.
∂∂ 
Enabled
∂∂ 
=
∂∂  
true
∂∂! %
;
∂∂% &
}
∑∑ 
foreach
ππ 
(
ππ 
FileSystemMonitor
ππ &
c
ππ' (
in
ππ) +
monitors
ππ, 4
)
ππ4 5
{
∫∫ 
Log
ªª 
.
ªª 
Information
ªª 
(
ªª  
Strings
ªª  '
.
ªª' (
Get
ªª( +
(
ªª+ ,
$str
ªª, 3
)
ªª3 4
,
ªª4 5
c
ªª6 7
.
ªª7 8
GetType
ªª8 ?
(
ªª? @
)
ªª@ A
.
ªªA B
Name
ªªB F
)
ªªF G
;
ªªG H
try
ΩΩ 
{
ææ 
c
øø 
.
øø 
StartRun
øø 
(
øø 
)
øø  
;
øø  !
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡  
ex
¡¡! #
)
¡¡# $
{
¬¬ 
Log
√√ 
.
√√ 
Error
√√ 
(
√√ 
Strings
√√ %
.
√√% &
Get
√√& )
(
√√) *
$str
√√* >
)
√√> ?
,
√√? @
c
√√A B
.
√√B C
GetType
√√C J
(
√√J K
)
√√K L
.
√√L M
Name
√√M Q
,
√√Q R
ex
√√S U
.
√√U V
Message
√√V ]
,
√√] ^
ex
√√_ a
.
√√a b

StackTrace
√√b l
)
√√l m
;
√√m n
returnValue
ƒƒ 
=
ƒƒ  !
	ASA_ERROR
ƒƒ" +
.
ƒƒ+ ,
UNKNOWN
ƒƒ, 3
;
ƒƒ3 4
}
≈≈ 
}
∆∆ 
void
»» #
consoleCancelDelegate
»» &
(
»»& '
object
»»' -
?
»»- .
sender
»»/ 5
,
»»5 6$
ConsoleCancelEventArgs
»»7 M
args
»»N R
)
»»R S
{
…… 
args
   
.
   
Cancel
   
=
   
true
   "
;
  " #
	exitEvent
ÀÀ 
.
ÀÀ 
Set
ÀÀ 
(
ÀÀ 
)
ÀÀ 
;
ÀÀ  
}
ÃÃ 
;
ÃÃ 
Console
ŒŒ 
.
ŒŒ 
CancelKeyPress
ŒŒ "
+=
ŒŒ# %#
consoleCancelDelegate
ŒŒ& ;
;
ŒŒ; <
Console
–– 
.
–– 
Write
–– 
(
–– 
Strings
–– !
.
––! "
Get
––" %
(
––% &
$str
––& 8
)
––8 9
)
––9 :
;
––: ;
WriteSpinner
”” 
(
”” 
	exitEvent
”” "
)
””" #
;
””# $
Log
‘‘ 
.
‘‘ 
Information
‘‘ 
(
‘‘ 
$str
‘‘ 
)
‘‘ 
;
‘‘  
foreach
÷÷ 
(
÷÷ 
var
÷÷ 
c
÷÷ 
in
÷÷ 
monitors
÷÷ &
)
÷÷& '
{
◊◊ 
Log
ÿÿ 
.
ÿÿ 
Information
ÿÿ 
(
ÿÿ  
Strings
ÿÿ  '
.
ÿÿ' (
Get
ÿÿ( +
(
ÿÿ+ ,
$str
ÿÿ, 1
)
ÿÿ1 2
,
ÿÿ2 3
c
ÿÿ4 5
.
ÿÿ5 6
GetType
ÿÿ6 =
(
ÿÿ= >
)
ÿÿ> ?
.
ÿÿ? @
Name
ÿÿ@ D
)
ÿÿD E
;
ÿÿE F
try
⁄⁄ 
{
€€ 
c
‹‹ 
.
‹‹ 
StopRun
‹‹ 
(
‹‹ 
)
‹‹ 
;
‹‹  
if
›› 
(
›› 
c
›› 
is
›› 
FileSystemMonitor
›› .
)
››. /
{
ﬁﬁ 
(
ﬂﬂ 
(
ﬂﬂ 
FileSystemMonitor
ﬂﬂ +
)
ﬂﬂ+ ,
c
ﬂﬂ, -
)
ﬂﬂ- .
.
ﬂﬂ. /
Dispose
ﬂﬂ/ 6
(
ﬂﬂ6 7
)
ﬂﬂ7 8
;
ﬂﬂ8 9
}
‡‡ 
}
·· 
catch
‚‚ 
(
‚‚ 
	Exception
‚‚  
ex
‚‚! #
)
‚‚# $
{
„„ 
Log
‰‰ 
.
‰‰ 
Error
‰‰ 
(
‰‰ 
ex
‰‰  
,
‰‰  !
$str
‰‰" -
,
‰‰- .
c
‰‰/ 0
.
‰‰0 1
GetType
‰‰1 8
(
‰‰8 9
)
‰‰9 :
.
‰‰: ;
Name
‰‰; ?
,
‰‰? @
ex
‰‰A C
.
‰‰C D
Message
‰‰D K
,
‰‰K L
Strings
‰‰M T
.
‰‰T U
Get
‰‰U X
(
‰‰X Y
$str
‰‰Y g
)
‰‰g h
)
‰‰h i
;
‰‰i j
}
ÂÂ 
}
ÊÊ 
FlushResults
ËË 
(
ËË 
)
ËË 
;
ËË 
DatabaseManager
ÍÍ 
.
ÍÍ 
Commit
ÍÍ "
(
ÍÍ" #
)
ÍÍ# $
;
ÍÍ$ %
Console
ÏÏ 
.
ÏÏ 
CancelKeyPress
ÏÏ "
-=
ÏÏ# %#
consoleCancelDelegate
ÏÏ& ;
;
ÏÏ; <
return
ÓÓ 
returnValue
ÓÓ 
;
ÓÓ 
}
ÔÔ 	
public
ÒÒ 
static
ÒÒ 
List
ÒÒ 
<
ÒÒ 
BaseCollector
ÒÒ (
>
ÒÒ( )
GetCollectors
ÒÒ* 7
(
ÒÒ7 8
)
ÒÒ8 9
{
ÚÚ 	
return
ÛÛ 

collectors
ÛÛ 
;
ÛÛ 
}
ÙÙ 	
public
ˆˆ 
static
ˆˆ 
List
ˆˆ 
<
ˆˆ 
BaseMonitor
ˆˆ &
>
ˆˆ& '
GetMonitors
ˆˆ( 3
(
ˆˆ3 4
)
ˆˆ4 5
{
˜˜ 	
return
¯¯ 
monitors
¯¯ 
;
¯¯ 
}
˘˘ 	
public
˚˚ 
static
˚˚ 
List
˚˚ 
<
˚˚ 
BaseCompare
˚˚ &
>
˚˚& '
GetComparators
˚˚( 6
(
˚˚6 7
)
˚˚7 8
{
¸¸ 	
return
˝˝ 
comparators
˝˝ 
;
˝˝ 
}
˛˛ 	
public
ÄÄ 
static
ÄÄ "
ConcurrentDictionary
ÄÄ *
<
ÄÄ* +
(
ÄÄ+ ,
RESULT_TYPE
ÄÄ, 7
,
ÄÄ7 8
CHANGE_TYPE
ÄÄ9 D
)
ÄÄD E
,
ÄÄE F
List
ÄÄG K
<
ÄÄK L
CompareResult
ÄÄL Y
>
ÄÄY Z
>
ÄÄZ [
CompareRuns
ÄÄ\ g
(
ÄÄg h#
CompareCommandOptions
ÄÄh }
optsÄÄ~ Ç
)ÄÄÇ É
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
opts
ÇÇ 
is
ÇÇ 
null
ÇÇ 
)
ÇÇ 
{
ÉÉ 
throw
ÑÑ 
new
ÑÑ #
ArgumentNullException
ÑÑ /
(
ÑÑ/ 0
nameof
ÑÑ0 6
(
ÑÑ6 7
opts
ÑÑ7 ;
)
ÑÑ; <
)
ÑÑ< =
;
ÑÑ= >
}
ÖÖ 
if
ÜÜ 
(
ÜÜ 
DatabaseManager
ÜÜ 
is
ÜÜ  "
null
ÜÜ# '
)
ÜÜ' (
{
áá 
Log
àà 
.
àà 
Error
àà 
(
àà 
$str
àà 3
,
àà3 4
$str
àà5 B
)
ààB C
;
ààC D
return
ââ 
new
ââ "
ConcurrentDictionary
ââ /
<
ââ/ 0
(
ââ0 1
RESULT_TYPE
ââ1 <
,
ââ< =
CHANGE_TYPE
ââ> I
)
ââI J
,
ââJ K
List
ââL P
<
ââP Q
CompareResult
ââQ ^
>
ââ^ _
>
ââ_ `
(
ââ` a
)
ââa b
;
ââb c
}
ää 
comparators
ãã 
=
ãã 
new
ãã 
List
ãã "
<
ãã" #
BaseCompare
ãã# .
>
ãã. /
(
ãã/ 0
)
ãã0 1
;
ãã1 2

Dictionary
çç 
<
çç 
string
çç 
,
çç 
string
çç %
>
çç% &
EndEvent
çç' /
=
çç0 1
new
çç2 5

Dictionary
çç6 @
<
çç@ A
string
ççA G
,
ççG H
string
ççI O
>
ççO P
(
ççP Q
)
ççQ R
;
ççR S
BaseCompare
éé 
c
éé 
=
éé 
new
éé 
BaseCompare
éé  +
(
éé+ ,
)
éé, -
;
éé- .
var
èè 
watch
èè 
=
èè 
System
èè 
.
èè 
Diagnostics
èè *
.
èè* +
	Stopwatch
èè+ 4
.
èè4 5
StartNew
èè5 =
(
èè= >
)
èè> ?
;
èè? @
if
êê 
(
êê 
!
êê 
c
êê 
.
êê 

TryCompare
êê 
(
êê 
opts
êê "
.
êê" #

FirstRunId
êê# -
,
êê- .
opts
êê/ 3
.
êê3 4
SecondRunId
êê4 ?
,
êê? @
DatabaseManager
êêA P
)
êêP Q
)
êêQ R
{
ëë 
Log
íí 
.
íí 
Warning
íí 
(
íí 
Strings
íí #
.
íí# $
Get
íí$ '
(
íí' (
$str
íí( 7
)
íí7 8
+
íí9 :
$str
íí; C
,
ííC D
c
ííE F
.
ííF G
GetType
ííG N
(
ííN O
)
ííO P
.
ííP Q
Name
ííQ U
)
ííU V
;
ííV W
}
ìì 
watch
ïï 
.
ïï 
Stop
ïï 
(
ïï 
)
ïï 
;
ïï 
TimeSpan
ññ 
t
ññ 
=
ññ 
TimeSpan
ññ !
.
ññ! "
FromMilliseconds
ññ" 2
(
ññ2 3
watch
ññ3 8
.
ññ8 9!
ElapsedMilliseconds
ññ9 L
)
ññL M
;
ññM N
string
óó 
answer
óó 
=
óó 
string
óó "
.
óó" #
Format
óó# )
(
óó) *
CultureInfo
óó* 5
.
óó5 6
InvariantCulture
óó6 F
,
óóF G
$str
óóH j
,
óój k
t
òò$ %
.
òò% &
Hours
òò& +
,
òò+ ,
t
ôô$ %
.
ôô% &
Minutes
ôô& -
,
ôô- .
t
öö$ %
.
öö% &
Seconds
öö& -
,
öö- .
t
õõ$ %
.
õõ% &
Milliseconds
õõ& 2
)
õõ2 3
;
õõ3 4
Log
ùù 
.
ùù 
Information
ùù 
(
ùù 
Strings
ùù #
.
ùù# $
Get
ùù$ '
(
ùù' (
$str
ùù( 3
)
ùù3 4
,
ùù4 5
$str
ùù6 A
,
ùùA B
answer
ùùC I
)
ùùI J
;
ùùJ K
if
üü 
(
üü 
!
üü 
opts
üü 
.
üü 
DisableAnalysis
üü %
)
üü% &
{
†† 
if
°° 
(
°° 
opts
°° 
.
°° 
AnalysesFile
°° %
is
°°& (
not
°°) ,
null
°°- 1
)
°°1 2
{
¢¢ 
watch
££ 
=
££ 
	Stopwatch
££ %
.
££% &
StartNew
££& .
(
££. /
)
££/ 0
;
££0 1
var
§§ 
analyzer
§§  
=
§§! "
new
§§# &
AsaAnalyzer
§§' 2
(
§§2 3
new
§§3 6
AnalyzerOptions
§§7 F
(
§§F G
opts
§§G K
.
§§K L

RunScripts
§§L V
)
§§V W
)
§§W X
;
§§X Y
var
•• 
platform
••  
=
••! "
DatabaseManager
••# 2
.
••2 3
RunIdToPlatform
••3 B
(
••B C
opts
••C G
.
••G H
SecondRunId
••H S
)
••S T
;
••T U
var
¶¶ 

violations
¶¶ "
=
¶¶# $
analyzer
¶¶% -
.
¶¶- .!
EnumerateRuleIssues
¶¶. A
(
¶¶A B
opts
¶¶B F
.
¶¶F G
AnalysesFile
¶¶G S
.
¶¶S T
Rules
¶¶T Y
)
¶¶Y Z
;
¶¶Z [
var
ßß 
analysesHash
ßß $
=
ßß% &
opts
ßß' +
.
ßß+ ,
AnalysesFile
ßß, 8
.
ßß8 9
GetHash
ßß9 @
(
ßß@ A
)
ßßA B
;
ßßB C
OAT
®® 
.
®® 
Utils
®® 
.
®® 
Strings
®® %
.
®®% &
Setup
®®& +
(
®®+ ,
)
®®, -
;
®®- .
OAT
©© 
.
©© 
Utils
©© 
.
©© 
Helpers
©© %
.
©©% &
PrintViolations
©©& 5
(
©©5 6

violations
©©6 @
)
©©@ A
;
©©A B
if
™™ 
(
™™ 

violations
™™ "
.
™™" #
Any
™™# &
(
™™& '
)
™™' (
)
™™( )
{
´´ 
Log
¨¨ 
.
¨¨ 
Error
¨¨ !
(
¨¨! "
$str
¨¨" `
,
¨¨` a

violations
¨¨b l
.
¨¨l m
Count
¨¨m r
(
¨¨r s
)
¨¨s t
,
¨¨t u
opts
¨¨v z
.
¨¨z {
AnalysesFile¨¨{ á
?¨¨á à
.¨¨à â
Source¨¨â è
??¨¨ê í
$str¨¨ì ù
)¨¨ù û
;¨¨û ü
}
≠≠ 
else
ÆÆ 
{
ØØ 
if
∞∞ 
(
∞∞ 
c
∞∞ 
.
∞∞ 
Results
∞∞ %
.
∞∞% &
Count
∞∞& +
>
∞∞, -
$num
∞∞. /
)
∞∞/ 0
{
±± 
foreach
≤≤ #
(
≤≤$ %
var
≤≤% (
key
≤≤) ,
in
≤≤- /
c
≤≤0 1
.
≤≤1 2
Results
≤≤2 9
.
≤≤9 :
Keys
≤≤: >
)
≤≤> ?
{
≥≥ 
if
¥¥  "
(
¥¥# $
c
¥¥$ %
.
¥¥% &
Results
¥¥& -
[
¥¥- .
key
¥¥. 1
]
¥¥1 2
is
¥¥3 5
List
¥¥6 :
<
¥¥: ;
CompareResult
¥¥; H
>
¥¥H I
queue
¥¥J O
)
¥¥O P
{
µµ  !
queue
∂∂$ )
.
∂∂) *

AsParallel
∂∂* 4
(
∂∂4 5
)
∂∂5 6
.
∂∂6 7
ForAll
∂∂7 =
(
∂∂= >
res
∂∂> A
=>
∂∂B D
{
∑∑$ %
var
ªª( +
selectedRules
ªª, 9
=
ªª: ;
opts
ªª< @
.
ªª@ A
AnalysesFile
ªªA M
.
ªªM N
Rules
ªªN S
.
ªªS T
Where
ªªT Y
(
ªªY Z
(
ªªZ [
rule
ªª[ _
)
ªª_ `
=>
ªªa c
(
ºº, -
rule
ºº- 1
.
ºº1 2
ChangeTypes
ºº2 =
==
ºº> @
null
ººA E
||
ººF H
rule
ººI M
.
ººM N
ChangeTypes
ººN Y
.
ººY Z
Contains
ººZ b
(
ººb c
res
ººc f
.
ººf g

ChangeType
ººg q
)
ººq r
)
ººr s
&&
ΩΩ0 2
(
ΩΩ3 4
rule
ΩΩ4 8
.
ΩΩ8 9
	Platforms
ΩΩ9 B
==
ΩΩC E
null
ΩΩF J
||
ΩΩK M
rule
ΩΩN R
.
ΩΩR S
	Platforms
ΩΩS \
.
ΩΩ\ ]
Contains
ΩΩ] e
(
ΩΩe f
platform
ΩΩf n
)
ΩΩn o
)
ΩΩo p
&&
ææ0 2
(
ææ3 4
rule
ææ4 8
.
ææ8 9

ResultType
ææ9 C
==
ææD F
res
ææG J
.
ææJ K

ResultType
ææK U
)
ææU V
)
ææV W
;
ææW X
res
øø( +
.
øø+ ,
Rules
øø, 1
=
øø2 3
analyzer
øø4 <
.
øø< =
Analyze
øø= D
(
øøD E
selectedRules
øøE R
,
øøR S
res
øøT W
.
øøW X
Base
øøX \
,
øø\ ]
res
øø^ a
.
øøa b
Compare
øøb i
)
øøi j
.
øøj k
ToList
øøk q
(
øøq r
)
øør s
;
øøs t
res
¿¿( +
.
¿¿+ ,
Analysis
¿¿, 4
=
¿¿5 6
res
¿¿7 :
.
¿¿: ;
Rules
¿¿; @
.
¿¿@ A
Count
¿¿A F
>
¡¡7 8
$num
¡¡9 :
?
¡¡; <
res
¡¡= @
.
¡¡@ A
Rules
¡¡A F
.
¡¡F G
Max
¡¡G J
(
¡¡J K
x
¡¡K L
=>
¡¡M O
(
¡¡P Q
(
¡¡Q R
AsaRule
¡¡R Y
)
¡¡Y Z
x
¡¡Z [
)
¡¡[ \
.
¡¡\ ]
Flag
¡¡] a
)
¡¡a b
:
¡¡c d
opts
¡¡e i
.
¡¡i j
AnalysesFile
¡¡j v
.
¡¡v w
DefaultLevels¡¡w Ñ
[¡¡Ñ Ö
res¡¡Ö à
.¡¡à â

ResultType¡¡â ì
]¡¡ì î
;¡¡î ï
res
¬¬( +
.
¬¬+ ,
AnalysesHash
¬¬, 8
=
¬¬9 :
analysesHash
¬¬; G
;
¬¬G H
}
√√$ %
)
√√% &
;
√√& '
}
ƒƒ  !
}
≈≈ 
}
∆∆ 
}
«« 
watch
…… 
.
…… 
Stop
…… 
(
…… 
)
……  
;
……  !
t
   
=
   
TimeSpan
    
.
    !
FromMilliseconds
  ! 1
(
  1 2
watch
  2 7
.
  7 8!
ElapsedMilliseconds
  8 K
)
  K L
;
  L M
answer
ÀÀ 
=
ÀÀ 
string
ÀÀ #
.
ÀÀ# $
Format
ÀÀ$ *
(
ÀÀ* +
CultureInfo
ÀÀ+ 6
.
ÀÀ6 7
InvariantCulture
ÀÀ7 G
,
ÀÀG H
$str
ÀÀI k
,
ÀÀk l
t
ÃÃ, -
.
ÃÃ- .
Hours
ÃÃ. 3
,
ÃÃ3 4
t
ÕÕ, -
.
ÕÕ- .
Minutes
ÕÕ. 5
,
ÕÕ5 6
t
ŒŒ, -
.
ŒŒ- .
Seconds
ŒŒ. 5
,
ŒŒ5 6
t
œœ, -
.
œœ- .
Milliseconds
œœ. :
)
œœ: ;
;
œœ; <
Log
–– 
.
–– 
Information
–– #
(
––# $
Strings
––$ +
.
––+ ,
Get
––, /
(
––/ 0
$str
––0 ;
)
––; <
,
––< =
$str
––> H
,
––H I
answer
––J P
)
––P Q
;
––Q R
}
—— 
else
““ 
{
”” 
Log
‘‘ 
.
‘‘ 
Error
‘‘ 
(
‘‘ 
Strings
‘‘ %
.
‘‘% &
Get
‘‘& )
(
‘‘) *
$str
‘‘* <
)
‘‘< =
)
‘‘= >
;
‘‘> ?
}
’’ 
}
÷÷ 
return
ÿÿ 
c
ÿÿ 
.
ÿÿ 
Results
ÿÿ 
;
ÿÿ 
}
ŸŸ 	
public
€€ 
static
€€ 
	ASA_ERROR
€€ "
RunGuiMonitorCommand
€€  4
(
€€4 5#
MonitorCommandOptions
€€5 J
opts
€€K O
)
€€O P
{
‹‹ 	
if
›› 
(
›› 
DatabaseManager
›› 
is
››  "
null
››# '
)
››' (
{
ﬁﬁ 
Log
ﬂﬂ 
.
ﬂﬂ 
Error
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ 3
,
ﬂﬂ3 4
$str
ﬂﬂ5 K
)
ﬂﬂK L
;
ﬂﬂL M
return
‡‡ 
	ASA_ERROR
‡‡  
.
‡‡  !
DATABASE_NULL
‡‡! .
;
‡‡. /
}
·· 
if
‚‚ 
(
‚‚ 
opts
‚‚ 
is
‚‚ 
null
‚‚ 
)
‚‚ 
{
„„ 
return
‰‰ 
	ASA_ERROR
‰‰  
.
‰‰  !
NO_COLLECTORS
‰‰! .
;
‰‰. /
}
ÂÂ 
var
ÊÊ 
setResultTypes
ÊÊ 
=
ÊÊ  
new
ÊÊ! $
List
ÊÊ% )
<
ÊÊ) *
RESULT_TYPE
ÊÊ* 5
>
ÊÊ5 6
(
ÊÊ6 7
)
ÊÊ7 8
;
ÊÊ8 9
if
ÁÁ 
(
ÁÁ 
opts
ÁÁ 
.
ÁÁ %
EnableFileSystemMonitor
ÁÁ ,
)
ÁÁ, -
{
ËË 
monitors
ÈÈ 
.
ÈÈ 
Add
ÈÈ 
(
ÈÈ 
new
ÈÈ  
FileSystemMonitor
ÈÈ! 2
(
ÈÈ2 3
opts
ÈÈ3 7
,
ÈÈ7 8
x
ÈÈ9 :
=>
ÈÈ; =
DatabaseManager
ÈÈ> M
.
ÈÈM N
Write
ÈÈN S
(
ÈÈS T
x
ÈÈT U
,
ÈÈU V
opts
ÈÈW [
.
ÈÈ[ \
RunId
ÈÈ\ a
)
ÈÈa b
)
ÈÈb c
)
ÈÈc d
;
ÈÈd e
setResultTypes
ÍÍ 
.
ÍÍ 
Add
ÍÍ "
(
ÍÍ" #
RESULT_TYPE
ÍÍ# .
.
ÍÍ. /
FILEMONITOR
ÍÍ/ :
)
ÍÍ: ;
;
ÍÍ; <
}
ÎÎ 
if
ÌÌ 
(
ÌÌ 
monitors
ÌÌ 
.
ÌÌ 
Count
ÌÌ 
==
ÌÌ !
$num
ÌÌ" #
)
ÌÌ# $
{
ÓÓ 
Log
ÔÔ 
.
ÔÔ 
Warning
ÔÔ 
(
ÔÔ 
Strings
ÔÔ #
.
ÔÔ# $
Get
ÔÔ$ '
(
ÔÔ' (
$str
ÔÔ( 8
)
ÔÔ8 9
)
ÔÔ9 :
;
ÔÔ: ;
}
 
var
ÒÒ 
run
ÒÒ 
=
ÒÒ 
new
ÒÒ 
AsaRun
ÒÒ  
(
ÒÒ  !
RunId
ÒÒ! &
:
ÒÒ& '
opts
ÒÒ( ,
?
ÒÒ, -
.
ÒÒ- .
RunId
ÒÒ. 3
??
ÒÒ4 6
string
ÒÒ7 =
.
ÒÒ= >
Empty
ÒÒ> C
,
ÒÒC D
	Timestamp
ÒÒE N
:
ÒÒN O
DateTime
ÒÒP X
.
ÒÒX Y
Now
ÒÒY \
,
ÒÒ\ ]
Version
ÒÒ^ e
:
ÒÒe f

AsaHelpers
ÒÒg q
.
ÒÒq r
GetVersionStringÒÒr Ç
(ÒÒÇ É
)ÒÒÉ Ñ
,ÒÒÑ Ö
PlatformÒÒÜ é
:ÒÒé è

AsaHelpersÒÒê ö
.ÒÒö õ
GetPlatformÒÒõ ¶
(ÒÒ¶ ß
)ÒÒß ®
,ÒÒ® ©
ResultTypesÒÒ™ µ
:ÒÒµ ∂
setResultTypesÒÒ∑ ≈
,ÒÒ≈ ∆
TypeÒÒ« À
:ÒÒÀ Ã
RUN_TYPEÒÒÕ ’
.ÒÒ’ ÷
MONITORÒÒ÷ ›
)ÒÒ› ﬁ
;ÒÒﬁ ﬂ
DatabaseManager
ÛÛ 
.
ÛÛ 
	InsertRun
ÛÛ %
(
ÛÛ% &
run
ÛÛ& )
)
ÛÛ) *
;
ÛÛ* +
foreach
ÙÙ 
(
ÙÙ 
var
ÙÙ 
c
ÙÙ 
in
ÙÙ 
monitors
ÙÙ &
)
ÙÙ& '
{
ıı 
c
ˆˆ 
.
ˆˆ 
StartRun
ˆˆ 
(
ˆˆ 
)
ˆˆ 
;
ˆˆ 
}
˜˜ 
return
˘˘ 
	ASA_ERROR
˘˘ 
.
˘˘ 
NONE
˘˘ !
;
˘˘! "
}
˙˙ 	
public
¸¸ 
static
¸¸ 
int
¸¸ 
StopMonitors
¸¸ &
(
¸¸& '
)
¸¸' (
{
˝˝ 	
foreach
ˇˇ 
(
ˇˇ 
var
ˇˇ 
c
ˇˇ 
in
ˇˇ 
monitors
ˇˇ &
)
ˇˇ& '
{
Ä	Ä	 
Log
Å	Å	 
.
Å	Å	 
Information
Å	Å	 
(
Å	Å	  
Strings
Å	Å	  '
.
Å	Å	' (
Get
Å	Å	( +
(
Å	Å	+ ,
$str
Å	Å	, 1
)
Å	Å	1 2
,
Å	Å	2 3
c
Å	Å	4 5
.
Å	Å	5 6
GetType
Å	Å	6 =
(
Å	Å	= >
)
Å	Å	> ?
.
Å	Å	? @
Name
Å	Å	@ D
)
Å	Å	D E
;
Å	Å	E F
c
É	É	 
.
É	É	 
StopRun
É	É	 
(
É	É	 
)
É	É	 
;
É	É	 
}
Ñ	Ñ	 
FlushResults
Ü	Ü	 
(
Ü	Ü	 
)
Ü	Ü	 
;
Ü	Ü	 
if
à	à	 
(
à	à	 
DatabaseManager
à	à	 
is
à	à	  "
null
à	à	# '
)
à	à	' (
{
â	â	 
Log
ä	ä	 
.
ä	ä	 
Error
ä	ä	 
(
ä	ä	 
$str
ä	ä	 3
,
ä	ä	3 4
$str
ä	ä	5 K
)
ä	ä	K L
;
ä	ä	L M
return
ã	ã	 
(
ã	ã	 
int
ã	ã	 
)
ã	ã	 
	ASA_ERROR
ã	ã	 %
.
ã	ã	% &
DATABASE_NULL
ã	ã	& 3
;
ã	ã	3 4
}
å	å	 
DatabaseManager
é	é	 
.
é	é	 
Commit
é	é	 "
(
é	é	" #
)
é	é	# $
;
é	é	$ %
return
ê	ê	 
$num
ê	ê	 
;
ê	ê	 
}
ë	ë	 	
public
ì	ì	 
static
ì	ì	 
void
ì	ì	 
AdminOrWarn
ì	ì	 &
(
ì	ì	& '
)
ì	ì	' (
{
î	î	 	
if
ï	ï	 
(
ï	ï	  
RuntimeInformation
ï	ï	 "
.
ï	ï	" #
IsOSPlatform
ï	ï	# /
(
ï	ï	/ 0

OSPlatform
ï	ï	0 :
.
ï	ï	: ;
Windows
ï	ï	; B
)
ï	ï	B C
)
ï	ï	C D
{
ñ	ñ	 
if
ó	ó	 
(
ó	ó	 
!
ó	ó	 
	Elevation
ó	ó	 
.
ó	ó	 
IsAdministrator
ó	ó	 .
(
ó	ó	. /
)
ó	ó	/ 0
)
ó	ó	0 1
{
ò	ò	 
Log
ô	ô	 
.
ô	ô	 
Information
ô	ô	 #
(
ô	ô	# $
Strings
ô	ô	$ +
.
ô	ô	+ ,
Get
ô	ô	, /
(
ô	ô	/ 0
$str
ô	ô	0 @
)
ô	ô	@ A
)
ô	ô	A B
;
ô	ô	B C
}
ö	ö	 
}
õ	õ	 
else
ú	ú	 
if
ú	ú	 
(
ú	ú	  
RuntimeInformation
ú	ú	 '
.
ú	ú	' (
IsOSPlatform
ú	ú	( 4
(
ú	ú	4 5

OSPlatform
ú	ú	5 ?
.
ú	ú	? @
Linux
ú	ú	@ E
)
ú	ú	E F
)
ú	ú	F G
{
ù	ù	 
if
û	û	 
(
û	û	 
!
û	û	 
	Elevation
û	û	 
.
û	û	 
IsRunningAsRoot
û	û	 .
(
û	û	. /
)
û	û	/ 0
)
û	û	0 1
{
ü	ü	 
Log
†	†	 
.
†	†	 
Information
†	†	 #
(
†	†	# $
Strings
†	†	$ +
.
†	†	+ ,
Get
†	†	, /
(
†	†	/ 0
$str
†	†	0 ?
)
†	†	? @
)
†	†	@ A
;
†	†	A B
}
°	°	 
}
¢	¢	 
else
£	£	 
if
£	£	 
(
£	£	  
RuntimeInformation
£	£	 '
.
£	£	' (
IsOSPlatform
£	£	( 4
(
£	£	4 5

OSPlatform
£	£	5 ?
.
£	£	? @
OSX
£	£	@ C
)
£	£	C D
)
£	£	D E
{
§	§	 
if
•	•	 
(
•	•	 
!
•	•	 
	Elevation
•	•	 
.
•	•	 
IsRunningAsRoot
•	•	 .
(
•	•	. /
)
•	•	/ 0
)
•	•	0 1
{
¶	¶	 
Log
ß	ß	 
.
ß	ß	 
Information
ß	ß	 #
(
ß	ß	# $
Strings
ß	ß	$ +
.
ß	ß	+ ,
Get
ß	ß	, /
(
ß	ß	/ 0
$str
ß	ß	0 ?
)
ß	ß	? @
)
ß	ß	@ A
;
ß	ß	A B
}
®	®	 
}
©	©	 
}
™	™	 	
public
¨	¨	 
static
¨	¨	 
	ASA_ERROR
¨	¨	 
RunCollectCommand
¨	¨	  1
(
¨	¨	1 2#
CollectCommandOptions
¨	¨	2 G
opts
¨	¨	H L
)
¨	¨	L M
{
≠	≠	 	
if
Æ	Æ	 
(
Æ	Æ	 
DatabaseManager
Æ	Æ	 
is
Æ	Æ	  "
null
Æ	Æ	# '
)
Æ	Æ	' (
{
Ø	Ø	 
Log
∞	∞	 
.
∞	∞	 
Error
∞	∞	 
(
∞	∞	 
$str
∞	∞	 3
,
∞	∞	3 4
$str
∞	∞	5 H
)
∞	∞	H I
;
∞	∞	I J
return
±	±	 
	ASA_ERROR
±	±	  
.
±	±	  !
DATABASE_NULL
±	±	! .
;
±	±	. /
}
≤	≤	 
if
≥	≥	 
(
≥	≥	 
opts
≥	≥	 
==
≥	≥	 
null
≥	≥	 
)
≥	≥	 
{
≥	≥	 
return
≥	≥	  &
	ASA_ERROR
≥	≥	' 0
.
≥	≥	0 1
NO_COLLECTORS
≥	≥	1 >
;
≥	≥	> ?
}
≥	≥	@ A

collectors
¥	¥	 
.
¥	¥	 
Clear
¥	¥	 
(
¥	¥	 
)
¥	¥	 
;
¥	¥	 
AdminOrWarn
µ	µ	 
(
µ	µ	 
)
µ	µ	 
;
µ	µ	 
opts
∑	∑	 
.
∑	∑	 
RunId
∑	∑	 
=
∑	∑	 
opts
∑	∑	 
.
∑	∑	 
RunId
∑	∑	 #
?
∑	∑	# $
.
∑	∑	$ %
Trim
∑	∑	% )
(
∑	∑	) *
)
∑	∑	* +
??
∑	∑	, .
DateTime
∑	∑	/ 7
.
∑	∑	7 8
Now
∑	∑	8 ;
.
∑	∑	; <
ToString
∑	∑	< D
(
∑	∑	D E
$str
∑	∑	E H
,
∑	∑	H I
CultureInfo
∑	∑	J U
.
∑	∑	U V
InvariantCulture
∑	∑	V f
)
∑	∑	f g
;
∑	∑	g h
if
π	π	 
(
π	π	 
opts
π	π	 
.
π	π	  
MatchedCollectorId
π	π	 '
!=
π	π	( *
null
π	π	+ /
)
π	π	/ 0
{
∫	∫	 
var
ª	ª	 

matchedRun
ª	ª	 
=
ª	ª	  
DatabaseManager
ª	ª	! 0
.
ª	ª	0 1
GetRun
ª	ª	1 7
(
ª	ª	7 8
opts
ª	ª	8 <
.
ª	ª	< = 
MatchedCollectorId
ª	ª	= O
)
ª	ª	O P
;
ª	ª	P Q
if
º	º	 
(
º	º	 

matchedRun
º	º	 
is
º	º	 !
AsaRun
º	º	" (
)
º	º	( )
{
Ω	Ω	 
foreach
æ	æ	 
(
æ	æ	 
var
æ	æ	  

resultType
æ	æ	! +
in
æ	æ	, .

matchedRun
æ	æ	/ 9
.
æ	æ	9 :
ResultTypes
æ	æ	: E
)
æ	æ	E F
{
ø	ø	 
switch
¿	¿	 
(
¿	¿	  

resultType
¿	¿	  *
)
¿	¿	* +
{
¡	¡	 
case
¬	¬	  
RESULT_TYPE
¬	¬	! ,
.
¬	¬	, -
FILE
¬	¬	- 1
:
¬	¬	1 2
opts
√	√	  $
.
√	√	$ %'
EnableFileSystemCollector
√	√	% >
=
√	√	? @
true
√	√	A E
;
√	√	E F
break
ƒ	ƒ	  %
;
ƒ	ƒ	% &
case
∆	∆	  
RESULT_TYPE
∆	∆	! ,
.
∆	∆	, -
PORT
∆	∆	- 1
:
∆	∆	1 2
opts
«	«	  $
.
«	«	$ %(
EnableNetworkPortCollector
«	«	% ?
=
«	«	@ A
true
«	«	B F
;
«	«	F G
break
»	»	  %
;
»	»	% &
case
 	 	  
RESULT_TYPE
 	 	! ,
.
 	 	, -
CERTIFICATE
 	 	- 8
:
 	 	8 9
opts
À	À	  $
.
À	À	$ %(
EnableCertificateCollector
À	À	% ?
=
À	À	@ A
true
À	À	B F
;
À	À	F G
break
Ã	Ã	  %
;
Ã	Ã	% &
case
Œ	Œ	  
RESULT_TYPE
Œ	Œ	! ,
.
Œ	Œ	, -
COM
Œ	Œ	- 0
:
Œ	Œ	0 1
opts
œ	œ	  $
.
œ	œ	$ %&
EnableComObjectCollector
œ	œ	% =
=
œ	œ	> ?
true
œ	œ	@ D
;
œ	œ	D E
break
–	–	  %
;
–	–	% &
case
“	“	  
RESULT_TYPE
“	“	! ,
.
“	“	, -
FIREWALL
“	“	- 5
:
“	“	5 6
opts
”	”	  $
.
”	”	$ %%
EnableFirewallCollector
”	”	% <
=
”	”	= >
true
”	”	? C
;
”	”	C D
break
‘	‘	  %
;
‘	‘	% &
case
÷	÷	  
RESULT_TYPE
÷	÷	! ,
.
÷	÷	, -
LOG
÷	÷	- 0
:
÷	÷	0 1
opts
◊	◊	  $
.
◊	◊	$ %%
EnableEventLogCollector
◊	◊	% <
=
◊	◊	= >
true
◊	◊	? C
;
◊	◊	C D
break
ÿ	ÿ	  %
;
ÿ	ÿ	% &
case
⁄	⁄	  
RESULT_TYPE
⁄	⁄	! ,
.
⁄	⁄	, -
SERVICE
⁄	⁄	- 4
:
⁄	⁄	4 5
opts
€	€	  $
.
€	€	$ %$
EnableServiceCollector
€	€	% ;
=
€	€	< =
true
€	€	> B
;
€	€	B C
break
‹	‹	  %
;
‹	‹	% &
case
ﬁ	ﬁ	  
RESULT_TYPE
ﬁ	ﬁ	! ,
.
ﬁ	ﬁ	, -
USER
ﬁ	ﬁ	- 1
:
ﬁ	ﬁ	1 2
opts
ﬂ	ﬂ	  $
.
ﬂ	ﬂ	$ %!
EnableUserCollector
ﬂ	ﬂ	% 8
=
ﬂ	ﬂ	9 :
true
ﬂ	ﬂ	; ?
;
ﬂ	ﬂ	? @
break
‡	‡	  %
;
‡	‡	% &
case
‚	‚	  
RESULT_TYPE
‚	‚	! ,
.
‚	‚	, -
KEY
‚	‚	- 0
:
‚	‚	0 1
opts
„	„	  $
.
„	„	$ % 
EnableKeyCollector
„	„	% 7
=
„	„	8 9
true
„	„	: >
;
„	„	> ?
break
‰	‰	  %
;
‰	‰	% &
case
Ê	Ê	  
RESULT_TYPE
Ê	Ê	! ,
.
Ê	Ê	, -
TPM
Ê	Ê	- 0
:
Ê	Ê	0 1
opts
Á	Á	  $
.
Á	Á	$ % 
EnableTpmCollector
Á	Á	% 7
=
Á	Á	8 9
true
Á	Á	: >
;
Á	Á	> ?
break
Ë	Ë	  %
;
Ë	Ë	% &
case
Í	Í	  
RESULT_TYPE
Í	Í	! ,
.
Í	Í	, -
PROCESS
Í	Í	- 4
:
Í	Í	4 5
opts
Î	Î	  $
.
Î	Î	$ %$
EnableProcessCollector
Î	Î	% ;
=
Î	Î	< =
true
Î	Î	> B
;
Î	Î	B C
break
Ï	Ï	  %
;
Ï	Ï	% &
case
Ó	Ó	  
RESULT_TYPE
Ó	Ó	! ,
.
Ó	Ó	, -
DRIVER
Ó	Ó	- 3
:
Ó	Ó	3 4
opts
Ô	Ô	  $
.
Ô	Ô	$ %#
EnableDriverCollector
Ô	Ô	% :
=
Ô	Ô	; <
true
Ô	Ô	= A
;
Ô	Ô	A B
break
		  %
;
		% &
case
Ú	Ú	  
RESULT_TYPE
Ú	Ú	! ,
.
Ú	Ú	, -
WIFI
Ú	Ú	- 1
:
Ú	Ú	1 2
opts
Û	Û	  $
.
Û	Û	$ %!
EnableWifiCollector
Û	Û	% 8
=
Û	Û	9 :
true
Û	Û	; ?
;
Û	Û	? @
break
Ù	Ù	  %
;
Ù	Ù	% &
}
ı	ı	 
}
ˆ	ˆ	 
}
˜	˜	 
}
¯	¯	 
Action
˙	˙	 
<
˙	˙	 
CollectObject
˙	˙	  
>
˙	˙	  !"
defaultChangeHandler
˙	˙	" 6
=
˙	˙	7 8
x
˙	˙	9 :
=>
˙	˙	; =
DatabaseManager
˙	˙	> M
.
˙	˙	M N
Write
˙	˙	N S
(
˙	˙	S T
x
˙	˙	T U
,
˙	˙	U V
opts
˙	˙	W [
.
˙	˙	[ \
RunId
˙	˙	\ a
)
˙	˙	a b
;
˙	˙	b c
var
¸	¸	 
dict
¸	¸	 
=
¸	¸	 
new
¸	¸	 
List
¸	¸	 
<
¸	¸	  
RESULT_TYPE
¸	¸	  +
>
¸	¸	+ ,
(
¸	¸	, -
)
¸	¸	- .
;
¸	¸	. /
if
˛	˛	 
(
˛	˛	 
opts
˛	˛	 
.
˛	˛	 '
EnableFileSystemCollector
˛	˛	 .
||
˛	˛	/ 1
opts
˛	˛	2 6
.
˛	˛	6 7!
EnableAllCollectors
˛	˛	7 J
)
˛	˛	J K
{
ˇ	ˇ	 

collectors
Ä
Ä
 
.
Ä
Ä
 
Add
Ä
Ä
 
(
Ä
Ä
 
new
Ä
Ä
 "!
FileSystemCollector
Ä
Ä
# 6
(
Ä
Ä
6 7
opts
Ä
Ä
7 ;
,
Ä
Ä
; <"
defaultChangeHandler
Ä
Ä
= Q
)
Ä
Ä
Q R
)
Ä
Ä
R S
;
Ä
Ä
S T
dict
Å
Å
 
.
Å
Å
 
Add
Å
Å
 
(
Å
Å
 
RESULT_TYPE
Å
Å
 $
.
Å
Å
$ %
FILE
Å
Å
% )
)
Å
Å
) *
;
Å
Å
* +
}
Ç
Ç
 
if
É
É
 
(
É
É
 
opts
É
É
 
.
É
É
 (
EnableNetworkPortCollector
É
É
 /
||
É
É
0 2
opts
É
É
3 7
.
É
É
7 8!
EnableAllCollectors
É
É
8 K
)
É
É
K L
{
Ñ
Ñ
 

collectors
Ö
Ö
 
.
Ö
Ö
 
Add
Ö
Ö
 
(
Ö
Ö
 
new
Ö
Ö
 "
OpenPortCollector
Ö
Ö
# 4
(
Ö
Ö
4 5
opts
Ö
Ö
5 9
,
Ö
Ö
9 :"
defaultChangeHandler
Ö
Ö
; O
)
Ö
Ö
O P
)
Ö
Ö
P Q
;
Ö
Ö
Q R
dict
Ü
Ü
 
.
Ü
Ü
 
Add
Ü
Ü
 
(
Ü
Ü
 
RESULT_TYPE
Ü
Ü
 $
.
Ü
Ü
$ %
PORT
Ü
Ü
% )
)
Ü
Ü
) *
;
Ü
Ü
* +
}
á
á
 
if
à
à
 
(
à
à
 
opts
à
à
 
.
à
à
 $
EnableServiceCollector
à
à
 +
||
à
à
, .
opts
à
à
/ 3
.
à
à
3 4!
EnableAllCollectors
à
à
4 G
)
à
à
G H
{
â
â
 

collectors
ä
ä
 
.
ä
ä
 
Add
ä
ä
 
(
ä
ä
 
new
ä
ä
 "
ServiceCollector
ä
ä
# 3
(
ä
ä
3 4
opts
ä
ä
4 8
,
ä
ä
8 9"
defaultChangeHandler
ä
ä
: N
)
ä
ä
N O
)
ä
ä
O P
;
ä
ä
P Q
dict
ã
ã
 
.
ã
ã
 
Add
ã
ã
 
(
ã
ã
 
RESULT_TYPE
ã
ã
 $
.
ã
ã
$ %
SERVICE
ã
ã
% ,
)
ã
ã
, -
;
ã
ã
- .
}
å
å
 
if
ç
ç
 
(
ç
ç
 
opts
ç
ç
 
.
ç
ç
 !
EnableUserCollector
ç
ç
 (
||
ç
ç
) +
opts
ç
ç
, 0
.
ç
ç
0 1!
EnableAllCollectors
ç
ç
1 D
)
ç
ç
D E
{
é
é
 

collectors
è
è
 
.
è
è
 
Add
è
è
 
(
è
è
 
new
è
è
 ""
UserAccountCollector
è
è
# 7
(
è
è
7 8
opts
è
è
8 <
,
è
è
< ="
defaultChangeHandler
è
è
> R
)
è
è
R S
)
è
è
S T
;
è
è
T U
dict
ê
ê
 
.
ê
ê
 
Add
ê
ê
 
(
ê
ê
 
RESULT_TYPE
ê
ê
 $
.
ê
ê
$ %
USER
ê
ê
% )
)
ê
ê
) *
;
ê
ê
* +
}
ë
ë
 
if
í
í
 
(
í
í
 
opts
í
í
 
.
í
í
 %
EnableRegistryCollector
í
í
 ,
||
í
í
- /
(
í
í
0 1
opts
í
í
1 5
.
í
í
5 6!
EnableAllCollectors
í
í
6 I
&&
í
í
J L 
RuntimeInformation
í
í
M _
.
í
í
_ `
IsOSPlatform
í
í
` l
(
í
í
l m

OSPlatform
í
í
m w
.
í
í
w x
Windows
í
í
x 
)í
í
 Ä
)í
í
Ä Å
)í
í
Å Ç
{
ì
ì
 

collectors
î
î
 
.
î
î
 
Add
î
î
 
(
î
î
 
new
î
î
 "
RegistryCollector
î
î
# 4
(
î
î
4 5
opts
î
î
5 9
,
î
î
9 :"
defaultChangeHandler
î
î
; O
)
î
î
O P
)
î
î
P Q
;
î
î
Q R
dict
ï
ï
 
.
ï
ï
 
Add
ï
ï
 
(
ï
ï
 
RESULT_TYPE
ï
ï
 $
.
ï
ï
$ %
REGISTRY
ï
ï
% -
)
ï
ï
- .
;
ï
ï
. /
}
ñ
ñ
 
if
ó
ó
 
(
ó
ó
 
opts
ó
ó
 
.
ó
ó
 (
EnableCertificateCollector
ó
ó
 /
||
ó
ó
0 2
opts
ó
ó
3 7
.
ó
ó
7 8!
EnableAllCollectors
ó
ó
8 K
)
ó
ó
K L
{
ò
ò
 

collectors
ô
ô
 
.
ô
ô
 
Add
ô
ô
 
(
ô
ô
 
new
ô
ô
 ""
CertificateCollector
ô
ô
# 7
(
ô
ô
7 8
opts
ô
ô
8 <
,
ô
ô
< ="
defaultChangeHandler
ô
ô
> R
)
ô
ô
R S
)
ô
ô
S T
;
ô
ô
T U
dict
ö
ö
 
.
ö
ö
 
Add
ö
ö
 
(
ö
ö
 
RESULT_TYPE
ö
ö
 $
.
ö
ö
$ %
CERTIFICATE
ö
ö
% 0
)
ö
ö
0 1
;
ö
ö
1 2
}
õ
õ
 
if
ú
ú
 
(
ú
ú
 
opts
ú
ú
 
.
ú
ú
 %
EnableFirewallCollector
ú
ú
 ,
||
ú
ú
- /
opts
ú
ú
0 4
.
ú
ú
4 5!
EnableAllCollectors
ú
ú
5 H
)
ú
ú
H I
{
ù
ù
 

collectors
û
û
 
.
û
û
 
Add
û
û
 
(
û
û
 
new
û
û
 "
FirewallCollector
û
û
# 4
(
û
û
4 5
opts
û
û
5 9
,
û
û
9 :"
defaultChangeHandler
û
û
; O
)
û
û
O P
)
û
û
P Q
;
û
û
Q R
dict
ü
ü
 
.
ü
ü
 
Add
ü
ü
 
(
ü
ü
 
RESULT_TYPE
ü
ü
 $
.
ü
ü
$ %
FIREWALL
ü
ü
% -
)
ü
ü
- .
;
ü
ü
. /
}
†
†
 
if
°
°
 
(
°
°
 
opts
°
°
 
.
°
°
 &
EnableComObjectCollector
°
°
 -
||
°
°
. 0
(
°
°
1 2
opts
°
°
2 6
.
°
°
6 7!
EnableAllCollectors
°
°
7 J
&&
°
°
K M 
RuntimeInformation
°
°
N `
.
°
°
` a
IsOSPlatform
°
°
a m
(
°
°
m n

OSPlatform
°
°
n x
.
°
°
x y
Windows°
°
y Ä
)°
°
Ä Å
)°
°
Å Ç
)°
°
Ç É
{
¢
¢
 

collectors
£
£
 
.
£
£
 
Add
£
£
 
(
£
£
 
new
£
£
 " 
ComObjectCollector
£
£
# 5
(
£
£
5 6
opts
£
£
6 :
,
£
£
: ;"
defaultChangeHandler
£
£
< P
)
£
£
P Q
)
£
£
Q R
;
£
£
R S
dict
§
§
 
.
§
§
 
Add
§
§
 
(
§
§
 
RESULT_TYPE
§
§
 $
.
§
§
$ %
COM
§
§
% (
)
§
§
( )
;
§
§
) *
}
•
•
 
if
¶
¶
 
(
¶
¶
 
opts
¶
¶
 
.
¶
¶
 %
EnableEventLogCollector
¶
¶
 ,
||
¶
¶
- /
opts
¶
¶
0 4
.
¶
¶
4 5!
EnableAllCollectors
¶
¶
5 H
)
¶
¶
H I
{
ß
ß
 

collectors
®
®
 
.
®
®
 
Add
®
®
 
(
®
®
 
new
®
®
 "
EventLogCollector
®
®
# 4
(
®
®
4 5
opts
®
®
5 9
,
®
®
9 :"
defaultChangeHandler
®
®
; O
)
®
®
O P
)
®
®
P Q
;
®
®
Q R
dict
©
©
 
.
©
©
 
Add
©
©
 
(
©
©
 
RESULT_TYPE
©
©
 $
.
©
©
$ %
LOG
©
©
% (
)
©
©
( )
;
©
©
) *
}
™
™
 
if
´
´
 
(
´
´
 
opts
´
´
 
.
´
´
  
EnableTpmCollector
´
´
 '
||
´
´
( *
(
´
´
+ ,
opts
´
´
, 0
.
´
´
0 1!
EnableAllCollectors
´
´
1 D
&&
´
´
E G
(
´
´
H I 
RuntimeInformation
´
´
I [
.
´
´
[ \
IsOSPlatform
´
´
\ h
(
´
´
h i

OSPlatform
´
´
i s
.
´
´
s t
Windows
´
´
t {
)
´
´
{ |
||
´
´
} "
RuntimeInformation´
´
Ä í
.´
´
í ì
IsOSPlatform´
´
ì ü
(´
´
ü †

OSPlatform´
´
† ™
.´
´
™ ´
Linux´
´
´ ∞
)´
´
∞ ±
)´
´
± ≤
)´
´
≤ ≥
)´
´
≥ ¥
{
¨
¨
 

collectors
≠
≠
 
.
≠
≠
 
Add
≠
≠
 
(
≠
≠
 
new
≠
≠
 "
TpmCollector
≠
≠
# /
(
≠
≠
/ 0
opts
≠
≠
0 4
,
≠
≠
4 5"
defaultChangeHandler
≠
≠
6 J
)
≠
≠
J K
)
≠
≠
K L
;
≠
≠
L M
dict
Æ
Æ
 
.
Æ
Æ
 
Add
Æ
Æ
 
(
Æ
Æ
 
RESULT_TYPE
Æ
Æ
 $
.
Æ
Æ
$ %
TPM
Æ
Æ
% (
)
Æ
Æ
( )
;
Æ
Æ
) *
}
Ø
Ø
 
if
∞
∞
 
(
∞
∞
 
opts
∞
∞
 
.
∞
∞
  
EnableKeyCollector
∞
∞
 '
||
∞
∞
( *
opts
∞
∞
+ /
.
∞
∞
/ 0!
EnableAllCollectors
∞
∞
0 C
&&
∞
∞
D F
(
∞
∞
G H 
RuntimeInformation
∞
∞
H Z
.
∞
∞
Z [
IsOSPlatform
∞
∞
[ g
(
∞
∞
g h

OSPlatform
∞
∞
h r
.
∞
∞
r s
Windows
∞
∞
s z
)
∞
∞
z {
)
∞
∞
{ |
)
∞
∞
| }
{
±
±
 

collectors
≤
≤
 
.
≤
≤
 
Add
≤
≤
 
(
≤
≤
 
new
≤
≤
 "'
CryptographicKeyCollector
≤
≤
# <
(
≤
≤
< =
opts
≤
≤
= A
,
≤
≤
A B"
defaultChangeHandler
≤
≤
C W
)
≤
≤
W X
)
≤
≤
X Y
;
≤
≤
Y Z
dict
≥
≥
 
.
≥
≥
 
Add
≥
≥
 
(
≥
≥
 
RESULT_TYPE
≥
≥
 $
.
≥
≥
$ %
KEY
≥
≥
% (
)
≥
≥
( )
;
≥
≥
) *
}
¥
¥
 
if
µ
µ
 
(
µ
µ
 
opts
µ
µ
 
.
µ
µ
 $
EnableProcessCollector
µ
µ
 +
||
µ
µ
, .
opts
µ
µ
/ 3
.
µ
µ
3 4!
EnableAllCollectors
µ
µ
4 G
)
µ
µ
G H
{
∂
∂
 

collectors
∑
∑
 
.
∑
∑
 
Add
∑
∑
 
(
∑
∑
 
new
∑
∑
 "
ProcessCollector
∑
∑
# 3
(
∑
∑
3 4
opts
∑
∑
4 8
,
∑
∑
8 9"
defaultChangeHandler
∑
∑
: N
)
∑
∑
N O
)
∑
∑
O P
;
∑
∑
P Q
dict
∏
∏
 
.
∏
∏
 
Add
∏
∏
 
(
∏
∏
 
RESULT_TYPE
∏
∏
 $
.
∏
∏
$ %
PROCESS
∏
∏
% ,
)
∏
∏
, -
;
∏
∏
- .
}
π
π
 
if
∫
∫
 
(
∫
∫
 
opts
∫
∫
 
.
∫
∫
 #
EnableDriverCollector
∫
∫
 *
||
∫
∫
+ -
opts
∫
∫
. 2
.
∫
∫
2 3!
EnableAllCollectors
∫
∫
3 F
)
∫
∫
F G
{
ª
ª
 

collectors
º
º
 
.
º
º
 
Add
º
º
 
(
º
º
 
new
º
º
 "
DriverCollector
º
º
# 2
(
º
º
2 3
opts
º
º
3 7
,
º
º
7 8"
defaultChangeHandler
º
º
9 M
)
º
º
M N
)
º
º
N O
;
º
º
O P
dict
Ω
Ω
 
.
Ω
Ω
 
Add
Ω
Ω
 
(
Ω
Ω
 
RESULT_TYPE
Ω
Ω
 $
.
Ω
Ω
$ %
DRIVER
Ω
Ω
% +
)
Ω
Ω
+ ,
;
Ω
Ω
, -
}
æ
æ
 
if
ø
ø
 
(
ø
ø
 
opts
ø
ø
 
.
ø
ø
 !
EnableWifiCollector
ø
ø
 (
||
ø
ø
) +
opts
ø
ø
, 0
.
ø
ø
0 1!
EnableAllCollectors
ø
ø
1 D
)
ø
ø
D E
{
¿
¿
 

collectors
¡
¡
 
.
¡
¡
 
Add
¡
¡
 
(
¡
¡
 
new
¡
¡
 "
WifiCollector
¡
¡
# 0
(
¡
¡
0 1
opts
¡
¡
1 5
,
¡
¡
5 6"
defaultChangeHandler
¡
¡
7 K
)
¡
¡
K L
)
¡
¡
L M
;
¡
¡
M N
dict
¬
¬
 
.
¬
¬
 
Add
¬
¬
 
(
¬
¬
 
RESULT_TYPE
¬
¬
 $
.
¬
¬
$ %
WIFI
¬
¬
% )
)
¬
¬
) *
;
¬
¬
* +
}
√
√
 
if
≈
≈
 
(
≈
≈
 

collectors
≈
≈
 
.
≈
≈
 
Count
≈
≈
  
==
≈
≈
! #
$num
≈
≈
$ %
)
≈
≈
% &
{
∆
∆
 
Log
«
«
 
.
«
«
 
Warning
«
«
 
(
«
«
 
Strings
«
«
 #
.
«
«
# $
Get
«
«
$ '
(
«
«
' (
$str
«
«
( :
)
«
«
: ;
)
«
«
; <
;
«
«
< =
return
»
»
 
	ASA_ERROR
»
»
  
.
»
»
  !
NO_COLLECTORS
»
»
! .
;
»
»
. /
}
…
…
 
if
À
À
 
(
À
À
 
opts
À
À
 
.
À
À
 
	Overwrite
À
À
 
)
À
À
 
{
Ã
Ã
 
DatabaseManager
Õ
Õ
 
.
Õ
Õ
  
	DeleteRun
Õ
Õ
  )
(
Õ
Õ
) *
opts
Õ
Õ
* .
.
Õ
Õ
. /
RunId
Õ
Õ
/ 4
)
Õ
Õ
4 5
;
Õ
Õ
5 6
}
Œ
Œ
 
else
œ
œ
 
{
–
–
 
if
—
—
 
(
—
—
 
DatabaseManager
—
—
 #
.
—
—
# $
GetRun
—
—
$ *
(
—
—
* +
opts
—
—
+ /
.
—
—
/ 0
RunId
—
—
0 5
)
—
—
5 6
!=
—
—
7 9
null
—
—
: >
)
—
—
> ?
{
“
“
 
Log
”
”
 
.
”
”
 
Error
”
”
 
(
”
”
 
Strings
”
”
 %
.
”
”
% &
Get
”
”
& )
(
”
”
) *
$str
”
”
* @
)
”
”
@ A
)
”
”
A B
;
”
”
B C
return
‘
‘
 
	ASA_ERROR
‘
‘
 $
.
‘
‘
$ %
	UNIQUE_ID
‘
‘
% .
;
‘
‘
. /
}
’
’
 
}
÷
÷
 
Log
◊
◊
 
.
◊
◊
 
Information
◊
◊
 
(
◊
◊
 
Strings
◊
◊
 #
.
◊
◊
# $
Get
◊
◊
$ '
(
◊
◊
' (
$str
◊
◊
( /
)
◊
◊
/ 0
,
◊
◊
0 1
opts
◊
◊
2 6
.
◊
◊
6 7
RunId
◊
◊
7 <
)
◊
◊
< =
;
◊
◊
= >
var
Ÿ
Ÿ
 
run
Ÿ
Ÿ
 
=
Ÿ
Ÿ
 
new
Ÿ
Ÿ
 
AsaRun
Ÿ
Ÿ
  
(
Ÿ
Ÿ
  !
RunId
Ÿ
Ÿ
! &
:
Ÿ
Ÿ
& '
opts
Ÿ
Ÿ
( ,
.
Ÿ
Ÿ
, -
RunId
Ÿ
Ÿ
- 2
,
Ÿ
Ÿ
2 3
	Timestamp
Ÿ
Ÿ
4 =
:
Ÿ
Ÿ
= >
DateTime
Ÿ
Ÿ
? G
.
Ÿ
Ÿ
G H
Now
Ÿ
Ÿ
H K
,
Ÿ
Ÿ
K L
Version
Ÿ
Ÿ
M T
:
Ÿ
Ÿ
T U

AsaHelpers
Ÿ
Ÿ
V `
.
Ÿ
Ÿ
` a
GetVersionString
Ÿ
Ÿ
a q
(
Ÿ
Ÿ
q r
)
Ÿ
Ÿ
r s
,
Ÿ
Ÿ
s t
Platform
Ÿ
Ÿ
u }
:
Ÿ
Ÿ
} ~

AsaHelpersŸ
Ÿ
 â
.Ÿ
Ÿ
â ä
GetPlatformŸ
Ÿ
ä ï
(Ÿ
Ÿ
ï ñ
)Ÿ
Ÿ
ñ ó
,Ÿ
Ÿ
ó ò
ResultTypesŸ
Ÿ
ô §
:Ÿ
Ÿ
§ •
dictŸ
Ÿ
¶ ™
,Ÿ
Ÿ
™ ´
TypeŸ
Ÿ
¨ ∞
:Ÿ
Ÿ
∞ ±
RUN_TYPEŸ
Ÿ
≤ ∫
.Ÿ
Ÿ
∫ ª
COLLECTŸ
Ÿ
ª ¬
)Ÿ
Ÿ
¬ √
;Ÿ
Ÿ
√ ƒ
DatabaseManager
€
€
 
.
€
€
 
	InsertRun
€
€
 %
(
€
€
% &
run
€
€
& )
)
€
€
) *
;
€
€
* +
Log
›
›
 
.
›
›
 
Information
›
›
 
(
›
›
 
Strings
›
›
 #
.
›
›
# $
Get
›
›
$ '
(
›
›
' (
$str
›
›
( 3
)
›
›
3 4
,
›
›
4 5

collectors
›
›
6 @
.
›
›
@ A
Count
›
›
A F
.
›
›
F G
ToString
›
›
G O
(
›
›
O P
CultureInfo
›
›
P [
.
›
›
[ \
InvariantCulture
›
›
\ l
)
›
›
l m
,
›
›
m n
Strings
›
›
o v
.
›
›
v w
Get
›
›
w z
(
›
›
z {
$str›
›
{ á
)›
›
á à
)›
›
à â
;›
›
â ä
using
ﬂ
ﬂ
 %
CancellationTokenSource
ﬂ
ﬂ
 )
source
ﬂ
ﬂ
* 0
=
ﬂ
ﬂ
1 2
new
ﬂ
ﬂ
3 6%
CancellationTokenSource
ﬂ
ﬂ
7 N
(
ﬂ
ﬂ
N O
)
ﬂ
ﬂ
O P
;
ﬂ
ﬂ
P Q
CancellationToken
‡
‡
 
token
‡
‡
 #
=
‡
‡
$ %
source
‡
‡
& ,
.
‡
‡
, -
Token
‡
‡
- 2
;
‡
‡
2 3
void
‚
‚
 
cancelKeyDelegate
‚
‚
 "
(
‚
‚
" #
object
‚
‚
# )
?
‚
‚
) *
sender
‚
‚
+ 1
,
‚
‚
1 2$
ConsoleCancelEventArgs
‚
‚
3 I
args
‚
‚
J N
)
‚
‚
N O
{
„
„
 
Log
‰
‰
 
.
‰
‰
 
Information
‰
‰
 
(
‰
‰
  
$str
‰
‰
  |
)
‰
‰
| }
;
‰
‰
} ~
source
Â
Â
 
.
Â
Â
 
Cancel
Â
Â
 
(
Â
Â
 
)
Â
Â
 
;
Â
Â
  
if
Á
Á
 
(
Á
Á
 
DatabaseManager
Á
Á
 #
is
Á
Á
$ &
null
Á
Á
' +
)
Á
Á
+ ,
{
Ë
Ë
 
Log
È
È
 
.
È
È
 
Error
È
È
 
(
È
È
 
$str
È
È
 7
,
È
È
7 8
$str
È
È
9 O
)
È
È
O P
;
È
È
P Q
}
Í
Í
 
else
Î
Î
 
{
Ï
Ï
 
DatabaseManager
Ì
Ì
 #
.
Ì
Ì
# $
CloseDatabase
Ì
Ì
$ 1
(
Ì
Ì
1 2
)
Ì
Ì
2 3
;
Ì
Ì
3 4
}
Ó
Ó
 
Environment
Ô
Ô
 
.
Ô
Ô
 
Exit
Ô
Ô
  
(
Ô
Ô
  !
(
Ô
Ô
! "
int
Ô
Ô
" %
)
Ô
Ô
% &
	ASA_ERROR
Ô
Ô
& /
.
Ô
Ô
/ 0
	CANCELLED
Ô
Ô
0 9
)
Ô
Ô
9 :
;
Ô
Ô
: ;
}


 
Console
Ò
Ò
 
.
Ò
Ò
 
CancelKeyPress
Ò
Ò
 "
+=
Ò
Ò
# %
cancelKeyDelegate
Ò
Ò
& 7
;
Ò
Ò
7 8

Dictionary
Û
Û
 
<
Û
Û
 
string
Û
Û
 
,
Û
Û
 
string
Û
Û
 %
>
Û
Û
% &
EndEvent
Û
Û
' /
=
Û
Û
0 1
new
Û
Û
2 5

Dictionary
Û
Û
6 @
<
Û
Û
@ A
string
Û
Û
A G
,
Û
Û
G H
string
Û
Û
I O
>
Û
Û
O P
(
Û
Û
P Q
)
Û
Û
Q R
;
Û
Û
R S
foreach
Ù
Ù
 
(
Ù
Ù
 
BaseCollector
Ù
Ù
 "
c
Ù
Ù
# $
in
Ù
Ù
% '

collectors
Ù
Ù
( 2
)
Ù
Ù
2 3
{
ı
ı
 
try
ˆ
ˆ
 
{
˜
˜
 
DatabaseManager
¯
¯
 #
.
¯
¯
# $
BeginTransaction
¯
¯
$ 4
(
¯
¯
4 5
)
¯
¯
5 6
;
¯
¯
6 7
c
˙
˙
 
.
˙
˙
 

TryExecute
˙
˙
  
(
˙
˙
  !
token
˙
˙
! &
)
˙
˙
& '
;
˙
˙
' (
FlushResults
¸
¸
  
(
¸
¸
  !
)
¸
¸
! "
;
¸
¸
" #
DatabaseManager
˛
˛
 #
.
˛
˛
# $
Commit
˛
˛
$ *
(
˛
˛
* +
)
˛
˛
+ ,
;
˛
˛
, -
}
ˇ
ˇ
 
catch
ÄÄ 
(
ÄÄ 
	Exception
ÄÄ  
e
ÄÄ! "
)
ÄÄ" #
{
ÅÅ 
Log
ÇÇ 
.
ÇÇ 
Error
ÇÇ 
(
ÇÇ 
Strings
ÇÇ %
.
ÇÇ% &
Get
ÇÇ& )
(
ÇÇ) *
$str
ÇÇ* >
)
ÇÇ> ?
,
ÇÇ? @
c
ÇÇA B
.
ÇÇB C
GetType
ÇÇC J
(
ÇÇJ K
)
ÇÇK L
.
ÇÇL M
Name
ÇÇM Q
,
ÇÇQ R
e
ÇÇS T
.
ÇÇT U
Message
ÇÇU \
,
ÇÇ\ ]
e
ÇÇ^ _
.
ÇÇ_ `

StackTrace
ÇÇ` j
)
ÇÇj k
;
ÇÇk l
Console
ÑÑ 
.
ÑÑ 
CancelKeyPress
ÑÑ *
-=
ÑÑ+ -
cancelKeyDelegate
ÑÑ. ?
;
ÑÑ? @
return
ÜÜ 
	ASA_ERROR
ÜÜ $
.
ÜÜ$ %
FAILED_TO_COMMIT
ÜÜ% 5
;
ÜÜ5 6
}
áá 
}
àà 
DatabaseManager
ää 
.
ää 
Commit
ää "
(
ää" #
)
ää# $
;
ää$ %
Console
ãã 
.
ãã 
CancelKeyPress
ãã "
-=
ãã# %
cancelKeyDelegate
ãã& 7
;
ãã7 8
return
çç 
	ASA_ERROR
çç 
.
çç 
NONE
çç !
;
çç! "
}
éé 	
private
êê 
static
êê 
void
êê 
FlushResults
êê (
(
êê( )
)
êê) *
{
ëë 	
if
íí 
(
íí 
DatabaseManager
íí 
is
íí  "
null
íí# '
)
íí' (
{
ìì 
return
îî 
;
îî 
}
ïï 
var
ññ 
	prevFlush
ññ 
=
ññ 
DatabaseManager
ññ +
.
ññ+ ,
	QueueSize
ññ, 5
;
ññ5 6
var
óó 
totFlush
óó 
=
óó 
	prevFlush
óó $
;
óó$ %
var
ôô 
printInterval
ôô 
=
ôô 
new
ôô  #
TimeSpan
ôô$ ,
(
ôô, -
$num
ôô- .
,
ôô. /
$num
ôô0 1
,
ôô1 2
$num
ôô3 5
)
ôô5 6
;
ôô6 7
var
öö 
then
öö 
=
öö 
DateTime
öö 
.
öö  
Now
öö  #
;
öö# $
var
úú 
	StopWatch
úú 
=
úú 
	Stopwatch
úú %
.
úú% &
StartNew
úú& .
(
úú. /
)
úú/ 0
;
úú0 1
TimeSpan
ùù 
t
ùù 
=
ùù 
new
ùù 
TimeSpan
ùù %
(
ùù% &
)
ùù& '
;
ùù' (
string
ûû 
answer
ûû 
=
ûû 
string
ûû "
.
ûû" #
Empty
ûû# (
;
ûû( )
bool
üü $
warnedToIncreaseShards
üü '
=
üü( )
false
üü* /
;
üü/ 0
var
†† 
settings
†† 
=
†† 
DatabaseManager
†† *
.
††* + 
GetCurrentSettings
††+ =
(
††= >
)
††> ?
;
††? @
while
¢¢ 
(
¢¢ 
DatabaseManager
¢¢ "
.
¢¢" #
HasElements
¢¢# .
)
¢¢. /
{
££ 
Thread
§§ 
.
§§ 
Sleep
§§ 
(
§§ 
$num
§§  
)
§§  !
;
§§! "
if
•• 
(
•• 
!
•• 
DatabaseManager
•• $
.
••$ %
HasElements
••% 0
)
••0 1
{
¶¶ 
break
ßß 
;
ßß 
}
®® 
if
©© 
(
©© 
!
©© $
warnedToIncreaseShards
©© +
&&
©©, .
	StopWatch
©©/ 8
.
©©8 9!
ElapsedMilliseconds
©©9 L
>
©©M N
$num
©©O T
&&
©©U W
settings
©©X `
.
©©` a
ShardingFactor
©©a o
<
©©p q
$num
©©r s
)
©©s t
{
™™ 
Log
´´ 
.
´´ 
Information
´´ #
(
´´# $
$str´´$ ó
)´´ó ò
;´´ò ô$
warnedToIncreaseShards
¨¨ *
=
¨¨+ ,
true
¨¨- 1
;
¨¨1 2
}
≠≠ 
var
ÆÆ 
now
ÆÆ 
=
ÆÆ 
DateTime
ÆÆ "
.
ÆÆ" #
Now
ÆÆ# &
;
ÆÆ& '
if
ØØ 
(
ØØ 
now
ØØ 
-
ØØ 
then
ØØ 
>
ØØ  
printInterval
ØØ! .
)
ØØ. /
{
∞∞ 
var
±± 
actualDuration
±± &
=
±±' (
now
±±) ,
-
±±- .
then
±±/ 3
;
±±3 4
var
≤≤ 
sample
≤≤ 
=
≤≤  
DatabaseManager
≤≤! 0
.
≤≤0 1
	QueueSize
≤≤1 :
;
≤≤: ;
var
≥≥ 
curRate
≥≥ 
=
≥≥  !
	prevFlush
≥≥" +
-
≥≥, -
sample
≥≥. 4
;
≥≥4 5
var
¥¥ 
totRate
¥¥ 
=
¥¥  !
(
¥¥" #
double
¥¥# )
)
¥¥) *
(
¥¥* +
totFlush
¥¥+ 3
-
¥¥4 5
sample
¥¥6 <
)
¥¥< =
/
¥¥> ?
	StopWatch
¥¥@ I
.
¥¥I J!
ElapsedMilliseconds
¥¥J ]
;
¥¥] ^
try
∂∂ 
{
∑∑ 
t
∏∏ 
=
∏∏ 
(
∏∏ 
curRate
∏∏ $
>
∏∏% &
$num
∏∏' (
)
∏∏( )
?
∏∏* +
TimeSpan
∏∏, 4
.
∏∏4 5
FromMilliseconds
∏∏5 E
(
∏∏E F
actualDuration
∏∏F T
.
∏∏T U
TotalMilliseconds
∏∏U f
*
∏∏g h
sample
∏∏i o
/
∏∏p q
curRate
∏∏r y
)
∏∏y z
:
∏∏{ |
TimeSpan∏∏} Ö
.∏∏Ö Ü 
FromMilliseconds∏∏Ü ñ
(∏∏ñ ó
$num∏∏ó ü
)∏∏ü †
;∏∏† °
answer
ππ 
=
ππ  
string
ππ! '
.
ππ' (
Format
ππ( .
(
ππ. /
CultureInfo
ππ/ :
.
ππ: ;
InvariantCulture
ππ; K
,
ππK L
$str
ππM o
,
ππo p
t
∫∫0 1
.
∫∫1 2
Hours
∫∫2 7
,
∫∫7 8
t
ªª0 1
.
ªª1 2
Minutes
ªª2 9
,
ªª9 :
t
ºº0 1
.
ºº1 2
Seconds
ºº2 9
,
ºº9 :
t
ΩΩ0 1
.
ΩΩ1 2
Milliseconds
ΩΩ2 >
)
ΩΩ> ?
;
ΩΩ? @
Log
ææ 
.
ææ 
Debug
ææ !
(
ææ! "
$str
ææ" _
,
ææ_ `
sample
ææa g
,
ææg h
curRate
ææi p
,
ææp q
totRate
æær y
*
ææz {
$numææ| Ä
,ææÄ Å
answerææÇ à
,ææà â
actualDurationææä ò
)ææò ô
;ææô ö
}
øø 
catch
¿¿ 
(
¿¿ 
	Exception
¿¿ $
e
¿¿% &
)
¿¿& '
when
¿¿( ,
(
¿¿- .
e
¡¡ 
is
¡¡ 
OverflowException
¡¡ .
)
¡¡. /
{
¬¬ 
Log
√√ 
.
√√ 
Debug
√√ !
(
√√! "
$"
√√" $
$str
√√$ 0
{
√√0 1
curRate
√√1 8
}
√√8 9
$str
√√9 :
{
√√: ;
totRate
√√; B
}
√√B C
$str
√√C D
{
√√D E
sample
√√E K
}
√√K L
$str
√√L M
{
√√M N
t
√√N O
}
√√O P
$str
√√P Q
{
√√Q R
answer
√√R X
}
√√X Y
"
√√Y Z
)
√√Z [
;
√√[ \
Log
ƒƒ 
.
ƒƒ 
Debug
ƒƒ !
(
ƒƒ! "
$str
ƒƒ" L
,
ƒƒL M
sample
ƒƒN T
,
ƒƒT U
curRate
ƒƒV ]
,
ƒƒ] ^
totRate
ƒƒ_ f
*
ƒƒg h
$num
ƒƒi m
)
ƒƒm n
;
ƒƒn o
}
≈≈ 
then
«« 
=
«« 
now
«« 
;
«« 
	prevFlush
»» 
=
»» 
sample
»»  &
;
»»& '
}
…… 
}
   
	StopWatch
ÃÃ 
.
ÃÃ 
Stop
ÃÃ 
(
ÃÃ 
)
ÃÃ 
;
ÃÃ 
t
ÕÕ 
=
ÕÕ 
TimeSpan
ÕÕ 
.
ÕÕ 
FromMilliseconds
ÕÕ )
(
ÕÕ) *
	StopWatch
ÕÕ* 3
.
ÕÕ3 4!
ElapsedMilliseconds
ÕÕ4 G
)
ÕÕG H
;
ÕÕH I
answer
ŒŒ 
=
ŒŒ 
string
ŒŒ 
.
ŒŒ 
Format
ŒŒ "
(
ŒŒ" #
CultureInfo
ŒŒ# .
.
ŒŒ. /
InvariantCulture
ŒŒ/ ?
,
ŒŒ? @
$str
ŒŒA c
,
ŒŒc d
t
œœ$ %
.
œœ% &
Hours
œœ& +
,
œœ+ ,
t
––$ %
.
––% &
Minutes
––& -
,
––- .
t
——$ %
.
——% &
Seconds
——& -
,
——- .
t
““$ %
.
““% &
Milliseconds
““& 2
)
““2 3
;
““3 4
Log
”” 
.
”” 
Debug
”” 
(
”” 
$str
”” 1
,
””1 2
answer
””3 9
)
””9 :
;
””: ;
}
‘‘ 	
public
÷÷ 
static
÷÷ 
void
÷÷ 
ClearCollectors
÷÷ *
(
÷÷* +
)
÷÷+ ,
{
◊◊ 	

collectors
ÿÿ 
=
ÿÿ 
new
ÿÿ 
List
ÿÿ !
<
ÿÿ! "
BaseCollector
ÿÿ" /
>
ÿÿ/ 0
(
ÿÿ0 1
)
ÿÿ1 2
;
ÿÿ2 3
}
ŸŸ 	
public
€€ 
static
€€ 
void
€€ 
ClearMonitors
€€ (
(
€€( )
)
€€) *
{
‹‹ 	

collectors
›› 
=
›› 
new
›› 
List
›› !
<
››! "
BaseCollector
››" /
>
››/ 0
(
››0 1
)
››1 2
;
››2 3
}
ﬁﬁ 	
[
·· 	
System
··	 
.
·· 
Diagnostics
·· 
.
·· 
CodeAnalysis
·· (
.
··( )
SuppressMessage
··) 8
(
··8 9
$str
··9 H
,
··H I
$str
··J 
,·· Ä
Justification··Å é
=··è ê
$str··ë ≥
)··≥ ¥
]··¥ µ
private
‚‚ 
static
‚‚ 
void
‚‚ 
WriteSpinner
‚‚ (
(
‚‚( )
ManualResetEvent
‚‚) 9
	untilDone
‚‚: C
)
‚‚C D
{
„„ 	
int
‰‰ 
counter
‰‰ 
=
‰‰ 
$num
‰‰ 
;
‰‰ 
while
ÂÂ 
(
ÂÂ 
!
ÂÂ 
	untilDone
ÂÂ 
.
ÂÂ 
WaitOne
ÂÂ %
(
ÂÂ% &
$num
ÂÂ& )
)
ÂÂ) *
)
ÂÂ* +
{
ÊÊ 
counter
ÁÁ 
++
ÁÁ 
;
ÁÁ 
switch
ËË 
(
ËË 
counter
ËË 
%
ËË  !
$num
ËË" #
)
ËË# $
{
ÈÈ 
case
ÍÍ 
$num
ÍÍ 
:
ÍÍ 
Console
ÍÍ #
.
ÍÍ# $
Write
ÍÍ$ )
(
ÍÍ) *
$str
ÍÍ* -
)
ÍÍ- .
;
ÍÍ. /
break
ÍÍ0 5
;
ÍÍ5 6
case
ÎÎ 
$num
ÎÎ 
:
ÎÎ 
Console
ÎÎ #
.
ÎÎ# $
Write
ÎÎ$ )
(
ÎÎ) *
$str
ÎÎ* -
)
ÎÎ- .
;
ÎÎ. /
break
ÎÎ0 5
;
ÎÎ5 6
case
ÏÏ 
$num
ÏÏ 
:
ÏÏ 
Console
ÏÏ #
.
ÏÏ# $
Write
ÏÏ$ )
(
ÏÏ) *
$str
ÏÏ* .
)
ÏÏ. /
;
ÏÏ/ 0
break
ÏÏ1 6
;
ÏÏ6 7
case
ÌÌ 
$num
ÌÌ 
:
ÌÌ 
Console
ÌÌ #
.
ÌÌ# $
Write
ÌÌ$ )
(
ÌÌ) *
$str
ÌÌ* -
)
ÌÌ- .
;
ÌÌ. /
break
ÌÌ0 5
;
ÌÌ5 6
}
ÓÓ 
if
ÔÔ 
(
ÔÔ 
Console
ÔÔ 
.
ÔÔ 

CursorLeft
ÔÔ &
>
ÔÔ' (
$num
ÔÔ) *
)
ÔÔ* +
{
 
try
ÒÒ 
{
ÚÚ 
Console
ÛÛ 
.
ÛÛ  
SetCursorPosition
ÛÛ  1
(
ÛÛ1 2
Console
ÛÛ2 9
.
ÛÛ9 :

CursorLeft
ÛÛ: D
-
ÛÛE F
$num
ÛÛG H
,
ÛÛH I
Console
ÛÛJ Q
.
ÛÛQ R
	CursorTop
ÛÛR [
)
ÛÛ[ \
;
ÛÛ\ ]
}
ÙÙ 
catch
ıı 
(
ıı )
ArgumentOutOfRangeException
ıı 6
)
ıı6 7
{
ˆˆ 
Console
˜˜ 
.
˜˜  
SetCursorPosition
˜˜  1
(
˜˜1 2
$num
˜˜2 3
,
˜˜3 4
Console
˜˜5 <
.
˜˜< =
	CursorTop
˜˜= F
)
˜˜F G
;
˜˜G H
}
¯¯ 
}
˘˘ 
}
˙˙ 
}
˚˚ 	
}
¸¸ 
}˝˝ Á
9D:\sonarcube_projects\AttackSurfaceAnalyzer\Cli\Helper.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .
Cli. 1
{ 
public		 

static		 
class		 
Helper		 
{

 
public 
class 
	GlowClass 
{ 	
public 
string 
	ClassName #
{$ %
get& )
;) *
set+ .
;. /
}0 1
=2 3
string4 :
.: ;
Empty; @
;@ A
} 	
public 
static 
string 
GetGlowClass )
() *
bool* .
value/ 4
)4 5
{ 	
return 
value 
? 
$str %
:& '
$str( 1
;1 2
} 	
public 
static 
void 

ToggleGlow %
(% &
Action& ,
RefreshCallback- <
,< =
	GlowClass> G
VariableH P
,P Q
boolR V
GlowTypeW _
,_ `
inta d
Duratione m
=n o
$nump s
)s t
{ 	
Variable 
. 
	ClassName 
=  
GetGlowClass! -
(- .
GlowType. 6
)6 7
;7 8
RefreshCallback 
( 
) 
; 
Task 
. 
Run 
( 
( 
) 
=> 
{ 
WaitAndResetGlow  
(  !
RefreshCallback! 0
,0 1
Variable2 :
,: ;
Duration< D
)D E
;E F
} 
) 
; 
}   	
static"" 
void"" 
WaitAndResetGlow"" $
(""$ %
Action""% +
RefreshCallback"", ;
,""; <
	GlowClass""= F
Variable""G O
,""O P
int""Q T
Duration""U ]
)""] ^
{## 	
Task$$ 
.$$ 
Delay$$ 
($$ 
Duration$$ 
)$$  
.$$  !
Wait$$! %
($$% &
)$$& '
;$$' (
Variable%% 
.%% 
	ClassName%% 
=%%  
string%%! '
.%%' (
Empty%%( -
;%%- .
RefreshCallback&& 
(&& 
)&& 
;&& 
}'' 	
}(( 
})) ¥

?D:\sonarcube_projects\AttackSurfaceAnalyzer\Cli\SandboxState.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .
Cli. 1
{ 
public 

class 
SandboxState 
{ 
public 

Dictionary 
< 
string  
,  !
List" &
<& '
object' -
>- .
>. /
Objects0 7
{8 9
get: =
;= >
set? B
;B C
}D E
=F G
newH K

DictionaryL V
<V W
stringW ]
,] ^
List_ c
<c d
objectd j
>j k
>k l
(l m
)m n
;n o
public 
SandboxState 
( 
) 
{ 	
} 	
public 
SandboxState 
( 

Dictionary &
<& '
string' -
,- .
List/ 3
<3 4
object4 :
>: ;
>; <
objects= D
)D E
{ 	
Objects 
= 
objects 
; 
} 	
} 
} ë
:D:\sonarcube_projects\AttackSurfaceAnalyzer\Cli\Startup.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .
Cli. 1
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddRazorPages "
(" #
)# $
;$ %
services 
. 
AddServerSideBlazor (
(( )
)) *
;* +
services 
. 
AddSingleton !
<! "
AppData" )
>) *
(* +
)+ ,
;, -
services 
.  
AddFileReaderService )
() *
)* +
;+ ,
}   	
public## 
void## 
	Configure## 
(## 
IApplicationBuilder## 1
app##2 5
,##5 6
IWebHostEnvironment##7 J
env##K N
)##N O
{$$ 	
if%% 
(%% 
env%% 
.%% 
IsDevelopment%% !
(%%! "
)%%" #
)%%# $
{&& 
app'' 
.'' %
UseDeveloperExceptionPage'' -
(''- .
)''. /
;''/ 0
}(( 
else)) 
{** 
app++ 
.++ 
UseExceptionHandler++ '
(++' (
$str++( 0
)++0 1
;++1 2
},, 
app.. 
... 
UseStaticFiles.. 
(.. 
)..  
;..  !
app00 
.00 

UseRouting00 
(00 
)00 
;00 
app22 
.22 
UseEndpoints22 
(22 
	endpoints22 &
=>22' )
{33 
	endpoints44 
.44 
MapBlazorHub44 &
(44& '
)44' (
;44( )
	endpoints55 
.55 
MapFallbackToPage55 +
(55+ ,
$str55, 4
)554 5
;555 6
}66 
)66 
;66 
}77 	
}88 
}99 
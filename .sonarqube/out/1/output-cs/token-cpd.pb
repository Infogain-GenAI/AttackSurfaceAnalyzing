Ò
ND:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\AsaDatabaseBenchmark.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .

Benchmarks. 8
{ 
public 

class  
AsaDatabaseBenchmark %
{ 
public

 
static

 
readonly

 
ConcurrentBag

 ,
<

, -
FileSystemObject

- =
>

= >
BagOfObjects

? K
=

L M
new

N Q
ConcurrentBag

R _
<

_ `
FileSystemObject

` p
>

p q
(

q r
)

r s
;

s t
public 
static 
FileSystemObject &
GetRandomObject' 6
(6 7
int7 :
ObjectPadding; H
=I J
$numK L
)L M
{ 	
BagOfObjects 
. 
TryTake  
(  !
out! $
FileSystemObject% 5
?5 6
obj7 :
): ;
;; <
if 
( 
obj 
!= 
null 
) 
{ 
obj 
. 
Path 
= 
CryptoHelpers (
.( )
GetRandomString) 8
(8 9
$num9 ;
); <
;< =
return 
obj 
; 
} 
else 
{ 
return 
new 
FileSystemObject +
(+ ,
CryptoHelpers, 9
.9 :
GetRandomString: I
(I J
$numJ L
)L M
)M N
{ 
FileType 
= 
CryptoHelpers ,
., -
GetRandomString- <
(< =
ObjectPadding= J
)J K
,K L
} 
; 
} 
} 	
} 
} È 
DD:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\CommitTest.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .

Benchmarks. 8
{ 
[ %
MarkdownExporterAttribute 
. 
GitHub %
]% &
[ !
JsonExporterAttribute 
. 
Full 
]  
public 

class 

CommitTest 
{		 
public 

CommitTest 
( 
) 
{ 	
Logger 
. 
Setup 
( 
true 
, 
true #
)# $
;$ %
Strings 
. 
Setup 
( 
) 
; 
} 	
[ 	
Params	 
( 
$str 
, 
$str 
,  
$str! &
,& '
$str( 0
)0 1
]1 2
public 
string 
JournalMode !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Params	 
( 
$num 
, 
$num 
, 
$num #
)# $
]$ %
public 
int 
N 
{ 
get 
; 
set 
;  
}! "
[ 	
Params	 
( 
$num 
, 
$num 
, 
$num 
, 
$num 
, 
$num 
, 
$num  
,  !
$num" #
,# $
$num% &
,& '
$num( )
,) *
$num+ -
,- .
$num/ 1
,1 2
$num3 5
)5 6
]6 7
public 
int 
Shards 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
	Benchmark	 
] 
public 
void 
CommitTransaction %
(% &
)& '
{   	
	dbManager!! 
.!! 
Commit!! 
(!! 
)!! 
;!! 
}"" 	
[$$ 	
IterationCleanup$$	 
]$$ 
public%% 
void%% 
IterationCleanup%% $
(%%$ %
)%%% &
{&& 	
	dbManager'' 
.'' 
Destroy'' 
('' 
)'' 
;''  
}(( 	
[** 	
IterationSetup**	 
]** 
public++ 
void++ 
IterationSetup++ "
(++" #
)++# $
{,, 	
Setup-- 
(-- 
)-- 
;-- 
	dbManager.. 
... 
BeginTransaction.. &
(..& '
)..' (
;..( )*
InsertTestsWithoutTransactions// *
.//* +
Insert_X_Objects//+ ;
(//; <
N//< =
,//= >
	dbManager//? H
)//H I
;//I J
}00 	
public22 
void22 
Setup22 
(22 
)22 
{33 	
	dbManager44 
=44 
new44 !
SqliteDatabaseManager44 1
(441 2
filename442 :
:44: ;
$"44< >
$str44> K
{44K L
Shards44L R
}44R S
$str44S Z
"44Z [
,44[ \
new44] `

DBSettings44a k
(44k l
)44l m
{55 
JournalMode66 
=66 
JournalMode66 )
,66) *
ShardingFactor77 
=77  
Shards77! '
}88 
)88 
;88 
	dbManager99 
.99 
Setup99 
(99 
)99 
;99 
}:: 	
private<< 
DatabaseManager<< 
	dbManager<<  )
;<<) *
}?? 
}@@ ËP
ED:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\CryptoTests.cs
	namespace		 	
	Microsoft		
 
.		 
CST		 
.		 !
AttackSurfaceAnalyzer		 -
.		- .

Benchmarks		. 8
{

 
[ %
MarkdownExporterAttribute 
. 
GitHub %
]% &
[ !
JsonExporterAttribute 
. 
Full 
]  
public 

class 
CryptoTests 
:  
AsaDatabaseBenchmark 3
{ 
public 
CryptoTests 
( 
) 
{ 	
} 	
[ 	
Params	 
( 
$num 
) 
] 
public 
int 
N 
{ 
get 
; 
set 
;  
}! "
[ 	
Params	 
( 
$num 
) 
] 
public 
int 

NumObjects 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Params	 
( 
$num 
) 
] 
public 
int 
ObjectPadding  
{! "
get# &
;& '
set( +
;+ ,
}- .
[   	
	Benchmark  	 
]   
public!! 
void!! $
Generate_N_Murmur_Hashes!! ,
(!!, -
)!!- .
{"" 	
for## 
(## 
int## 
i## 
=## 
$num## 
;## 
i## 
<## 
N##  !
;##! "
i### $
++##$ &
)##& '
{$$ 
hashObjects%% 
.%% 

TryDequeue%% &
(%%& '
out%%' *
byte%%+ /
[%%/ 0
]%%0 1
?%%1 2
result%%3 9
)%%9 :
;%%: ;
if&& 
(&& 
result&& 
is&& 
byte&& "
[&&" #
]&&# $
)&&$ %
{'' 
_(( 
=(( 
	murmur128(( !
.((! "
ComputeHash((" -
(((- .
result((. 4
)((4 5
;((5 6
hashObjects)) 
.))  
Enqueue))  '
())' (
result))( .
))). /
;))/ 0
}** 
else++ 
{,, 
Log-- 
.-- 
Information-- #
(--# $
$str--$ F
)--F G
;--G H
}.. 
}// 
}00 	
[22 	
	Benchmark22	 
(22 
Baseline22 
=22 
true22 "
)22" #
]22# $
public33 
void33 $
Generate_N_SHA256_Hashes33 ,
(33, -
)33- .
{44 	
for55 
(55 
int55 
i55 
=55 
$num55 
;55 
i55 
<55 
N55  !
;55! "
i55# $
++55$ &
)55& '
{66 
hashObjects77 
.77 

TryDequeue77 &
(77& '
out77' *
byte77+ /
[77/ 0
]770 1
?771 2
result773 9
)779 :
;77: ;
if88 
(88 
result88 
is88 
byte88 "
[88" #
]88# $
)88$ %
{99 
_:: 
=:: 
sha256:: 
.:: 
ComputeHash:: *
(::* +
result::+ 1
)::1 2
;::2 3
hashObjects;; 
.;;  
Enqueue;;  '
(;;' (
result;;( .
);;. /
;;;/ 0
}<< 
else== 
{>> 
Log?? 
.?? 
Information?? #
(??# $
$str??$ F
)??F G
;??G H
}@@ 
}AA 
}BB 	
[DD 	
	BenchmarkDD	 
]DD 
publicEE 
voidEE +
Generate_N_SHA256Managed_HashesEE 3
(EE3 4
)EE4 5
{FF 	
forGG 
(GG 
intGG 
iGG 
=GG 
$numGG 
;GG 
iGG 
<GG 
NGG  !
;GG! "
iGG# $
++GG$ &
)GG& '
{HH 
hashObjectsII 
.II 

TryDequeueII &
(II& '
outII' *
byteII+ /
[II/ 0
]II0 1
?II1 2
resultII3 9
)II9 :
;II: ;
ifJJ 
(JJ 
resultJJ 
isJJ 
byteJJ "
[JJ" #
]JJ# $
)JJ$ %
{KK 
_LL 
=LL 
sha256managedLL %
.LL% &
ComputeHashLL& 1
(LL1 2
resultLL2 8
)LL8 9
;LL9 :
hashObjectsMM 
.MM  
EnqueueMM  '
(MM' (
resultMM( .
)MM. /
;MM/ 0
}NN 
elseOO 
{PP 
LogQQ 
.QQ 
InformationQQ #
(QQ# $
$strQQ$ F
)QQF G
;QQG H
}RR 
}SS 
}TT 	
[VV 	
	BenchmarkVV	 
]VV 
publicWW 
voidWW $
Generate_N_SHA512_HashesWW ,
(WW, -
)WW- .
{XX 	
forYY 
(YY 
intYY 
iYY 
=YY 
$numYY 
;YY 
iYY 
<YY 
NYY  !
;YY! "
iYY# $
++YY$ &
)YY& '
{ZZ 
hashObjects[[ 
.[[ 

TryDequeue[[ &
([[& '
out[[' *
byte[[+ /
[[[/ 0
][[0 1
?[[1 2
result[[3 9
)[[9 :
;[[: ;
if\\ 
(\\ 
result\\ 
is\\ 
byte\\ "
[\\" #
]\\# $
)\\$ %
{]] 
_^^ 
=^^ 
sha512^^ 
.^^ 
ComputeHash^^ *
(^^* +
result^^+ 1
)^^1 2
;^^2 3
hashObjects__ 
.__  
Enqueue__  '
(__' (
result__( .
)__. /
;__/ 0
}`` 
elseaa 
{bb 
Logcc 
.cc 
Informationcc #
(cc# $
$strcc$ F
)ccF G
;ccG H
}dd 
}ee 
}ff 	
[hh 	
	Benchmarkhh	 
]hh 
publicii 
voidii ,
 Generate_N_SHA512_Managed_Hashesii 4
(ii4 5
)ii5 6
{jj 	
forkk 
(kk 
intkk 
ikk 
=kk 
$numkk 
;kk 
ikk 
<kk 
Nkk  !
;kk! "
ikk# $
++kk$ &
)kk& '
{ll 
hashObjectsmm 
.mm 

TryDequeuemm &
(mm& '
outmm' *
bytemm+ /
[mm/ 0
]mm0 1
?mm1 2
resultmm3 9
)mm9 :
;mm: ;
ifnn 
(nn 
resultnn 
isnn 
bytenn "
[nn" #
]nn# $
)nn$ %
{oo 
_pp 
=pp 
sha512managedpp %
.pp% &
ComputeHashpp& 1
(pp1 2
resultpp2 8
)pp8 9
;pp9 :
hashObjectsqq 
.qq  
Enqueueqq  '
(qq' (
resultqq( .
)qq. /
;qq/ 0
}rr 
elsess 
{tt 
Loguu 
.uu 
Informationuu #
(uu# $
$struu$ F
)uuF G
;uuG H
}vv 
}ww 
}xx 	
[zz 	
GlobalSetupzz	 
]zz 
public{{ 
void{{ 
GlobalSetup{{ 
({{  
){{  !
{|| 	
while}} 
(}} 
hashObjects}} 
.}} 
Count}} $
<}}% &

NumObjects}}' 1
)}}1 2
{~~ 
hashObjects 
. 
Enqueue #
(# $
Encoding$ ,
., -
UTF8- 1
.1 2
GetBytes2 :
(: ;
JsonConvert; F
.F G
SerializeObjectG V
(V W
GetRandomObjectW f
(f g
ObjectPaddingg t
)t u
)u v
)v w
)w x
;x y
}
 
}
 	
private
 
static
 
readonly
 
HashAlgorithm
  -
	murmur128
. 7
=
8 9

MurmurHash
: D
.
D E
	Create128
E N
(
N O
)
O P
;
P Q
private
 
static
 
readonly
 
HashAlgorithm
  -
sha256
. 4
=
5 6
SHA256
7 =
.
= >
Create
> D
(
D E
)
E F
;
F G
private
 
static
 
readonly
 
HashAlgorithm
  -
sha256managed
. ;
=
< =
SHA256Managed
> K
.
K L
Create
L R
(
R S
)
S T
;
T U
private
 
static
 
readonly
 
HashAlgorithm
  -
sha512
. 4
=
5 6
SHA512
7 =
.
= >
Create
> D
(
D E
)
E F
;
F G
private
 
static
 
readonly
 
HashAlgorithm
  -
sha512managed
. ;
=
< =
SHA512Managed
> K
.
K L
Create
L R
(
R S
)
S T
;
T U
private
 
readonly
 
ConcurrentQueue
 (
<
( )
byte
) -
[
- .
]
. /
>
/ 0
hashObjects
1 <
=
= >
new
? B
ConcurrentQueue
C R
<
R S
byte
S W
[
W X
]
X Y
>
Y Z
(
Z [
)
[ \
;
\ ]
}
 
} :
aD:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\InsertTestsWithIntermittentTransactions.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .

Benchmarks. 8
{ 
[ %
MarkdownExporterAttribute 
. 
GitHub %
]% &
[		 !
JsonExporterAttribute		 
.		 
Full		 
]		  
public

 

class

 3
'InsertTestsWithIntermittentTransactions

 8
:

9 : 
AsaDatabaseBenchmark

; O
{ 
public 3
'InsertTestsWithIntermittentTransactions 6
(6 7
)7 8
{ 	
Logger 
. 
Setup 
( 
true 
, 
true #
)# $
;$ %
Strings 
. 
Setup 
( 
) 
; 
} 	
[ 	
Params	 
( 
- 
$num 
) 
] 
public 
int 

FlushCount 
{ 
get  #
;# $
set% (
;( )
}* +
[ 	
Params	 
( 
$str 
) 
] 
public 
string 
JournalMode !
{" #
get$ '
;' (
set) ,
;, -
}. /
[   	
Params  	 
(   
$num   
,   
$num   
)    
]    !
public!! 
int!! 
N!! 
{!! 
get!! 
;!! 
set!! 
;!!  
}!!! "
[%% 	
Params%%	 
(%% 
$num%% 
)%% 
]%% 
public&& 
int&& 
ObjectPadding&&  
{&&! "
get&&# &
;&&& '
set&&( +
;&&+ ,
}&&- .
[)) 	
Params))	 
()) 
$num)) 
))) 
])) 
public** 
int** 
Shards** 
{** 
get** 
;**  
set**! $
;**$ %
}**& '
[.. 	
Params..	 
(.. 
$num.. 
).. 
].. 
public// 
int// 
StartingSize// 
{//  !
get//" %
;//% &
set//' *
;//* +
}//, -
public33 
static33 
void33 
Insert_X_Objects33 +
(33+ ,
int33, /
X330 1
,331 2
int333 6
ObjectPadding337 D
=33E F
$num33G H
,33H I
string33J P
runName33Q X
=33Y Z
$str33[ m
)33m n
{44 	
	dbManager55 
.55 
BeginTransaction55 &
(55& '
)55' (
;55( )
Parallel77 
.77 
For77 
(77 
$num77 
,77 
X77 
,77 
i77  
=>77! #
{88 
var99 
obj99 
=99 
GetRandomObject99 )
(99) *
ObjectPadding99* 7
)997 8
;998 9
	dbManager:: 
.:: 
Write:: 
(::  
obj::  #
,::# $
runName::% ,
)::, -
;::- .
BagOfObjects;; 
.;; 
Add;;  
(;;  !
obj;;! $
);;$ %
;;;% &
}<< 
)<< 
;<< 
while>> 
(>> 
	dbManager>> 
.>> 
HasElements>> (
)>>( )
{?? 
Thread@@ 
.@@ 
Sleep@@ 
(@@ 
$num@@ 
)@@ 
;@@  
}AA 
	dbManagerCC 
.CC 
CommitCC 
(CC 
)CC 
;CC 
}DD 	
[FF 	
GlobalCleanupFF	 
]FF 
publicGG 
voidGG 
GlobalCleanupGG !
(GG! "
)GG" #
{HH 	
SetupII 
(II 
)II 
;II 
	dbManagerJJ 
.JJ 
DestroyJJ 
(JJ 
)JJ 
;JJ  
}KK 	
[MM 	
GlobalSetupMM	 
]MM 
publicNN 
voidNN 
GlobalSetupNN 
(NN  
)NN  !
{OO 	
PopulateDatabasesPP 
(PP 
)PP 
;PP  
}QQ 	
[SS 	
	BenchmarkSS	 
]SS 
publicTT 
voidTT 
Insert_N_ObjectsTT $
(TT$ %
)TT% &
=>TT' )
Insert_X_ObjectsTT* :
(TT: ;
NTT; <
,TT< =
ObjectPaddingTT> K
,TTK L
$strTTM _
)TT_ `
;TT` a
[VV 	
IterationCleanupVV	 
]VV 
publicWW 
voidWW 
IterationCleanupWW $
(WW$ %
)WW% &
{XX 	
	dbManagerYY 
.YY 
BeginTransactionYY &
(YY& '
)YY' (
;YY( )
	dbManagerZZ 
.ZZ 
	DeleteRunZZ 
(ZZ  
$strZZ  2
)ZZ2 3
;ZZ3 4
	dbManager[[ 
.[[ 
Commit[[ 
([[ 
)[[ 
;[[ 
	dbManager\\ 
.\\ 
Vacuum\\ 
(\\ 
)\\ 
;\\ 
	dbManager]] 
.]] 
CloseDatabase]] #
(]]# $
)]]$ %
;]]% &
}^^ 	
[`` 	
IterationSetup``	 
]`` 
publicaa 
voidaa 
IterationSetupaa "
(aa" #
)aa# $
{bb 	
Setupcc 
(cc 
)cc 
;cc 
}dd 	
publicff 
voidff 
PopulateDatabasesff %
(ff% &
)ff& '
{gg 	
Setuphh 
(hh 
)hh 
;hh 
Insert_X_Objectsjj 
(jj 
StartingSizejj )
,jj) *
ObjectPaddingjj+ 8
,jj8 9
$strjj: L
)jjL M
;jjM N
	dbManagerll 
.ll 
CloseDatabasell #
(ll# $
)ll$ %
;ll% &
}mm 	
publicoo 
voidoo 
Setupoo 
(oo 
)oo 
{pp 	
	dbManagerqq 
=qq 
newqq !
SqliteDatabaseManagerqq 1
(qq1 2
filenameqq2 :
:qq: ;
$"qq< >
$strqq> K
{qqK L
ShardsqqL R
}qqR S
$strqqS Z
"qqZ [
,qq[ \
newqq] `

DBSettingsqqa k
(qqk l
)qql m
{rr 
ShardingFactorss 
=ss  
Shardsss! '
,ss' (

FlushCounttt 
=tt 

FlushCounttt '
,tt' (
JournalModeuu 
=uu 
JournalModeuu )
}vv 
)vv 
;vv 
	dbManagerww 
.ww 
Setupww 
(ww 
)ww 
;ww 
}xx 	
privatezz 
staticzz 
DatabaseManagerzz &
	dbManagerzz' 0
;zz0 1
}{{ 
}|| @
XD:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\InsertTestsWithoutTransactions.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .

Benchmarks. 8
{ 
[ %
MarkdownExporterAttribute 
. 
GitHub %
]% &
[		 !
JsonExporterAttribute		 
.		 
Full		 
]		  
public

 

class

 *
InsertTestsWithoutTransactions

 /
:

0 1 
AsaDatabaseBenchmark

2 F
{ 
public *
InsertTestsWithoutTransactions -
(- .
). /
{ 	
Logger 
. 
Setup 
( 
true 
, 
true #
)# $
;$ %
Strings 
. 
Setup 
( 
) 
; 
} 	
[ 	
Params	 
( 
$num 
) 
] 
public 
int 
	BatchSize 
{ 
get "
;" #
set$ '
;' (
}) *
[ 	
Params	 
( 
$str 
) 
] 
public 
string 
JournalMode !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Params	 
( 
$str 
) 
] 
public 
string 
LockingMode !
{" #
get$ '
;' (
set) ,
;, -
}. /
[!! 	
Params!!	 
(!! 
$num!! 
)!! 
]!! 
public"" 
int"" 
N"" 
{"" 
get"" 
;"" 
set"" 
;""  
}""! "
[&& 	
Params&&	 
(&& 
$num&& 
,&& 
$num&& 
)&& 
]&& 
public'' 
int'' 
ObjectPadding''  
{''! "
get''# &
;''& '
set''( +
;''+ ,
}''- .
[)) 	
Params))	 
()) 
$num)) 
))) 
])) 
public** 
int** 
PageSize** 
{** 
get** !
;**! "
set**# &
;**& '
}**( )
[-- 	
Params--	 
(-- 
$num-- 
)-- 
]-- 
public.. 
int.. 
Shards.. 
{.. 
get.. 
;..  
set..! $
;..$ %
}..& '
[22 	
Params22	 
(22 
$num22 
)22 
]22 
public33 
int33 
StartingSize33 
{33  !
get33" %
;33% &
set33' *
;33* +
}33, -
[55 	
Params55	 
(55 
$str55 
)55 
]55 
public66 
string66 
Synchronous66 !
{66" #
get66$ '
;66' (
set66) ,
;66, -
}66. /
public88 
static88 
void88 
Insert_X_Objects88 +
(88+ ,
int88, /
X880 1
,881 2
DatabaseManager883 B
	dbManager88C L
,88L M
int88N Q
ObjectPadding88R _
=88` a
$num88b c
,88c d
string88e k
runName88l s
=88t u
$str	88v 
)
88 
{99 	
Parallel:: 
.:: 
For:: 
(:: 
$num:: 
,:: 
X:: 
,:: 
i::  
=>::! #
{;; 
var<< 
obj<< 
=<< 
GetRandomObject<< )
(<<) *
ObjectPadding<<* 7
)<<7 8
;<<8 9
	dbManager== 
.== 
Write== 
(==  
obj==  #
,==# $
runName==% ,
)==, -
;==- .
BagOfObjects>> 
.>> 
Add>>  
(>>  !
obj>>! $
)>>$ %
;>>% &
}?? 
)?? 
;?? 
whileAA 
(AA 
	dbManagerAA 
.AA 
HasElementsAA (
)AA( )
{BB 
ThreadCC 
.CC 
SleepCC 
(CC 
$numCC 
)CC 
;CC  
}DD 
}EE 	
[GG 	
GlobalCleanupGG	 
]GG 
publicHH 
voidHH 
GlobalCleanupHH !
(HH! "
)HH" #
{II 	
SetupJJ 
(JJ 
)JJ 
;JJ 
	dbManagerKK 
.KK 
DestroyKK 
(KK 
)KK 
;KK  
}LL 	
[NN 	
GlobalSetupNN	 
]NN 
publicOO 
voidOO 
GlobalSetupOO 
(OO  
)OO  !
{PP 	
PopulateDatabasesQQ 
(QQ 
)QQ 
;QQ  
}RR 	
[TT 	
	BenchmarkTT	 
]TT 
publicUU 
voidUU 
Insert_N_ObjectsUU $
(UU$ %
)UU% &
=>UU' )
Insert_X_ObjectsUU* :
(UU: ;
NUU; <
,UU< =
	dbManagerUU> G
,UUG H
ObjectPaddingUUI V
,UUV W
$strUUX j
)UUj k
;UUk l
[WW 	
IterationCleanupWW	 
]WW 
publicXX 
voidXX 
IterationCleanupXX $
(XX$ %
)XX% &
{YY 	
	dbManagerZZ 
.ZZ 
CloseDatabaseZZ #
(ZZ# $
)ZZ$ %
;ZZ% &
}[[ 	
[]] 	
IterationSetup]]	 
]]] 
public^^ 
void^^ 
IterationSetup^^ "
(^^" #
)^^# $
{__ 	
Setup`` 
(`` 
)`` 
;`` 
	dbManageraa 
.aa 
BeginTransactionaa &
(aa& '
)aa' (
;aa( )
}bb 	
publicdd 
voiddd 
PopulateDatabasesdd %
(dd% &
)dd& '
{ee 	
Setupff 
(ff 
)ff 
;ff 
	dbManagergg 
.gg 
BeginTransactiongg &
(gg& '
)gg' (
;gg( )
Insert_X_Objectsii 
(ii 
StartingSizeii )
,ii) *
	dbManagerii+ 4
,ii4 5
ObjectPaddingii6 C
,iiC D
$striiE W
)iiW X
;iiX Y
	dbManagerkk 
.kk 
Commitkk 
(kk 
)kk 
;kk 
	dbManagerll 
.ll 
CloseDatabasell #
(ll# $
)ll$ %
;ll% &
}mm 	
privateoo 
DatabaseManageroo 
	dbManageroo  )
;oo) *
privateqq 
voidqq 
Setupqq 
(qq 
)qq 
{rr 	
	dbManagerss 
=ss 
newss !
SqliteDatabaseManagerss 1
(ss1 2
filenamess2 :
:ss: ;
$"ss< >
$strss> K
{ssK L
ShardsssL R
}ssR S
$strssS Z
"ssZ [
,ss[ \
newss] `

DBSettingsssa k
(ssk l
)ssl m
{tt 
JournalModeuu 
=uu 
JournalModeuu )
,uu) *
LockingModevv 
=vv 
LockingModevv )
,vv) *
PageSizeww 
=ww 
PageSizeww #
,ww# $
ShardingFactorxx 
=xx  
Shardsxx! '
,xx' (
Synchronousyy 
=yy 
Synchronousyy )
,yy) *
	BatchSizezz 
=zz 
	BatchSizezz %
}{{ 
){{ 
;{{ 
	dbManager}} 
.}} 
Setup}} 
(}} 
)}} 
;}} 
}~~ 	
} 
} «)
MD:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\OpenTransactionTest.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .

Benchmarks. 8
{ 
[ %
MarkdownExporterAttribute 
. 
GitHub %
]% &
[ !
JsonExporterAttribute 
. 
Full 
]  
public 

class 
OpenTransactionTest $
:% & 
AsaDatabaseBenchmark' ;
{		 
public 
OpenTransactionTest "
(" #
)# $
{ 	
Logger 
. 
Setup 
( 
true 
, 
true #
)# $
;$ %
Strings 
. 
Setup 
( 
) 
; 
} 	
[ 	
Params	 
( 
$str 
, 
$str 
,  
$str! &
,& '
$str( 0
)0 1
]1 2
public 
string 
JournalMode !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Params	 
( 
$num 
, 
$num 
, 
$num 
, 
$num 
, 
$num 
, 
$num  
,  !
$num" #
,# $
$num% &
,& '
$num( )
,) *
$num+ -
,- .
$num/ 1
,1 2
$num3 5
)5 6
]6 7
public 
int 
Shards 
{ 
get 
;  
set! $
;$ %
}& '
[ 	
Params	 
( 
$num 
) 
] 
public 
int 
StartingSize 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
	Benchmark	 
] 
public   
void   
BeginTransaction   $
(  $ %
)  % &
{!! 	
	dbManager"" 
."" 
BeginTransaction"" &
(""& '
)""' (
;""( )
}## 	
[%% 	
GlobalCleanup%%	 
]%% 
public&& 
void&& 
GlobalCleanup&& !
(&&! "
)&&" #
{'' 	
Setup(( 
((( 
)(( 
;(( 
	dbManager)) 
.)) 
Destroy)) 
()) 
))) 
;))  
}** 	
[,, 	
GlobalSetup,,	 
],, 
public-- 
void-- 
GlobalSetup-- 
(--  
)--  !
{.. 	
PopulateDatabases// 
(// 
)// 
;//  
}00 	
[22 	
IterationCleanup22	 
]22 
public33 
void33 
IterationCleanup33 $
(33$ %
)33% &
{44 	
	dbManager55 
.55 
CloseDatabase55 #
(55# $
)55$ %
;55% &
}66 	
[88 	
IterationSetup88	 
]88 
public99 
void99 
IterationSetup99 "
(99" #
)99# $
{:: 	
Setup;; 
(;; 
);; 
;;; 
}<< 	
public>> 
void>> 
PopulateDatabases>> %
(>>% &
)>>& '
{?? 	
Setup@@ 
(@@ 
)@@ 
;@@ 
	dbManagerAA 
.AA 
BeginTransactionAA &
(AA& '
)AA' (
;AA( )*
InsertTestsWithoutTransactionsCC *
.CC* +
Insert_X_ObjectsCC+ ;
(CC; <
StartingSizeCC< H
,CCH I
	dbManagerCCJ S
,CCS T
$numCCU V
,CCV W
$strCCX j
)CCj k
;CCk l
	dbManagerEE 
.EE 
CommitEE 
(EE 
)EE 
;EE 
	dbManagerFF 
.FF 
CloseDatabaseFF #
(FF# $
)FF$ %
;FF% &
}GG 	
publicII 
voidII 
SetupII 
(II 
)II 
{JJ 	
	dbManagerKK 
=KK 
newKK !
SqliteDatabaseManagerKK 1
(KK1 2
filenameKK2 :
:KK: ;
$"KK< >
$strKK> K
{KKK L
ShardsKKL R
}KKR S
$strKKS Z
"KKZ [
,KK[ \
newKK] `

DBSettingsKKa k
(KKk l
)KKl m
{LL 
JournalModeMM 
=MM 
JournalModeMM )
,MM) *
ShardingFactorNN 
=NN  
ShardsNN! '
}OO 
)OO 
;OO 
	dbManagerPP 
.PP 
SetupPP 
(PP 
)PP 
;PP 
}QQ 	
privateSS 
DatabaseManagerSS 
	dbManagerSS  )
;SS) *
}TT 
}UU þ
AD:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\Program.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .

Benchmarks. 8
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
var		 
summary		 
=		 
BenchmarkRunner		 )
.		) *
Run		* -
<		- .
CryptoTests		. 9
>		9 :
(		: ;
)		; <
;		< =
}

 	
} 
} i
DD:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\QueryTests.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .

Benchmarks. 8
{ 
[		 %
MarkdownExporterAttribute		 
.		 
GitHub		 %
]		% &
[

 !
JsonExporterAttribute

 
.

 
Full

 
]

  
public 

class 

QueryTests 
:  
AsaDatabaseBenchmark 2
{ 
public 

QueryTests 
( 
) 
{ 	
Logger 
. 
Setup 
( 
true 
, 
true #
)# $
;$ %
Strings 
. 
Setup 
( 
) 
; 
} 	
[ 	
Params	 
( 
$num 
, 
$num 
, 
$num 
, 
$num 
,  
$num! "
)" #
]# $
public 
double 
IdentityMatches %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
[ 	
Params	 
( 
$str 
) 
] 
public 
string 
JournalMode !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Params	 
( 
$str 
) 
] 
public   
string   
LockingMode   !
{  " #
get  $ '
;  ' (
set  ) ,
;  , -
}  . /
[$$ 	
Params$$	 
($$ 
$num$$ 
)$$ 
]$$ 
public%% 
int%% 
ObjectPadding%%  
{%%! "
get%%# &
;%%& '
set%%( +
;%%+ ,
}%%- .
[(( 	
Params((	 
((( 
$num(( 
)(( 
](( 
public)) 
int)) 
PageSize)) 
{)) 
get)) !
;))! "
set))# &
;))& '
}))( )
[,, 	
Params,,	 
(,, 
$num,, 
,,, 
$num,, 
,,, 
$num,, 
,,, 
$num,, 
,,,  
$num,,! "
),," #
],,# $
public-- 
double-- 
RowKeyMatches-- #
{--$ %
get--& )
;--) *
set--+ .
;--. /
}--0 1
[00 	
Params00	 
(00 
$num00 
)00 
]00 
public11 
int11 

RunOneSize11 
{11 
get11  #
;11# $
set11% (
;11( )
}11* +
[44 	
Params44	 
(44 
$num44 
)44 
]44 
public55 
int55 

RunTwoSize55 
{55 
get55  #
;55# $
set55% (
;55( )
}55* +
[88 	
Params88	 
(88 
$num88 
)88 
]88 
public99 
int99 
Shards99 
{99 
get99 
;99  
set99! $
;99$ %
}99& '
[<< 	
Params<<	 
(<< 
$num<< 
)<< 
]<< 
public== 
int== 
StartingSize== 
{==  !
get==" %
;==% &
set==' *
;==* +
}==, -
[@@ 	
Params@@	 
(@@ 
$str@@ 
)@@ 
]@@ 
publicAA 
stringAA 
SynchronousAA !
{AA" #
getAA$ '
;AA' (
setAA) ,
;AA, -
}AA. /
[CC 	
	BenchmarkCC	 
]CC 
publicDD 
voidDD 
GetAllMissing2TestDD &
(DD& '
)DD' (
{EE 	
(FF 
(FF !
SqliteDatabaseManagerFF #
)FF# $
	dbManagerFF$ -
)FF- .
.FF. /
GetAllMissing2FF/ =
(FF= >

RunOneNameFF> H
,FFH I

RunTwoNameFFJ T
)FFT U
;FFU V
}GG 	
[II 	
	BenchmarkII	 
]II 
publicJJ 
voidJJ )
GetAllMissingExplicitIndexingJJ 1
(JJ1 2
)JJ2 3
{KK 	
(LL 
(LL !
SqliteDatabaseManagerLL #
)LL# $
	dbManagerLL$ -
)LL- .
.LL. /!
GetAllMissingExplicitLL/ D
(LLD E

RunOneNameLLE O
,LLO P

RunTwoNameLLQ [
)LL[ \
;LL\ ]
}MM 	
[OO 	
	BenchmarkOO	 
(OO 
BaselineOO 
=OO 
trueOO "
)OO" #
]OO# $
publicPP 
voidPP 
GetAllMissingTestPP %
(PP% &
)PP& '
{QQ 	
	dbManagerRR 
.RR 
GetAllMissingRR #
(RR# $

RunOneNameRR$ .
,RR. /

RunTwoNameRR0 :
)RR: ;
;RR; <
}SS 	
[ZZ 	
	BenchmarkZZ	 
]ZZ 
public[[ 
void[[ $
GetMissingFromFirstTwice[[ ,
([[, -
)[[- .
{\\ 	
	dbManager]] 
.]] 
GetMissingFromFirst]] )
(]]) *

RunOneName]]* 4
,]]4 5

RunTwoName]]6 @
)]]@ A
;]]A B
	dbManager^^ 
.^^ 
GetMissingFromFirst^^ )
(^^) *

RunTwoName^^* 4
,^^4 5

RunOneName^^6 @
)^^@ A
;^^A B
}__ 	
[aa 	
GlobalCleanupaa	 
]aa 
publicbb 
voidbb 
GlobalCleanupbb !
(bb! "
)bb" #
{cc 	
Setupdd 
(dd 
)dd 
;dd 
	dbManageree 
.ee 
Destroyee 
(ee 
)ee 
;ee  
}ff 	
[hh 	
GlobalSetuphh	 
]hh 
publicii 
voidii 
GlobalSetupii 
(ii  
)ii  !
{jj 	
PopulateDatabaseskk 
(kk 
)kk 
;kk  
}ll 	
publicnn 
voidnn 
InsertFirstRunnn "
(nn" #
)nn# $
{oo 	
Parallelpp 
.pp 
Forpp 
(pp 
$numpp 
,pp 

RunOneSizepp &
,pp& '
ipp( )
=>pp* ,
{qq 
varrr 
objrr 
=rr 
GetRandomObjectrr )
(rr) *
ObjectPaddingrr* 7
)rr7 8
;rr8 9
	dbManagerss 
.ss 
Writess 
(ss  
objss  #
,ss# $

RunOneNamess% /
)ss/ 0
;ss0 1
ifuu 
(uu 
objuu 
.uu 
FileTypeuu  
!=uu! #
nulluu$ (
)uu( )
{vv 
BagOfObjectsww  
.ww  !
Addww! $
(ww$ %
objww% (
)ww( )
;ww) *
}xx 
}yy 
)yy 
;yy 
while{{ 
({{ 
	dbManager{{ 
.{{ 
HasElements{{ (
){{( )
{|| 
Thread}} 
.}} 
Sleep}} 
(}} 
$num}} 
)}} 
;}}  
}~~ 
} 	
public
 
void
 
InsertSecondRun
 #
(
# $
)
$ %
{
 	
Parallel
 
.
 
For
 
(
 
$num
 
,
 

RunTwoSize
 &
,
& '
i
( )
=>
* ,
{
 
var
 
obj
 
=
 
GetRandomObject
 )
(
) *
ObjectPadding
* 7
)
7 8
;
8 9
if
 
(
 
BagOfIdentities
 #
.
# $
TryTake
$ +
(
+ ,
out
, /
(
0 1
string
1 7
,
7 8
string
9 ?
)
? @
Id
A C
)
C D
)
D E
{
 
if
 
(
 
CryptoHelpers
 %
.
% &%
GetRandomPositiveDouble
& =
(
= >
$num
> ?
)
? @
>
A B
IdentityMatches
C R
)
R S
{
 
obj
 
.
 
Path
  
=
! "
Id
# %
.
% &
Item1
& +
;
+ ,
if
 
(
 
CryptoHelpers
 )
.
) *%
GetRandomPositiveDouble
* A
(
A B
$num
B C
)
C D
>
E F
RowKeyMatches
G T
)
T U
{
 
obj
 
.
  
FileType
  (
=
) *
Id
+ -
.
- .
Item2
. 3
;
3 4
}
 
}
 
}
 
	dbManager
 
.
 
Write
 
(
  
obj
  #
,
# $

RunTwoName
% /
)
/ 0
;
0 1
BagOfObjects
 
.
 
Add
  
(
  !
obj
! $
)
$ %
;
% &
}
 
)
 
;
 
}
 	
[
 	
IterationCleanup
	 
]
 
public
 
void
 
IterationCleanup
 $
(
$ %
)
% &
{
 	
	dbManager
 
.
 
CloseDatabase
 #
(
# $
)
$ %
;
% &
}
 	
[
 	
IterationSetup
	 
]
 
public
 
void
 
IterationSetup
 "
(
" #
)
# $
{
   	
Setup
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡ 
}
¢¢ 	
public
©© 
void
©© 
PopulateDatabases
©© %
(
©©% &
)
©©& '
{
ªª 	
Setup
«« 
(
«« 
)
«« 
;
«« 
	dbManager
¬¬ 
.
¬¬ 
BeginTransaction
¬¬ &
(
¬¬& '
)
¬¬' (
;
¬¬( )
InsertFirstRun
®® 
(
®® 
)
®® 
;
®® 
InsertSecondRun
¯¯ 
(
¯¯ 
)
¯¯ 
;
¯¯ 
while
±± 
(
±± 
	dbManager
±± 
.
±± 
HasElements
±± (
)
±±( )
{
²² 
Thread
³³ 
.
³³ 
Sleep
³³ 
(
³³ 
$num
³³ 
)
³³ 
;
³³  
}
´´ 
	dbManager
¶¶ 
.
¶¶ 
Commit
¶¶ 
(
¶¶ 
)
¶¶ 
;
¶¶ 
	dbManager
·· 
.
·· 
CloseDatabase
·· #
(
··# $
)
··$ %
;
··% &
}
¸¸ 	
private
»» 
static
»» 
readonly
»» 
ConcurrentBag
»»  -
<
»»- .
(
»». /
string
»»/ 5
,
»»5 6
string
»»7 =
)
»»= >
>
»»> ?
BagOfIdentities
»»@ O
=
»»P Q
new
»»R U
ConcurrentBag
»»V c
<
»»c d
(
»»d e
string
»»e k
,
»»k l
string
»»m s
)
»»s t
>
»»t u
(
»»u v
)
»»v w
;
»»w x
private
½½ 
readonly
½½ 
string
½½ 

RunOneName
½½  *
=
½½+ ,
$str
½½- 5
;
½½5 6
private
¾¾ 
readonly
¾¾ 
string
¾¾ 

RunTwoName
¾¾  *
=
¾¾+ ,
$str
¾¾- 5
;
¾¾5 6
private
¿¿ 
DatabaseManager
¿¿ 
	dbManager
¿¿  )
;
¿¿) *
private
ÁÁ 
void
ÁÁ 
Setup
ÁÁ 
(
ÁÁ 
)
ÁÁ 
{
ÂÂ 	
	dbManager
ÃÃ 
=
ÃÃ 
new
ÃÃ #
SqliteDatabaseManager
ÃÃ 1
(
ÃÃ1 2
filename
ÃÃ2 :
:
ÃÃ: ;
$"
ÃÃ< >
$str
ÃÃ> K
{
ÃÃK L
Shards
ÃÃL R
}
ÃÃR S
$str
ÃÃS Z
"
ÃÃZ [
,
ÃÃ[ \
new
ÃÃ] `

DBSettings
ÃÃa k
(
ÃÃk l
)
ÃÃl m
{
ÄÄ 
JournalMode
ÅÅ 
=
ÅÅ 
JournalMode
ÅÅ )
,
ÅÅ) *
LockingMode
ÆÆ 
=
ÆÆ 
LockingMode
ÆÆ )
,
ÆÆ) *
PageSize
ÇÇ 
=
ÇÇ 
PageSize
ÇÇ #
,
ÇÇ# $
ShardingFactor
ÈÈ 
=
ÈÈ  
Shards
ÈÈ! '
,
ÈÈ' (
Synchronous
ÉÉ 
=
ÉÉ 
Synchronous
ÉÉ )
}
ÊÊ 
)
ÊÊ 
;
ÊÊ 
	dbManager
ËË 
.
ËË 
Setup
ËË 
(
ËË 
)
ËË 
;
ËË 
}
ÌÌ 	
}
ÍÍ 
}ÎÎ »:
GD:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\SetupTimeTest.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .

Benchmarks. 8
{ 
[ %
MarkdownExporterAttribute 
. 
GitHub %
]% &
[		 !
JsonExporterAttribute		 
.		 
Full		 
]		  
public

 

class

 
SetupTimeTest

 
:

   
AsaDatabaseBenchmark

! 5
{ 
public 
SetupTimeTest 
( 
) 
{ 	
Logger 
. 
Setup 
( 
true 
, 
true #
)# $
;$ %
Strings 
. 
Setup 
( 
) 
; 
} 	
[ 	
Params	 
( 
$str 
, 
$str 
,  
$str! &
,& '
$str( 0
)0 1
]1 2
public 
string 
JournalMode !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Params	 
( 
$str 
, 
$str %
)% &
]& '
public 
string 
LockingMode !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Params	 
( 
$num 
) 
] 
public 
int 
ObjectPadding  
{! "
get# &
;& '
set( +
;+ ,
}- .
[!! 	
Params!!	 
(!! 
$num!! 
)!! 
]!! 
public"" 
int"" 
PageSize"" 
{"" 
get"" !
;""! "
set""# &
;""& '
}""( )
[%% 	
Params%%	 
(%% 
$num%% 
,%% 
$num%% 
,%% 
$num%% 
,%% 
$num%% 
,%% 
$num%% 
,%% 
$num%%  
,%%  !
$num%%" #
,%%# $
$num%%% &
,%%& '
$num%%( )
,%%) *
$num%%+ -
,%%- .
$num%%/ 1
,%%1 2
$num%%3 5
)%%5 6
]%%6 7
public&& 
int&& 
Shards&& 
{&& 
get&& 
;&&  
set&&! $
;&&$ %
}&&& '
[** 	
Params**	 
(** 
$num** 
,** 
$num** 
)** 
]** 
public++ 
int++ 
StartingSize++ 
{++  !
get++" %
;++% &
set++' *
;++* +
}++, -
[-- 	
Params--	 
(-- 
$str-- 
,-- 
$str-- 
)--  
]--  !
public.. 
string.. 
Synchronous.. !
{.." #
get..$ '
;..' (
set..) ,
;.., -
}... /
[00 	
GlobalCleanup00	 
]00 
public11 
void11 
GlobalCleanup11 !
(11! "
)11" #
{22 	
Setup33 
(33 
)33 
;33 
	dbManager44 
.44 
Destroy44 
(44 
)44 
;44  
}55 	
[77 	
GlobalSetup77	 
]77 
public88 
void88 
GlobalSetup88 
(88  
)88  !
{99 	
PopulateDatabases:: 
(:: 
):: 
;::  
};; 	
public== 
void== 
Insert_X_Objects== $
(==$ %
int==% (
X==) *
,==* +
int==, /
ObjectPadding==0 =
===> ?
$num==@ A
,==A B
string==C I
runName==J Q
===R S
$str==T f
)==f g
{>> 	
Parallel?? 
.?? 
For?? 
(?? 
$num?? 
,?? 
X?? 
,?? 
i??  
=>??! #
{@@ 
varAA 
objAA 
=AA 
GetRandomObjectAA )
(AA) *
ObjectPaddingAA* 7
)AA7 8
;AA8 9
	dbManagerBB 
.BB 
WriteBB 
(BB  
objBB  #
,BB# $
runNameBB% ,
)BB, -
;BB- .
BagOfObjectsCC 
.CC 
AddCC  
(CC  !
objCC! $
)CC$ %
;CC% &
}DD 
)DD 
;DD 
whileFF 
(FF 
	dbManagerFF 
.FF 
HasElementsFF (
)FF( )
{GG 
ThreadHH 
.HH 
SleepHH 
(HH 
$numHH 
)HH 
;HH  
}II 
}JJ 	
[LL 	
IterationCleanupLL	 
]LL 
publicMM 
voidMM 
IterationCleanupMM $
(MM$ %
)MM% &
{NN 	
	dbManagerOO 
.OO 
CloseDatabaseOO #
(OO# $
)OO$ %
;OO% &
}PP 	
[RR 	
IterationSetupRR	 
]RR 
publicSS 
voidSS 
IterationSetupSS "
(SS" #
)SS# $
{TT 	
}UU 	
publicWW 
voidWW 
PopulateDatabasesWW %
(WW% &
)WW& '
{XX 	
SetupYY 
(YY 
)YY 
;YY 
	dbManagerZZ 
.ZZ 
BeginTransactionZZ &
(ZZ& '
)ZZ' (
;ZZ( )
Insert_X_Objects\\ 
(\\ 
StartingSize\\ )
,\\) *
ObjectPadding\\+ 8
,\\8 9
$str\\: L
)\\L M
;\\M N
	dbManager^^ 
.^^ 
Commit^^ 
(^^ 
)^^ 
;^^ 
	dbManager__ 
.__ 
CloseDatabase__ #
(__# $
)__$ %
;__% &
}`` 	
privatebb 
DatabaseManagerbb 
	dbManagerbb  )
;bb) *
[dd 	
	Benchmarkdd	 
]dd 
privateee 
voidee 
Setupee 
(ee 
)ee 
{ff 	
	dbManagergg 
=gg 
newgg !
SqliteDatabaseManagergg 1
(gg1 2
filenamegg2 :
:gg: ;
$"gg< >
$strgg> K
{ggK L
ShardsggL R
}ggR S
$strggS Z
"ggZ [
,gg[ \
newgg] `

DBSettingsgga k
(ggk l
)ggl m
{hh 
JournalModeii 
=ii 
JournalModeii )
,ii) *
LockingModejj 
=jj 
LockingModejj )
,jj) *
PageSizekk 
=kk 
PageSizekk #
,kk# $
ShardingFactorll 
=ll  
Shardsll! '
,ll' (
Synchronousmm 
=mm 
Synchronousmm )
}nn 
)nn 
;nn 
	dbManagerpp 
.pp 
Setuppp 
(pp 
)pp 
;pp 
}qq 	
}rr 
}ss â
UD:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\SystemSqliteDatabaseManager.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .
Utils. 3
{ 
public 

static 
class '
SystemSQLiteDatabaseManager 3
{ 
public 
static 
List 
< +
SystemSQLiteSqlConnectionHolder :
>: ;
Connections< G
{H I
getJ M
;M N
privateO V
setW Z
;Z [
}\ ]
=^ _
new` c
Listd h
<h i,
SystemSQLiteSqlConnectionHolder	i 
>
 
(
 
)
 
;
 
public 
static 
bool 
FirstRun #
{$ %
get& )
;) *
private+ 2
set3 6
;6 7
}8 9
=: ;
true< @
;@ A
public 
static +
SystemSQLiteSqlConnectionHolder 5
?5 6
MainConnection7 E
{ 	
get 
{ 
if 
( 
Connections 
.  
Any  #
(# $
)$ %
)% &
return 
Connections &
[& '
$num' (
]( )
;) *
return 
null 
; 
} 
} 	
public 
static 
string 
SQLiteFilename +
{, -
get. 1
;1 2
private3 :
set; >
;> ?
}@ A
=B C
$strD P
;P Q
public!! 
static!! 
void!! 
BeginTransaction!! +
(!!+ ,
)!!, -
{"" 	
Connections## 
.## 

AsParallel## "
(##" #
)### $
.##$ %
ForAll##% +
(##+ ,
cxn##, /
=>##0 2
cxn##3 6
.##6 7
BeginTransaction##7 G
(##G H
)##H I
)##I J
;##J K
}$$ 	
public&& 
static&& 
void&& 
CloseDatabase&& (
(&&( )
)&&) *
{'' 	
RollBack(( 
((( 
)(( 
;(( 
Connections)) 
.)) 

AsParallel)) "
())" #
)))# $
.))$ %
ForAll))% +
())+ ,
cxn)), /
=>))0 2
{** 
cxn++ 
.++ 
ShutDown++ 
(++ 
)++ 
;++ 
},, 
),, 
;,, 
Connections-- 
.-- 
	RemoveAll-- !
(--! "
_--" #
=>--$ &
true--' +
)--+ ,
;--, -
}.. 	
public00 
static00 
void00 
Commit00 !
(00! "
)00" #
{11 	
Connections22 
.22 

AsParallel22 "
(22" #
)22# $
.22$ %
ForAll22% +
(22+ ,
x22, -
=>22. 0
x221 2
.222 3
Commit223 9
(229 :
)22: ;
)22; <
;22< =
}33 	
public55 
static55 
void55 
	DeleteRun55 $
(55$ %
string55% +
runid55, 1
)551 2
{66 	
_77 
=77 
MainConnection77 
??77 !
throw77" '
new77( +"
NullReferenceException77, B
(77B C
Strings77C J
.77J K
Get77K N
(77N O
$str77O _
)77_ `
)77` a
;77a b
using88 
var88 
truncateRunsTable88 '
=88( )
new88* -
SQLiteCommand88. ;
(88; <
SQL_TRUNCATE_RUN88< L
,88L M
MainConnection88N \
.88\ ]

Connection88] g
,88g h
MainConnection88i w
.88w x
Transaction	88x 
)
88 
;
88 
truncateRunsTable99 
.99 

Parameters99 (
.99( )
AddWithValue99) 5
(995 6
$str996 ?
,99? @
runid99A F
)99F G
;99G H
truncateRunsTable:: 
.:: 
ExecuteNonQuery:: -
(::- .
)::. /
;::/ 0
Connections<< 
.<< 

AsParallel<< "
(<<" #
)<<# $
.<<$ %
ForAll<<% +
(<<+ ,
cxn<<, /
=><<0 2
{== 
using>> 
var>>  
truncateCollectTable>> .
=>>/ 0
new>>1 4
SQLiteCommand>>5 B
(>>B C
SQL_DELETE_RUN>>C Q
,>>Q R
cxn>>S V
.>>V W

Connection>>W a
,>>a b
cxn>>c f
.>>f g
Transaction>>g r
)>>r s
;>>s t 
truncateCollectTable?? $
.??$ %

Parameters??% /
.??/ 0
AddWithValue??0 <
(??< =
$str??= F
,??F G
runid??H M
)??M N
;??N O 
truncateCollectTable@@ $
.@@$ %
ExecuteNonQuery@@% 4
(@@4 5
)@@5 6
;@@6 7
}AA 
)AA 
;AA 
}BB 	
publicDD 
staticDD 
voidDD 
DestroyDD "
(DD" #
)DD# $
{EE 	
ConnectionsFF 
.FF 

AsParallelFF "
(FF" #
)FF# $
.FF$ %
ForAllFF% +
(FF+ ,
xFF, -
=>FF. 0
xFF1 2
.FF2 3
DestroyFF3 :
(FF: ;
)FF; <
)FF< =
;FF= >
ConnectionsGG 
.GG 
	RemoveAllGG !
(GG! "
xGG" #
=>GG$ &
trueGG' +
)GG+ ,
;GG, -
}HH 	
publicJJ 
staticJJ 
ListJJ 
<JJ 
RESULT_TYPEJJ &
>JJ& ' 
GetCommonResultTypesJJ( <
(JJ< =
stringJJ= C
baseIdJJD J
,JJJ K
stringJJL R
	compareIdJJS \
)JJ\ ]
{KK 	
varLL 
runOneLL 
=LL 
GetRunLL 
(LL  
baseIdLL  &
)LL& '
;LL' (
varMM 
runTwoMM 
=MM 
GetRunMM 
(MM  
	compareIdMM  )
)MM) *
;MM* +
returnOO 
runOneOO 
?OO 
.OO 
ResultTypesOO &
.OO& '
	IntersectOO' 0
(OO0 1
runTwoOO1 7
?OO7 8
.OO8 9
ResultTypesOO9 D
??OOE G
newOOH K
ListOOL P
<OOP Q
RESULT_TYPEOOQ \
>OO\ ]
(OO] ^
)OO^ _
)OO_ `
.OO` a
ToListOOa g
(OOg h
)OOh i
??OOj l
runTwoOOm s
?OOs t
.OOt u
ResultTypes	OOu 
??
OO 
new
OO 
List
OO 
<
OO 
RESULT_TYPE
OO 
>
OO 
(
OO 
)
OO 
;
OO 
}PP 	
publicRR 
staticRR 
boolRR "
GetComparisonCompletedRR 1
(RR1 2
stringRR2 8

firstRunIdRR9 C
,RRC D
stringRRE K
secondRunIdRRL W
)RRW X
{SS 	
ifTT 
(TT 
MainConnectionTT 
!=TT !
nullTT" &
)TT& '
{UU 
usingVV 
(VV 
varVV 
cmdVV 
=VV  
newVV! $
SQLiteCommandVV% 2
(VV2 38
,SQL_CHECK_IF_COMPARISON_PREVIOUSLY_COMPLETEDVV3 _
,VV_ `
MainConnectionVVa o
.VVo p

ConnectionVVp z
,VVz {
MainConnection	VV| 
.
VV 
Transaction
VV 
)
VV 
)
VV 
{WW 
cmdXX 
.XX 

ParametersXX "
.XX" #
AddWithValueXX# /
(XX/ 0
$strXX0 >
,XX> ?

firstRunIdXX@ J
)XXJ K
;XXK L
cmdYY 
.YY 

ParametersYY "
.YY" #
AddWithValueYY# /
(YY/ 0
$strYY0 A
,YYA B
secondRunIdYYC N
)YYN O
;YYO P
usingZZ 
(ZZ 
varZZ 
readerZZ %
=ZZ& '
cmdZZ( +
.ZZ+ ,
ExecuteReaderZZ, 9
(ZZ9 :
)ZZ: ;
)ZZ; <
{[[ 
while\\ 
(\\ 
reader\\ %
.\\% &
Read\\& *
(\\* +
)\\+ ,
)\\, -
{]] 
return^^ "
true^^# '
;^^' (
}__ 
}`` 
}aa 
}bb 
elsecc 
{dd 
Logee 
.ee 
Debugee 
(ee 
$stree \
)ee\ ]
;ee] ^
}ff 
returnhh 
falsehh 
;hh 
}ii 	
publickk 
statickk 
Listkk 
<kk 
CompareResultkk (
>kk( ) 
GetComparisonResultskk* >
(kk> ?
stringkk? E
	compareIdkkF O
,kkO P
RESULT_TYPEkkQ \

exportTypekk] g
)kkg h
{ll 	
Listmm 
<mm 
CompareResultmm 
>mm 
recordsmm  '
=mm( )
newmm* -
Listmm. 2
<mm2 3
CompareResultmm3 @
>mm@ A
(mmA B
)mmB C
;mmC D
ifnn 
(nn 
MainConnectionnn 
!=nn !
nullnn" &
)nn& '
{oo 
usingpp 
(pp 
varpp 
cmdpp 
=pp  
newpp! $
SQLiteCommandpp% 2
(pp2 3"
GET_COMPARISON_RESULTSpp3 I
,ppI J
MainConnectionppK Y
.ppY Z

ConnectionppZ d
,ppd e
MainConnectionppf t
.ppt u
Transaction	ppu 
)
pp 
)
pp 
{qq 
cmdrr 
.rr 

Parametersrr "
.rr" #
AddWithValuerr# /
(rr/ 0
$strrr0 @
,rr@ A
	compareIdrrB K
)rrK L
;rrL M
cmdss 
.ss 

Parametersss "
.ss" #
AddWithValuess# /
(ss/ 0
$strss0 >
,ss> ?

exportTypess@ J
)ssJ K
;ssK L
usingtt 
(tt 
vartt 
readertt %
=tt& '
cmdtt( +
.tt+ ,
ExecuteReadertt, 9
(tt9 :
)tt: ;
)tt; <
{uu 
whilevv 
(vv 
readervv %
.vv% &
Readvv& *
(vv* +
)vv+ ,
)vv, -
{ww 
ifxx 
(xx  
readerxx  &
[xx& '
$strxx' 3
]xx3 4
.xx4 5
ToStringxx5 =
(xx= >
)xx> ?
isxx@ B
stringxxC I

serializedxxJ T
)xxT U
{yy 
tryzz  #
{{{  !
records||$ +
.||+ ,
Add||, /
(||/ 0
JsonConvert||0 ;
.||; <
DeserializeObject||< M
<||M N
CompareResult||N [
>||[ \
(||\ ]

serialized||] g
)||g h
)||h i
;||i j
}}}  !
catch~~  %
(~~& '
	Exception~~' 0
e~~1 2
)~~2 3
{  !
Log
$ '
.
' (
Debug
( -
(
- .
e
. /
,
/ 0
$str
1 a
,
a b

serialized
c m
)
m n
;
n o
}
  !
}
 
}
 
}
 
}
 
}
 
return
 
records
 
;
 
}
 	
public
 
static
 
List
 
<
 
CompareResult
 (
>
( )"
GetComparisonResults
* >
(
> ?
string
? E
comparisonId
F R
,
R S
int
T W

resultType
X b
,
b c
int
d g
offset
h n
,
n o
int
p s

numResults
t ~
)
~ 
{
 	
_
 
=
 
MainConnection
 
??
 !
throw
" '
new
( +$
NullReferenceException
, B
(
B C
Strings
C J
.
J K
Get
K N
(
N O
$str
O _
)
_ `
)
` a
;
a b
var
 
results
 
=
 
new
 
List
 "
<
" #
CompareResult
# 0
>
0 1
(
1 2
)
2 3
;
3 4
using
 
(
 
var
 
cmd
 
=
 
new
  
SQLiteCommand
! .
(
. /*
GET_COMPARISON_RESULTS_LIMIT
/ K
,
K L
MainConnection
M [
.
[ \

Connection
\ f
,
f g
MainConnection
h v
.
v w
Transactionw 
) 
) 
{
 
cmd
 
.
 

Parameters
 
.
 
AddWithValue
 +
(
+ ,
$str
, <
,
< =
comparisonId
> J
)
J K
;
K L
cmd
 
.
 

Parameters
 
.
 
AddWithValue
 +
(
+ ,
$str
, :
,
: ;

resultType
< F
)
F G
;
G H
cmd
 
.
 

Parameters
 
.
 
AddWithValue
 +
(
+ ,
$str
, 5
,
5 6
offset
7 =
)
= >
;
> ?
cmd
 
.
 

Parameters
 
.
 
AddWithValue
 +
(
+ ,
$str
, 4
,
4 5

numResults
6 @
)
@ A
;
A B
using
 
(
 
var
 
reader
 !
=
" #
cmd
$ '
.
' (
ExecuteReader
( 5
(
5 6
)
6 7
)
7 8
{
 
while
 
(
 
reader
 !
.
! "
Read
" &
(
& '
)
' (
)
( )
{
 
try
 
{
 
var
 
thing
  %
=
& '
reader
( .
[
. /
$str
/ ;
]
; <
;
< =
if
 
(
  
thing
  %
is
& (
string
) /
result
0 6
)
6 7
{
 
var
  #
obj
$ '
=
( )
JsonConvert
* 5
.
5 6
DeserializeObject
6 G
<
G H
CompareResult
H U
>
U V
(
V W
result
W ]
)
] ^
;
^ _
results
  '
.
' (
Add
( +
(
+ ,
obj
, /
)
/ 0
;
0 1
}
 
}
   
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ (
e
¡¡) *
)
¡¡* +
{
¢¢ 
Log
££ 
.
££  
Debug
££  %
(
££% &
e
££& '
,
££' (
$str
££) B
,
££B C
reader
££D J
[
££J K
$str
££K W
]
££W X
)
££X Y
;
££Y Z
}
¤¤ 
}
¥¥ 
}
¦¦ 
}
§§ 
return
©© 
results
©© 
;
©© 
}
ªª 	
public
¬¬ 
static
¬¬ 
int
¬¬ '
GetComparisonResultsCount
¬¬ 3
(
¬¬3 4
string
¬¬4 :
comparisonId
¬¬; G
,
¬¬G H
int
¬¬I L

resultType
¬¬M W
)
¬¬W X
{
­­ 	
_
®® 
=
®® 
MainConnection
®® 
??
®® !
throw
®®" '
new
®®( +$
NullReferenceException
®®, B
(
®®B C
Strings
®®C J
.
®®J K
Get
®®K N
(
®®N O
$str
®®O _
)
®®_ `
)
®®` a
;
®®a b
var
¯¯ 
result_count
¯¯ 
=
¯¯ 
$num
¯¯  
;
¯¯  !
using
°° 
(
°° 
var
°° 
cmd
°° 
=
°° 
new
°°  
SQLiteCommand
°°! .
(
°°. /
GET_RESULT_COUNT
°°/ ?
,
°°? @
MainConnection
°°A O
.
°°O P

Connection
°°P Z
,
°°Z [
MainConnection
°°\ j
.
°°j k
Transaction
°°k v
)
°°v w
)
°°w x
{
±± 
cmd
²² 
.
²² 

Parameters
²² 
.
²² 
AddWithValue
²² +
(
²²+ ,
$str
²², <
,
²²< =
comparisonId
²²> J
)
²²J K
;
²²K L
cmd
³³ 
.
³³ 

Parameters
³³ 
.
³³ 
AddWithValue
³³ +
(
³³+ ,
$str
³³, :
,
³³: ;

resultType
³³< F
)
³³F G
;
³³G H
using
´´ 
(
´´ 
var
´´ 
reader
´´ !
=
´´" #
cmd
´´$ '
.
´´' (
ExecuteReader
´´( 5
(
´´5 6
)
´´6 7
)
´´7 8
{
µµ 
while
¶¶ 
(
¶¶ 
reader
¶¶ !
.
¶¶! "
Read
¶¶" &
(
¶¶& '
)
¶¶' (
)
¶¶( )
{
·· 
if
¸¸ 
(
¸¸ 
reader
¸¸ "
[
¸¸" #
$str
¸¸# -
]
¸¸- .
.
¸¸. /
ToString
¸¸/ 7
(
¸¸7 8
)
¸¸8 9
is
¸¸: <
string
¸¸= C
integer
¸¸D K
)
¸¸K L
result_count
¹¹ (
=
¹¹) *
int
¹¹+ .
.
¹¹. /
Parse
¹¹/ 4
(
¹¹4 5
integer
¹¹5 <
,
¹¹< =
CultureInfo
¹¹> I
.
¹¹I J
InvariantCulture
¹¹J Z
)
¹¹Z [
;
¹¹[ \
}
ºº 
}
»» 
}
¼¼ 
return
½½ 
result_count
½½ 
;
½½  
}
¾¾ 	
public
ÀÀ 
static
ÀÀ 
List
ÀÀ 
<
ÀÀ 
string
ÀÀ !
>
ÀÀ! "
GetLatestRunIds
ÀÀ# 2
(
ÀÀ2 3
int
ÀÀ3 6
numberOfIds
ÀÀ7 B
,
ÀÀB C
string
ÀÀD J
type
ÀÀK O
)
ÀÀO P
{
ÁÁ 	
List
ÂÂ 
<
ÂÂ 
string
ÂÂ 
>
ÂÂ 
output
ÂÂ 
=
ÂÂ  !
new
ÂÂ" %
List
ÂÂ& *
<
ÂÂ* +
string
ÂÂ+ 1
>
ÂÂ1 2
(
ÂÂ2 3
)
ÂÂ3 4
;
ÂÂ4 5
if
ÃÃ 
(
ÃÃ 
MainConnection
ÃÃ 
!=
ÃÃ !
null
ÃÃ" &
)
ÃÃ& '
{
ÄÄ 
using
ÅÅ 
(
ÅÅ 
var
ÅÅ 
cmd
ÅÅ 
=
ÅÅ  
new
ÅÅ! $
SQLiteCommand
ÅÅ% 2
(
ÅÅ2 3&
SQL_SELECT_LATEST_N_RUNS
ÅÅ3 K
,
ÅÅK L
MainConnection
ÅÅM [
.
ÅÅ[ \

Connection
ÅÅ\ f
,
ÅÅf g
MainConnection
ÅÅh v
.
ÅÅv w
TransactionÅÅw 
)ÅÅ 
)ÅÅ 
{
ÆÆ 
cmd
ÇÇ 
.
ÇÇ 

Parameters
ÇÇ "
.
ÇÇ" #
AddWithValue
ÇÇ# /
(
ÇÇ/ 0
$str
ÇÇ0 7
,
ÇÇ7 8
type
ÇÇ9 =
)
ÇÇ= >
;
ÇÇ> ?
cmd
ÈÈ 
.
ÈÈ 

Parameters
ÈÈ "
.
ÈÈ" #
AddWithValue
ÈÈ# /
(
ÈÈ/ 0
$str
ÈÈ0 8
,
ÈÈ8 9
numberOfIds
ÈÈ: E
)
ÈÈE F
;
ÈÈF G
try
ÉÉ 
{
ÊÊ 
using
ËË 
(
ËË 
var
ËË "
reader
ËË# )
=
ËË* +
cmd
ËË, /
.
ËË/ 0
ExecuteReader
ËË0 =
(
ËË= >
)
ËË> ?
)
ËË? @
{
ÌÌ 
while
ÍÍ !
(
ÍÍ" #
reader
ÍÍ# )
.
ÍÍ) *
Read
ÍÍ* .
(
ÍÍ. /
)
ÍÍ/ 0
)
ÍÍ0 1
{
ÎÎ 
var
ÏÏ  #
str
ÏÏ$ '
=
ÏÏ( )
reader
ÏÏ* 0
[
ÏÏ0 1
$str
ÏÏ1 9
]
ÏÏ9 :
.
ÏÏ: ;
ToString
ÏÏ; C
(
ÏÏC D
)
ÏÏD E
;
ÏÏE F
if
ÐÐ  "
(
ÐÐ# $
!
ÐÐ$ %
string
ÐÐ% +
.
ÐÐ+ ,
IsNullOrEmpty
ÐÐ, 9
(
ÐÐ9 :
str
ÐÐ: =
)
ÐÐ= >
)
ÐÐ> ?
output
ÑÑ$ *
.
ÑÑ* +
Add
ÑÑ+ .
(
ÑÑ. /
str
ÑÑ/ 2
)
ÑÑ2 3
;
ÑÑ3 4
}
ÒÒ 
}
ÓÓ 
}
ÔÔ 
catch
ÕÕ 
(
ÕÕ 
SQLiteException
ÕÕ *
)
ÕÕ* +
{
ÖÖ 
Log
×× 
.
×× 
Debug
×× !
(
××! "
$str
××" J
,
××J K
numberOfIds
××L W
)
××W X
;
××X Y
}
ØØ 
}
ÙÙ 
}
ÚÚ 
else
ÛÛ 
{
ÜÜ 
Log
ÝÝ 
.
ÝÝ 
Debug
ÝÝ 
(
ÝÝ 
$str
ÝÝ U
)
ÝÝU V
;
ÝÝV W
}
ÞÞ 
return
ßß 
output
ßß 
;
ßß 
}
àà 	
public
ââ 
static
ââ 
ConcurrentBag
ââ #
<
ââ# $
WriteObject
ââ$ /
>
ââ/ 0!
GetMissingFromFirst
ââ1 D
(
ââD E
string
ââE K

firstRunId
ââL V
,
ââV W
string
ââX ^
secondRunId
ââ_ j
)
ââj k
{
ãã 	
var
ää 
output
ää 
=
ää 
new
ää 
ConcurrentBag
ää *
<
ää* +
WriteObject
ää+ 6
>
ää6 7
(
ää7 8
)
ää8 9
;
ää9 :
Connections
ææ 
.
ææ 

AsParallel
ææ "
(
ææ" #
)
ææ# $
.
ææ$ %
ForAll
ææ% +
(
ææ+ ,
cxn
ææ, /
=>
ææ0 2
{
çç 
using
èè 
var
èè 
cmd
èè 
=
èè 
new
èè  #
SQLiteCommand
èè$ 1
(
èè1 2*
SQL_GET_COLLECT_MISSING_IN_B
èè2 N
,
èèN O
cxn
èèP S
.
èèS T

Connection
èèT ^
,
èè^ _
cxn
èè` c
.
èèc d
Transaction
èèd o
)
èèo p
;
èèp q
cmd
éé 
.
éé 

Parameters
éé 
.
éé 
AddWithValue
éé +
(
éé+ ,
$str
éé, ;
,
éé; <

firstRunId
éé= G
)
ééG H
;
ééH I
cmd
êê 
.
êê 

Parameters
êê 
.
êê 
AddWithValue
êê +
(
êê+ ,
$str
êê, <
,
êê< =
secondRunId
êê> I
)
êêI J
;
êêJ K
using
ëë 
(
ëë 
var
ëë 
reader
ëë !
=
ëë" #
cmd
ëë$ '
.
ëë' (
ExecuteReader
ëë( 5
(
ëë5 6
)
ëë6 7
)
ëë7 8
while
ìì 
(
ìì 
reader
ìì !
.
ìì! "
Read
ìì" &
(
ìì& '
)
ìì' (
)
ìì( )
{
íí 
var
îî 
runId
îî !
=
îî" #
reader
îî$ *
[
îî* +
$str
îî+ 3
]
îî3 4
.
îî4 5
ToString
îî5 =
(
îî= >
)
îî> ?
;
îî? @
var
ïï 
resultTypeString
ïï ,
=
ïï- .
reader
ïï/ 5
[
ïï5 6
$str
ïï6 C
]
ïïC D
.
ïïD E
ToString
ïïE M
(
ïïM N
)
ïïN O
;
ïïO P
if
ðð 
(
ðð 
runId
ðð !
!=
ðð" $
null
ðð% )
&&
ðð* ,
resultTypeString
ðð- =
!=
ðð> @
null
ððA E
)
ððE F
{
ññ 
var
òò 
wo
òò  "
=
òò# $
WriteObject
òò% 0
.
òò0 1

FromString
òò1 ;
(
òò; <
(
òò< =
string
òò= C
)
òòC D
reader
òòD J
[
òòJ K
$str
òòK W
]
òòW X
,
òòX Y
(
òòZ [
RESULT_TYPE
òò[ f
)
òòf g
Enum
òòg k
.
òòk l
Parse
òòl q
(
òòq r
typeof
òòr x
(
òòx y
RESULT_TYPEòòy 
)òò 
,òò  
resultTypeStringòò 
)òò 
,òò 
runIdòò 
)òò  
;òò  ¡
if
óó 
(
óó  
wo
óó  "
is
óó# %
WriteObject
óó& 1
WO
óó2 4
)
óó4 5
{
ôô 
output
õõ  &
.
õõ& '
Add
õõ' *
(
õõ* +
WO
õõ+ -
)
õõ- .
;
õõ. /
}
öö 
}
÷÷ 
}
øø 
}
ùù 
)
ùù 
;
ùù 
return
ûû 
output
ûû 
;
ûû 
}
üü 	
public
þþ 
static
þþ 
ConcurrentBag
þþ #
<
þþ# $
(
þþ$ %
WriteObject
þþ% 0
,
þþ0 1
WriteObject
þþ2 =
)
þþ= >
>
þþ> ?
GetModified
þþ@ K
(
þþK L
string
þþL R

firstRunId
þþS ]
,
þþ] ^
string
þþ_ e
secondRunId
þþf q
)
þþq r
{
ÿÿ 	
var
 
output
 
=
 
new
 
ConcurrentBag
 *
<
* +
(
+ ,
WriteObject
, 7
,
7 8
WriteObject
9 D
)
D E
>
E F
(
F G
)
G H
;
H I
Connections
 
.
 

AsParallel
 "
(
" #
)
# $
.
$ %
ForAll
% +
(
+ ,
cxn
, /
=>
0 2
{
 
using
 
var
 
cmd
 
=
 
new
  #
SQLiteCommand
$ 1
(
1 2&
SQL_GET_COLLECT_MODIFIED
2 J
,
J K
cxn
L O
.
O P

Connection
P Z
,
Z [
cxn
\ _
.
_ `
Transaction
` k
)
k l
;
l m
cmd
 
.
 

Parameters
 
.
 
AddWithValue
 +
(
+ ,
$str
, ;
,
; <

firstRunId
= G
)
G H
;
H I
cmd
 
.
 

Parameters
 
.
 
AddWithValue
 +
(
+ ,
$str
, <
,
< =
secondRunId
> I
)
I J
;
J K
using
 
(
 
var
 
reader
 !
=
" #
cmd
$ '
.
' (
ExecuteReader
( 5
(
5 6
)
6 7
)
7 8
{
 
while
 
(
 
reader
 !
.
! "
Read
" &
(
& '
)
' (
)
( )
{
 
var
 
aRunId
 "
=
# $
reader
% +
[
+ ,
$str
, 6
]
6 7
.
7 8
ToString
8 @
(
@ A
)
A B
;
B C
var
 
bRunId
 "
=
# $
reader
% +
[
+ ,
$str
, 6
]
6 7
.
7 8
ToString
8 @
(
@ A
)
A B
;
B C
var
 
aResultType
 '
=
( )
reader
* 0
[
0 1
$str
1 @
]
@ A
.
A B
ToString
B J
(
J K
)
K L
;
L M
var
 
bResultType
 '
=
( )
reader
* 0
[
0 1
$str
1 @
]
@ A
.
A B
ToString
B J
(
J K
)
K L
;
L M
if
 
(
 
aRunId
 "
!=
# %
null
& *
&&
+ -
bRunId
. 4
!=
5 7
null
8 <
&&
= ?
aResultType
@ K
!=
L N
null
O S
&&
T V
bResultType
W b
!=
c e
null
f j
)
j k
{
 
var
 
val1
  $
=
% &
WriteObject
' 2
.
2 3

FromString
3 =
(
= >
(
> ?
string
? E
)
E F
reader
F L
[
L M
$str
M [
]
[ \
,
\ ]
(
^ _
RESULT_TYPE
_ j
)
j k
Enum
k o
.
o p
Parse
p u
(
u v
typeof
v |
(
| }
RESULT_TYPE} 
) 
, 
aResultType 
) 
, 
aRunId 
)  
;  ¡
var
 
val2
  $
=
% &
WriteObject
' 2
.
2 3

FromString
3 =
(
= >
(
> ?
string
? E
)
E F
reader
F L
[
L M
$str
M [
]
[ \
,
\ ]
(
^ _
RESULT_TYPE
_ j
)
j k
Enum
k o
.
o p
Parse
p u
(
u v
typeof
v |
(
| }
RESULT_TYPE} 
) 
, 
bResultType 
) 
, 
bRunId 
)  
;  ¡
if
 
(
  
val1
  $
is
% '
WriteObject
( 3
V1
4 6
&&
7 9
val2
: >
is
? A
WriteObject
B M
V2
N P
)
P Q
{
 
output
  &
.
& '
Add
' *
(
* +
(
+ ,
V1
, .
,
. /
V2
0 2
)
2 3
)
3 4
;
4 5
}
 
}
 
}
 
}
 
}
 
)
 
;
 
return
 
output
 
;
 
}
 	
public
¡¡ 
static
¡¡ 
List
¡¡ 
<
¡¡ %
OutputFileMonitorResult
¡¡ 2
>
¡¡2 3
GetMonitorResults
¡¡4 E
(
¡¡E F
string
¡¡F L
runId
¡¡M R
,
¡¡R S
int
¡¡T W
offset
¡¡X ^
,
¡¡^ _
int
¡¡` c

numResults
¡¡d n
)
¡¡n o
{
¢¢ 	
var
££ 
results
££ 
=
££ 
new
££ 
List
££ "
<
££" #%
OutputFileMonitorResult
££# :
>
££: ;
(
££; <
)
££< =
;
££= >
if
¤¤ 
(
¤¤ 
MainConnection
¤¤ 
!=
¤¤ !
null
¤¤" &
)
¤¤& '
{
¥¥ 
using
¦¦ 
(
¦¦ 
var
¦¦ 
cmd
¦¦ 
=
¦¦  
new
¦¦! $
SQLiteCommand
¦¦% 2
(
¦¦2 3!
GET_MONITOR_RESULTS
¦¦3 F
,
¦¦F G
MainConnection
¦¦H V
.
¦¦V W

Connection
¦¦W a
,
¦¦a b
MainConnection
¦¦c q
.
¦¦q r
Transaction
¦¦r }
)
¦¦} ~
)
¦¦~ 
{
§§ 
cmd
¨¨ 
.
¨¨ 

Parameters
¨¨ "
.
¨¨" #
AddWithValue
¨¨# /
(
¨¨/ 0
$str
¨¨0 9
,
¨¨9 :
runId
¨¨; @
)
¨¨@ A
;
¨¨A B
cmd
©© 
.
©© 

Parameters
©© "
.
©©" #
AddWithValue
©©# /
(
©©/ 0
$str
©©0 9
,
©©9 :
offset
©©; A
)
©©A B
;
©©B C
cmd
ªª 
.
ªª 

Parameters
ªª "
.
ªª" #
AddWithValue
ªª# /
(
ªª/ 0
$str
ªª0 8
,
ªª8 9

numResults
ªª: D
)
ªªD E
;
ªªE F
using
«« 
(
«« 
var
«« 
reader
«« %
=
««& '
cmd
««( +
.
««+ ,
ExecuteReader
««, 9
(
««9 :
)
««: ;
)
««; <
{
¬¬ 
while
­­ 
(
­­ 
reader
­­ %
.
­­% &
Read
­­& *
(
­­* +
)
­­+ ,
)
­­, -
{
®® 
var
¯¯ 
path
¯¯  $
=
¯¯% &
reader
¯¯' -
[
¯¯- .
$str
¯¯. 4
]
¯¯4 5
.
¯¯5 6
ToString
¯¯6 >
(
¯¯> ?
)
¯¯? @
;
¯¯@ A
if
°° 
(
°°  
!
°°  !
string
°°! '
.
°°' (
IsNullOrEmpty
°°( 5
(
°°5 6
path
°°6 :
)
°°: ;
)
°°; <
{
±± 
var
²²  #
obj
²²$ '
=
²²( )
new
²²* -%
OutputFileMonitorResult
²². E
(
²²E F
path
²²F J
)
²²J K
{
³³  !
RowKey
´´$ *
=
´´+ ,
reader
´´- 3
[
´´3 4
$str
´´4 =
]
´´= >
.
´´> ?
ToString
´´? G
(
´´G H
)
´´H I
,
´´I J
	Timestamp
µµ$ -
=
µµ. /
reader
µµ0 6
[
µµ6 7
$str
µµ7 B
]
µµB C
.
µµC D
ToString
µµD L
(
µµL M
)
µµM N
,
µµN O
OldPath
¶¶$ +
=
¶¶, -
reader
¶¶. 4
[
¶¶4 5
$str
¶¶5 ?
]
¶¶? @
.
¶¶@ A
ToString
¶¶A I
(
¶¶I J
)
¶¶J K
,
¶¶K L
Name
··$ (
=
··) *
reader
··+ 1
[
··1 2
$str
··2 8
]
··8 9
.
··9 :
ToString
··: B
(
··B C
)
··C D
,
··D E
OldName
¸¸$ +
=
¸¸, -
reader
¸¸. 4
[
¸¸4 5
$str
¸¸5 ?
]
¸¸? @
.
¸¸@ A
ToString
¸¸A I
(
¸¸I J
)
¸¸J K
,
¸¸K L

ChangeType
¹¹$ .
=
¹¹/ 0
(
¹¹1 2
CHANGE_TYPE
¹¹2 =
)
¹¹= >
int
¹¹> A
.
¹¹A B
Parse
¹¹B G
(
¹¹G H
reader
¹¹H N
[
¹¹N O
$str
¹¹O \
]
¹¹\ ]
.
¹¹] ^
ToString
¹¹^ f
(
¹¹f g
)
¹¹g h
??
¹¹i k
$str
¹¹l u
,
¹¹u v
CultureInfo¹¹w 
.¹¹  
InvariantCulture¹¹ 
)¹¹ 
,¹¹ 
}
ºº  !
;
ºº! "
results
»»  '
.
»»' (
Add
»»( +
(
»»+ ,
obj
»», /
)
»»/ 0
;
»»0 1
}
¼¼ 
}
½½ 
}
¾¾ 
}
¿¿ 
}
ÀÀ 
else
ÁÁ 
{
ÂÂ 
Log
ÃÃ 
.
ÃÃ 
Debug
ÃÃ 
(
ÃÃ 
$str
ÃÃ Q
)
ÃÃQ R
;
ÃÃR S
}
ÄÄ 
return
ÆÆ 
results
ÆÆ 
;
ÆÆ 
}
ÇÇ 	
public
ÉÉ 
static
ÉÉ 
List
ÉÉ 
<
ÉÉ 
string
ÉÉ !
>
ÉÉ! "
GetMonitorRuns
ÉÉ# 1
(
ÉÉ1 2
)
ÉÉ2 3
{
ÊÊ 	
return
ËË 
GetRuns
ËË 
(
ËË 
$str
ËË $
)
ËË$ %
;
ËË% &
}
ÌÌ 	
public
ÎÎ 
static
ÎÎ 
int
ÎÎ "
GetNumMonitorResults
ÎÎ .
(
ÎÎ. /
string
ÎÎ/ 5
runId
ÎÎ6 ;
)
ÎÎ; <
{
ÏÏ 	
_
ÐÐ 
=
ÐÐ 
MainConnection
ÐÐ 
??
ÐÐ !
throw
ÐÐ" '
new
ÐÐ( +$
NullReferenceException
ÐÐ, B
(
ÐÐB C
Strings
ÐÐC J
.
ÐÐJ K
Get
ÐÐK N
(
ÐÐN O
$str
ÐÐO _
)
ÐÐ_ `
)
ÐÐ` a
;
ÐÐa b
using
ÒÒ 
(
ÒÒ 
var
ÒÒ 
cmd
ÒÒ 
=
ÒÒ 
new
ÒÒ  
SQLiteCommand
ÒÒ! .
(
ÒÒ. /(
GET_RESULT_COUNT_MONITORED
ÒÒ/ I
,
ÒÒI J
MainConnection
ÒÒK Y
.
ÒÒY Z

Connection
ÒÒZ d
,
ÒÒd e
MainConnection
ÒÒf t
.
ÒÒt u
TransactionÒÒu 
)ÒÒ 
)ÒÒ 
{
ÓÓ 
cmd
ÔÔ 
.
ÔÔ 

Parameters
ÔÔ 
.
ÔÔ 
AddWithValue
ÔÔ +
(
ÔÔ+ ,
$str
ÔÔ, 5
,
ÔÔ5 6
runId
ÔÔ7 <
)
ÔÔ< =
;
ÔÔ= >
using
ÕÕ 
(
ÕÕ 
var
ÕÕ 
reader
ÕÕ !
=
ÕÕ" #
cmd
ÕÕ$ '
.
ÕÕ' (
ExecuteReader
ÕÕ( 5
(
ÕÕ5 6
)
ÕÕ6 7
)
ÕÕ7 8
{
ÖÖ 
while
×× 
(
×× 
reader
×× !
.
××! "
Read
××" &
(
××& '
)
××' (
)
××( )
{
ØØ 
if
ÙÙ 
(
ÙÙ 
reader
ÙÙ "
[
ÙÙ" #
$str
ÙÙ# -
]
ÙÙ- .
.
ÙÙ. /
ToString
ÙÙ/ 7
(
ÙÙ7 8
)
ÙÙ8 9
is
ÙÙ: <
string
ÙÙ= C
integer
ÙÙD K
)
ÙÙK L
return
ÚÚ "
int
ÚÚ# &
.
ÚÚ& '
Parse
ÚÚ' ,
(
ÚÚ, -
integer
ÚÚ- 4
,
ÚÚ4 5
CultureInfo
ÚÚ6 A
.
ÚÚA B
InvariantCulture
ÚÚB R
)
ÚÚR S
;
ÚÚS T
}
ÛÛ 
}
ÜÜ 
}
ÝÝ 
return
ßß 
$num
ßß 
;
ßß 
}
àà 	
public
ââ 
static
ââ 
int
ââ 
GetNumResults
ââ '
(
ââ' (
RESULT_TYPE
ââ( 3

ResultType
ââ4 >
,
ââ> ?
string
ââ@ F
runId
ââG L
)
ââL M
{
ãã 	
try
ää 
{
åå 
if
ææ 
(
ææ 
MainConnection
ææ "
!=
ææ# %
null
ææ& *
)
ææ* +
{
çç 
using
èè 
(
èè 
var
èè 
cmd
èè "
=
èè# $
new
èè% (
SQLiteCommand
èè) 6
(
èè6 7!
SQL_GET_NUM_RESULTS
èè7 J
,
èèJ K
MainConnection
èèL Z
.
èèZ [

Connection
èè[ e
,
èèe f
MainConnection
èèg u
.
èèu v
Transactionèèv 
)èè 
)èè 
{
éé 
cmd
êê 
.
êê 

Parameters
êê &
.
êê& '
AddWithValue
êê' 3
(
êê3 4
$str
êê4 =
,
êê= >
runId
êê? D
)
êêD E
;
êêE F
cmd
ëë 
.
ëë 

Parameters
ëë &
.
ëë& '
AddWithValue
ëë' 3
(
ëë3 4
$str
ëë4 B
,
ëëB C

ResultType
ëëD N
.
ëëN O
ToString
ëëO W
(
ëëW X
)
ëëX Y
)
ëëY Z
;
ëëZ [
using
íí 
(
íí 
var
íí "
reader
íí# )
=
íí* +
cmd
íí, /
.
íí/ 0
ExecuteReader
íí0 =
(
íí= >
)
íí> ?
)
íí? @
{
îî 
while
ïï !
(
ïï" #
reader
ïï# )
.
ïï) *
Read
ïï* .
(
ïï. /
)
ïï/ 0
)
ïï0 1
{
ðð 
return
ññ  &
int
ññ' *
.
ññ* +
Parse
ññ+ 0
(
ññ0 1
reader
ññ1 7
[
ññ7 8
$str
ññ8 C
]
ññC D
.
ññD E
ToString
ññE M
(
ññM N
)
ññN O
??
ññP R
$str
ññS W
,
ññW X
CultureInfo
ññY d
.
ññd e
InvariantCulture
ññe u
)
ññu v
;
ññv w
}
òò 
}
óó 
}
ôô 
}
õõ 
}
öö 
catch
÷÷ 
(
÷÷ 
SQLiteException
÷÷ "
)
÷÷" #
{
øø 
Log
ùù 
.
ùù 
Error
ùù 
(
ùù 
Strings
ùù !
.
ùù! "
Get
ùù" %
(
ùù% &
$str
ùù& /
)
ùù/ 0
,
ùù0 1

MethodBase
ùù2 <
.
ùù< =
GetCurrentMethod
ùù= M
(
ùùM N
)
ùùN O
?
ùùO P
.
ùùP Q
Name
ùùQ U
)
ùùU V
;
ùùV W
}
úú 
return
ûû 
-
ûû 
$num
ûû 
;
ûû 
}
üü 	
public
þþ 
static
þþ 
List
þþ 
<
þþ 
DataRunModel
þþ '
>
þþ' (
GetResultModels
þþ) 8
(
þþ8 9

RUN_STATUS
þþ9 C
	runStatus
þþD M
)
þþM N
{
ÿÿ 	
var
 
output
 
=
 
new
 
List
 !
<
! "
DataRunModel
" .
>
. /
(
/ 0
)
0 1
;
1 2
if
 
(
 
MainConnection
 
!=
 !
null
" &
)
& '
{
 
using
 
(
 
var
 
cmd
 
=
  
new
! $
SQLiteCommand
% 2
(
2 3 
SQL_QUERY_ANALYZED
3 E
,
E F
MainConnection
G U
.
U V

Connection
V `
,
` a
MainConnection
b p
.
p q
Transaction
q |
)
| }
)
} ~
{
 
cmd
 
.
 

Parameters
 "
.
" #
AddWithValue
# /
(
/ 0
$str
0 9
,
9 :
	runStatus
; D
)
D E
;
E F
using
 
(
 
var
 
reader
 %
=
& '
cmd
( +
.
+ ,
ExecuteReader
, 9
(
9 :
)
: ;
)
; <
{
 
while
 
(
 
reader
 %
.
% &
Read
& *
(
* +
)
+ ,
)
, -
{
 
output
 "
.
" #
Add
# &
(
& '
new
' *
DataRunModel
+ 7
(
7 8
KeyIn
8 =
:
= >
reader
? E
[
E F
$str
F S
]
S T
.
T U
ToString
U ]
(
] ^
)
^ _
+
` a
$str
b i
+
j k
reader
l r
[
r s
$strs 
] 
. 
ToString 
( 
) 
, 
TextIn 
: 
reader 
[  
$str  ­
]­ ®
.® ¯
ToString¯ ·
(· ¸
)¸ ¹
+º »
$str¼ Ã
+Ä Å
readerÆ Ì
[Ì Í
$strÍ Ý
]Ý Þ
.Þ ß
ToStringß ç
(ç è
)è é
)é ê
)ê ë
;ë ì
}
 
}
 
}
 
}
 
else
 
{
 
Log
 
.
 
Debug
 
(
 
$str
 M
)
M N
;
N O
}
 
return
 
output
 
;
 
}
 	
public
 
static
 
IEnumerable
 !
<
! "
WriteObject
" -
>
- .
GetResultsByRunid
/ @
(
@ A
string
A G
runid
H M
)
M N
{
 	
foreach
 
(
 
var
 
cxn
 
in
 
Connections
  +
)
+ ,
{
 
using
 
var
 
cmd
 
=
 
new
  #
SQLiteCommand
$ 1
(
1 2'
SQL_GET_RESULTS_BY_RUN_ID
2 K
,
K L
cxn
M P
.
P Q

Connection
Q [
,
[ \
cxn
] `
.
` a
Transaction
a l
)
l m
;
m n
cmd
 
.
 

Parameters
 
.
 
AddWithValue
 +
(
+ ,
$str
, 5
,
5 6
runid
7 <
)
< =
;
= >
using
 
(
 
var
 
reader
 !
=
" #
cmd
$ '
.
' (
ExecuteReader
( 5
(
5 6
)
6 7
)
7 8
{
   
while
¡¡ 
(
¡¡ 
reader
¡¡ !
.
¡¡! "
Read
¡¡" &
(
¡¡& '
)
¡¡' (
)
¡¡( )
{
¢¢ 
var
££ 
runId
££ !
=
££" #
reader
££$ *
[
££* +
$str
££+ 3
]
££3 4
.
££4 5
ToString
££5 =
(
££= >
)
££> ?
;
££? @
var
¤¤ 
resultTypeString
¤¤ ,
=
¤¤- .
reader
¤¤/ 5
[
¤¤5 6
$str
¤¤6 C
]
¤¤C D
.
¤¤D E
ToString
¤¤E M
(
¤¤M N
)
¤¤N O
;
¤¤O P
if
¥¥ 
(
¥¥ 
runId
¥¥ !
!=
¥¥" $
null
¥¥% )
&&
¥¥* ,
resultTypeString
¥¥- =
!=
¥¥> @
null
¥¥A E
)
¥¥E F
{
¦¦ 
var
§§ 
val
§§  #
=
§§$ %
WriteObject
§§& 1
.
§§1 2

FromString
§§2 <
(
§§< =
(
§§= >
string
§§> D
)
§§D E
reader
§§E K
[
§§K L
$str
§§L X
]
§§X Y
,
§§Y Z
(
§§[ \
RESULT_TYPE
§§\ g
)
§§g h
Enum
§§h l
.
§§l m
Parse
§§m r
(
§§r s
typeof
§§s y
(
§§y z
RESULT_TYPE§§z 
)§§ 
,§§  
resultTypeString§§ 
)§§ 
,§§ 
runId§§  
)§§  ¡
;§§¡ ¢
if
¨¨ 
(
¨¨  
val
¨¨  #
is
¨¨$ &
WriteObject
¨¨' 2
valid
¨¨3 8
)
¨¨8 9
yield
©©  %
return
©©& ,
valid
©©- 2
;
©©2 3
}
ªª 
}
«« 
}
¬¬ 
}
­­ 
}
®® 	
public
°° 
static
°° 

Dictionary
°°  
<
°°  !
RESULT_TYPE
°°! ,
,
°°, -
int
°°. 1
>
°°1 2%
GetResultTypesAndCounts
°°3 J
(
°°J K
string
°°K Q
runId
°°R W
)
°°W X
{
±± 	
var
²² 
outDict
²² 
=
²² 
new
²² 

Dictionary
²² (
<
²²( )
RESULT_TYPE
²²) 4
,
²²4 5
int
²²6 9
>
²²9 :
(
²²: ;
)
²²; <
{
²²= >
}
²²? @
;
²²@ A
try
³³ 
{
´´ 
if
µµ 
(
µµ 
MainConnection
µµ "
!=
µµ# %
null
µµ& *
)
µµ* +
{
¶¶ 
using
·· 
(
·· 
var
·· 
cmd
·· "
=
··# $
new
··% (
SQLiteCommand
··) 6
(
··6 7)
SQL_GET_RESULT_TYPES_COUNTS
··7 R
,
··R S
MainConnection
··T b
.
··b c

Connection
··c m
,
··m n
MainConnection
··o }
.
··} ~
Transaction··~ 
)·· 
)·· 
{
¸¸ 
cmd
¹¹ 
.
¹¹ 

Parameters
¹¹ &
.
¹¹& '
AddWithValue
¹¹' 3
(
¹¹3 4
$str
¹¹4 =
,
¹¹= >
runId
¹¹? D
)
¹¹D E
;
¹¹E F
using
»» 
(
»» 
var
»» "
reader
»»# )
=
»»* +
cmd
»», /
.
»»/ 0
ExecuteReader
»»0 =
(
»»= >
)
»»> ?
)
»»? @
{
¼¼ 
while
½½ !
(
½½" #
reader
½½# )
.
½½) *
Read
½½* .
(
½½. /
)
½½/ 0
)
½½0 1
{
¾¾ 
if
¿¿  "
(
¿¿# $
Enum
¿¿$ (
.
¿¿( )
TryParse
¿¿) 1
(
¿¿1 2
reader
¿¿2 8
[
¿¿8 9
$str
¿¿9 F
]
¿¿F G
.
¿¿G H
ToString
¿¿H P
(
¿¿P Q
)
¿¿Q R
,
¿¿R S
out
¿¿T W
RESULT_TYPE
¿¿X c
result_type
¿¿d o
)
¿¿o p
)
¿¿p q
{
ÀÀ  !
outDict
ÁÁ$ +
.
ÁÁ+ ,
TryAdd
ÁÁ, 2
(
ÁÁ2 3
result_type
ÁÁ3 >
,
ÁÁ> ?
int
ÁÁ@ C
.
ÁÁC D
Parse
ÁÁD I
(
ÁÁI J
reader
ÁÁJ P
[
ÁÁP Q
$str
ÁÁQ X
]
ÁÁX Y
.
ÁÁY Z
ToString
ÁÁZ b
(
ÁÁb c
)
ÁÁc d
??
ÁÁe g
$str
ÁÁh l
,
ÁÁl m
CultureInfo
ÁÁn y
.
ÁÁy z
InvariantCultureÁÁz 
)ÁÁ 
)ÁÁ 
;ÁÁ 
}
ÂÂ  !
}
ÃÃ 
}
ÄÄ 
}
ÅÅ 
}
ÆÆ 
}
ÇÇ 
catch
ÈÈ 
(
ÈÈ 
SQLiteException
ÈÈ "
)
ÈÈ" #
{
ÉÉ 
Log
ÊÊ 
.
ÊÊ 
Error
ÊÊ 
(
ÊÊ 
Strings
ÊÊ !
.
ÊÊ! "
Get
ÊÊ" %
(
ÊÊ% &
$str
ÊÊ& =
)
ÊÊ= >
)
ÊÊ> ?
;
ÊÊ? @
}
ËË 
return
ÌÌ 
outDict
ÌÌ 
;
ÌÌ 
}
ÍÍ 	
public
ÏÏ 
static
ÏÏ 
AsaRun
ÏÏ 
?
ÏÏ 
GetRun
ÏÏ $
(
ÏÏ$ %
string
ÏÏ% +
RunId
ÏÏ, 1
)
ÏÏ1 2
{
ÐÐ 	
_
ÑÑ 
=
ÑÑ 
MainConnection
ÑÑ 
??
ÑÑ !
throw
ÑÑ" '
new
ÑÑ( +$
NullReferenceException
ÑÑ, B
(
ÑÑB C
Strings
ÑÑC J
.
ÑÑJ K
Get
ÑÑK N
(
ÑÑN O
$str
ÑÑO _
)
ÑÑ_ `
)
ÑÑ` a
;
ÑÑa b
using
ÓÓ 
(
ÓÓ 
var
ÓÓ 
cmd
ÓÓ 
=
ÓÓ 
new
ÓÓ  
SQLiteCommand
ÓÓ! .
(
ÓÓ. /
SQL_GET_RUN
ÓÓ/ :
,
ÓÓ: ;
MainConnection
ÓÓ< J
.
ÓÓJ K

Connection
ÓÓK U
,
ÓÓU V
MainConnection
ÓÓW e
.
ÓÓe f
Transaction
ÓÓf q
)
ÓÓq r
)
ÓÓr s
{
ÔÔ 
cmd
ÕÕ 
.
ÕÕ 

Parameters
ÕÕ 
.
ÕÕ 
AddWithValue
ÕÕ +
(
ÕÕ+ ,
$str
ÕÕ, 5
,
ÕÕ5 6
RunId
ÕÕ7 <
)
ÕÕ< =
;
ÕÕ= >
using
ÖÖ 
(
ÖÖ 
var
ÖÖ 
reader
ÖÖ !
=
ÖÖ" #
cmd
ÖÖ$ '
.
ÖÖ' (
ExecuteReader
ÖÖ( 5
(
ÖÖ5 6
)
ÖÖ6 7
)
ÖÖ7 8
{
×× 
while
ØØ 
(
ØØ 
reader
ØØ !
.
ØØ! "
Read
ØØ" &
(
ØØ& '
)
ØØ' (
)
ØØ( )
{
ÙÙ 
if
ÚÚ 
(
ÚÚ 
reader
ÚÚ "
[
ÚÚ" #
$str
ÚÚ# /
]
ÚÚ/ 0
?
ÚÚ0 1
.
ÚÚ1 2
ToString
ÚÚ2 :
(
ÚÚ: ;
)
ÚÚ; <
is
ÚÚ= ?
string
ÚÚ@ F

serialized
ÚÚG Q
)
ÚÚQ R
{
ÛÛ 
return
ÜÜ "
JsonConvert
ÜÜ# .
.
ÜÜ. /
DeserializeObject
ÜÜ/ @
<
ÜÜ@ A
AsaRun
ÜÜA G
>
ÜÜG H
(
ÜÜH I

serialized
ÜÜI S
)
ÜÜS T
;
ÜÜT U
}
ÝÝ 
}
ÞÞ 
}
ßß 
}
àà 
return
áá 
null
áá 
;
áá 
}
ââ 	
public
ää 
static
ää 
List
ää 
<
ää 
string
ää !
>
ää! "
GetRuns
ää# *
(
ää* +
string
ää+ 1
type
ää2 6
)
ää6 7
{
åå 	
_
ææ 
=
ææ 
MainConnection
ææ 
??
ææ !
throw
ææ" '
new
ææ( +$
NullReferenceException
ææ, B
(
ææB C
Strings
ææC J
.
ææJ K
Get
ææK N
(
ææN O
$str
ææO _
)
ææ_ `
)
ææ` a
;
ææa b
string
èè 
Select_Runs
èè 
=
èè  
$str
èè! l
;
èèl m
List
êê 
<
êê 
string
êê 
>
êê 
Runs
êê 
=
êê 
new
êê  #
List
êê$ (
<
êê( )
string
êê) /
>
êê/ 0
(
êê0 1
)
êê1 2
;
êê2 3
using
ìì 
var
ìì 
cmd
ìì 
=
ìì 
new
ìì 
SQLiteCommand
ìì  -
(
ìì- .
Select_Runs
ìì. 9
,
ìì9 :
MainConnection
ìì; I
.
ììI J

Connection
ììJ T
,
ììT U
MainConnection
ììV d
.
ììd e
Transaction
ììe p
)
ììp q
;
ììq r
cmd
íí 
.
íí 

Parameters
íí 
.
íí 
AddWithValue
íí '
(
íí' (
$str
íí( /
,
íí/ 0
type
íí1 5
)
íí5 6
;
íí6 7
using
îî 
(
îî 
var
îî 
reader
îî 
=
îî 
cmd
îî  #
.
îî# $
ExecuteReader
îî$ 1
(
îî1 2
)
îî2 3
)
îî3 4
{
ïï 
while
ðð 
(
ðð 
reader
ðð 
.
ðð 
Read
ðð "
(
ðð" #
)
ðð# $
)
ðð$ %
{
ññ 
Runs
òò 
.
òò 
Add
òò 
(
òò 
(
òò 
string
òò $
)
òò$ %
reader
òò% +
[
òò+ ,
$str
òò, 4
]
òò4 5
)
òò5 6
;
òò6 7
}
óó 
}
ôô 
return
õõ 
Runs
õõ 
;
õõ 
}
öö 	
public
øø 
static
øø 
List
øø 
<
øø 
string
øø !
>
øø! "
GetRuns
øø# *
(
øø* +
)
øø+ ,
{
ùù 	
return
úú 
GetRuns
úú 
(
úú 
$str
úú $
)
úú$ %
;
úú% &
}
ûû 	
public
ýý 
static
ýý 
List
ýý 
<
ýý 
FileMonitorEvent
ýý +
>
ýý+ ,)
GetSerializedMonitorResults
ýý- H
(
ýýH I
string
ýýI O
runId
ýýP U
)
ýýU V
{
þþ 	
List
ÿÿ 
<
ÿÿ 
FileMonitorEvent
ÿÿ !
>
ÿÿ! "
records
ÿÿ# *
=
ÿÿ+ ,
new
ÿÿ- 0
List
ÿÿ1 5
<
ÿÿ5 6
FileMonitorEvent
ÿÿ6 F
>
ÿÿF G
(
ÿÿG H
)
ÿÿH I
;
ÿÿI J
if
 
(
 
MainConnection
 
!=
 !
null
" &
)
& '
{
 
using
 
(
 
var
 
cmd
 
=
  
new
! $
SQLiteCommand
% 2
(
2 3$
GET_SERIALIZED_RESULTS
3 I
,
I J
MainConnection
K Y
.
Y Z

Connection
Z d
,
d e
MainConnection
f t
.
t u
Transactionu 
) 
) 
{
 
cmd
 
.
 

Parameters
 "
.
" #
AddWithValue
# /
(
/ 0
$str
0 9
,
9 :
runId
; @
)
@ A
;
A B
using
 
(
 
var
 
reader
 %
=
& '
cmd
( +
.
+ ,
ExecuteReader
, 9
(
9 :
)
: ;
)
; <
{
 
FileMonitorEvent
 (
obj
) ,
;
, -
while
 
(
 
reader
 %
.
% &
Read
& *
(
* +
)
+ ,
)
, -
{
 
if
 
(
  
reader
  &
[
& '
$str
' 3
]
3 4
.
4 5
ToString
5 =
(
= >
)
> ?
is
@ B
string
C I

serialized
J T
)
T U
{
 
try
  #
{
  !
obj
$ '
=
( )
JsonConvert
* 5
.
5 6
DeserializeObject
6 G
<
G H
FileMonitorEvent
H X
>
X Y
(
Y Z

serialized
Z d
)
d e
;
e f
obj
$ '
.
' (

ChangeType
( 2
=
3 4
(
5 6
CHANGE_TYPE
6 A
)
A B
int
B E
.
E F
Parse
F K
(
K L
reader
L R
[
R S
$str
S `
]
` a
.
a b
ToString
b j
(
j k
)
k l
??
m o
$str
p s
,
s t
CultureInfou 
.  
InvariantCulture 
) 
; 
records
$ +
.
+ ,
Add
, /
(
/ 0
obj
0 3
)
3 4
;
4 5
}
  !
catch
  %
(
& '
	Exception
' 0
e
1 2
)
2 3
{
  !
Log
$ '
.
' (
Debug
( -
(
- .
e
. /
,
/ 0
$str
1 a
,
a b

serialized
c m
)
m n
;
n o
}
  !
}
 
}
 
}
 
}
 
}
 
return
 
records
 
;
 
}
 	
public
   
static
   
bool
   
HasElements
   &
(
  & '
)
  ' (
{
¡¡ 	
return
¢¢ 
Connections
¢¢ 
.
¢¢ 
Any
¢¢ "
(
¢¢" #
x
¢¢# $
=>
¢¢% '
!
¢¢( )
x
¢¢) *
.
¢¢* +

WriteQueue
¢¢+ 5
.
¢¢5 6
IsEmpty
¢¢6 =
)
¢¢= >
;
¢¢> ?
}
££ 	
public
¥¥ 
static
¥¥ 
void
¥¥ 
InsertAnalyzed
¥¥ )
(
¥¥) *
CompareResult
¥¥* 7
objIn
¥¥8 =
)
¥¥= >
{
¦¦ 	
if
§§ 
(
§§ 
objIn
§§ 
!=
§§ 
null
§§ 
&&
§§  
MainConnection
§§! /
!=
§§0 2
null
§§3 7
)
§§7 8
{
¨¨ 
using
©© 
(
©© 
var
©© 
cmd
©© 
=
©©  
new
©©! $
SQLiteCommand
©©% 2
(
©©2 3(
SQL_INSERT_FINDINGS_RESULT
©©3 M
,
©©M N
MainConnection
©©O ]
.
©©] ^

Connection
©©^ h
,
©©h i
MainConnection
©©j x
.
©©x y
Transaction©©y 
)©© 
)©© 
{
ªª 
cmd
«« 
.
«« 

Parameters
«« "
.
««" #
AddWithValue
««# /
(
««/ 0
$str
««0 ?
,
««? @
objIn
««A F
.
««F G
	BaseRunId
««G P
)
««P Q
;
««Q R
cmd
¬¬ 
.
¬¬ 

Parameters
¬¬ "
.
¬¬" #
AddWithValue
¬¬# /
(
¬¬/ 0
$str
¬¬0 @
,
¬¬@ A
objIn
¬¬B G
.
¬¬G H
CompareRunId
¬¬H T
)
¬¬T U
;
¬¬U V
cmd
­­ 
.
­­ 

Parameters
­­ "
.
­­" #
AddWithValue
­­# /
(
­­/ 0
$str
­­0 >
,
­­> ?
objIn
­­@ E
.
­­E F

ResultType
­­F P
)
­­P Q
;
­­Q R
cmd
®® 
.
®® 

Parameters
®® "
.
®®" #
AddWithValue
®®# /
(
®®/ 0
$str
®®0 8
,
®®8 9
objIn
®®: ?
.
®®? @
Analysis
®®@ H
)
®®H I
;
®®I J
cmd
¯¯ 
.
¯¯ 

Parameters
¯¯ "
.
¯¯" #
AddWithValue
¯¯# /
(
¯¯/ 0
$str
¯¯0 ;
,
¯¯; <
objIn
¯¯= B
.
¯¯B C
Identity
¯¯C K
)
¯¯K L
;
¯¯L M
cmd
°° 
.
°° 

Parameters
°° "
.
°°" #
AddWithValue
°°# /
(
°°/ 0
$str
°°0 =
,
°°= >
JsonConvert
°°? J
.
°°J K
SerializeObject
°°K Z
(
°°Z [
objIn
°°[ `
)
°°` a
)
°°a b
;
°°b c
cmd
±± 
.
±± 
ExecuteNonQuery
±± '
(
±±' (
)
±±( )
;
±±) *
}
²² 
}
³³ 
else
´´ 
{
µµ 
Log
¶¶ 
.
¶¶ 
Debug
¶¶ 
(
¶¶ 
$str
¶¶ T
)
¶¶T U
;
¶¶U V
}
·· 
}
¸¸ 	
public
ºº 
static
ºº 
void
ºº 
InsertCompareRun
ºº +
(
ºº+ ,
string
ºº, 2

firstRunId
ºº3 =
,
ºº= >
string
ºº? E
secondRunId
ººF Q
,
ººQ R

RUN_STATUS
ººS ]
	runStatus
ºº^ g
)
ººg h
{
»» 	
_
¼¼ 
=
¼¼ 
MainConnection
¼¼ 
??
¼¼ !
throw
¼¼" '
new
¼¼( +$
NullReferenceException
¼¼, B
(
¼¼B C
Strings
¼¼C J
.
¼¼J K
Get
¼¼K N
(
¼¼N O
$str
¼¼O _
)
¼¼_ `
)
¼¼` a
;
¼¼a b
using
½½ 
(
½½ 
var
½½ 
cmd
½½ 
=
½½ 
new
½½  
SQLiteCommand
½½! .
(
½½. /.
 INSERT_RUN_INTO_RESULT_TABLE_SQL
½½/ O
,
½½O P
MainConnection
½½Q _
.
½½_ `

Connection
½½` j
,
½½j k
MainConnection
½½l z
.
½½z {
Transaction½½{ 
)½½ 
)½½ 
{
¾¾ 
cmd
¿¿ 
.
¿¿ 

Parameters
¿¿ 
.
¿¿ 
AddWithValue
¿¿ +
(
¿¿+ ,
$str
¿¿, :
,
¿¿: ;

firstRunId
¿¿< F
)
¿¿F G
;
¿¿G H
cmd
ÀÀ 
.
ÀÀ 

Parameters
ÀÀ 
.
ÀÀ 
AddWithValue
ÀÀ +
(
ÀÀ+ ,
$str
ÀÀ, =
,
ÀÀ= >
secondRunId
ÀÀ? J
)
ÀÀJ K
;
ÀÀK L
cmd
ÁÁ 
.
ÁÁ 

Parameters
ÁÁ 
.
ÁÁ 
AddWithValue
ÁÁ +
(
ÁÁ+ ,
$str
ÁÁ, 5
,
ÁÁ5 6
	runStatus
ÁÁ7 @
)
ÁÁ@ A
;
ÁÁA B
cmd
ÂÂ 
.
ÂÂ 
ExecuteNonQuery
ÂÂ #
(
ÂÂ# $
)
ÂÂ$ %
;
ÂÂ% &
}
ÃÃ 
}
ÄÄ 	
public
ÆÆ 
static
ÆÆ 
void
ÆÆ 
	InsertRun
ÆÆ $
(
ÆÆ$ %
AsaRun
ÆÆ% +
run
ÆÆ, /
)
ÆÆ/ 0
{
ÇÇ 	
if
ÈÈ 
(
ÈÈ 
run
ÈÈ 
==
ÈÈ 
null
ÈÈ 
)
ÈÈ 
{
ÉÉ 
return
ÊÊ 
;
ÊÊ 
}
ËË 
if
ÌÌ 
(
ÌÌ 
MainConnection
ÌÌ 
!=
ÌÌ !
null
ÌÌ" &
)
ÌÌ& '
{
ÍÍ 
using
ÎÎ 
var
ÎÎ 
cmd
ÎÎ 
=
ÎÎ 
new
ÎÎ  #
SQLiteCommand
ÎÎ$ 1
(
ÎÎ1 2
SQL_INSERT_RUN
ÎÎ2 @
,
ÎÎ@ A
MainConnection
ÎÎB P
.
ÎÎP Q

Connection
ÎÎQ [
,
ÎÎ[ \
MainConnection
ÎÎ] k
.
ÎÎk l
Transaction
ÎÎl w
)
ÎÎw x
;
ÎÎx y
cmd
ÏÏ 
.
ÏÏ 

Parameters
ÏÏ 
.
ÏÏ 
AddWithValue
ÏÏ +
(
ÏÏ+ ,
$str
ÏÏ, 5
,
ÏÏ5 6
run
ÏÏ7 :
.
ÏÏ: ;
RunId
ÏÏ; @
)
ÏÏ@ A
;
ÏÏA B
cmd
ÐÐ 
.
ÐÐ 

Parameters
ÐÐ 
.
ÐÐ 
AddWithValue
ÐÐ +
(
ÐÐ+ ,
$str
ÐÐ, 3
,
ÐÐ3 4
run
ÐÐ5 8
.
ÐÐ8 9
Type
ÐÐ9 =
)
ÐÐ= >
;
ÐÐ> ?
cmd
ÑÑ 
.
ÑÑ 

Parameters
ÑÑ 
.
ÑÑ 
AddWithValue
ÑÑ +
(
ÑÑ+ ,
$str
ÑÑ, 9
,
ÑÑ9 :
JsonConvert
ÑÑ; F
.
ÑÑF G
SerializeObject
ÑÑG V
(
ÑÑV W
run
ÑÑW Z
)
ÑÑZ [
)
ÑÑ[ \
;
ÑÑ\ ]
try
ÓÓ 
{
ÔÔ 
cmd
ÕÕ 
.
ÕÕ 
ExecuteNonQuery
ÕÕ '
(
ÕÕ' (
)
ÕÕ( )
;
ÕÕ) *
}
ÖÖ 
catch
×× 
(
×× 
SQLiteException
×× &
e
××' (
)
××( )
{
ØØ 
Log
ÙÙ 
.
ÙÙ 
Warning
ÙÙ 
(
ÙÙ  
e
ÙÙ  !
.
ÙÙ! "

StackTrace
ÙÙ" ,
)
ÙÙ, -
;
ÙÙ- .
Log
ÚÚ 
.
ÚÚ 
Warning
ÚÚ 
(
ÚÚ  
e
ÚÚ  !
.
ÚÚ! "
Message
ÚÚ" )
)
ÚÚ) *
;
ÚÚ* +
}
ÛÛ 
}
ÜÜ 
else
ÝÝ 
{
ÞÞ 
Log
ßß 
.
ßß 
Debug
ßß 
(
ßß 
$str
ßß O
)
ßßO P
;
ßßP Q
}
àà 
}
áá 	
public
ãã 
static
ãã 
int
ãã 
ModuloString
ãã &
(
ãã& '
string
ãã' -
identity
ãã. 6
,
ãã6 7
int
ãã8 ;
shardingFactor
ãã< J
)
ããJ K
=>
ããL N
identity
ããO W
.
ããW X
Sum
ããX [
(
ãã[ \
x
ãã\ ]
=>
ãã^ `
x
ããa b
)
ããb c
%
ããd e
shardingFactor
ããf t
;
ããt u
public
åå 
static
åå 
int
åå !
PopulateConnections
åå -
(
åå- .
)
åå. /
{
ææ 	
var
çç  
connectionsCreated
çç "
=
çç# $
$num
çç% &
;
çç& '
for
èè 
(
èè 
int
èè 
i
èè 
=
èè 
Connections
èè $
.
èè$ %
Count
èè% *
;
èè* +
i
èè, -
<
èè. /

dbSettings
èè0 :
.
èè: ;
ShardingFactor
èè; I
;
èèI J
i
èèK L
++
èèL N
)
èèN O
{
éé 
Connections
êê 
.
êê 
Add
êê 
(
êê  #
GenerateSqlConnection
êê  5
(
êê5 6
i
êê6 7
)
êê7 8
)
êê8 9
;
êê9 : 
connectionsCreated
ëë "
++
ëë" $
;
ëë$ %
}
ìì 
return
íí  
connectionsCreated
íí %
;
íí% &
}
îî 	
public
ðð 
static
ðð 
void
ðð 
RollBack
ðð #
(
ðð# $
)
ðð$ %
{
ññ 	
if
òò 
(
òò 
Connections
òò 
!=
òò 
null
òò #
)
òò# $
{
óó 
Connections
ôô 
.
ôô 

AsParallel
ôô &
(
ôô& '
)
ôô' (
.
ôô( )
ForAll
ôô) /
(
ôô/ 0
cxn
ôô0 3
=>
ôô4 6
{
õõ 
try
öö 
{
÷÷ 
cxn
øø 
.
øø 
Transaction
øø '
?
øø' (
.
øø( )
Rollback
øø) 1
(
øø1 2
)
øø2 3
;
øø3 4
}
ùù 
catch
úú 
(
úú $
NullReferenceException
úú 1
)
úú1 2
{
ûû 
}
ûû 
finally
üü 
{
ýý 
cxn
þþ 
.
þþ 
Transaction
þþ '
=
þþ( )
null
þþ* .
;
þþ. /
}
ÿÿ 
}
 
)
 
;
 
}
 
}
 	
public
 
static
 
PLATFORM
 
RunIdToPlatform
 .
(
. /
string
/ 5
runid
6 ;
)
; <
{
 	
if
 
(
 
MainConnection
 
!=
 !
null
" &
)
& '
{
 
using
 
(
 
var
 
cmd
 
=
  
new
! $
SQLiteCommand
% 2
(
2 3)
SQL_GET_PLATFORM_FROM_RUNID
3 N
,
N O
MainConnection
P ^
.
^ _

Connection
_ i
,
i j
MainConnection
k y
.
y z
Transactionz 
) 
) 
{
 
cmd
 
.
 

Parameters
 "
.
" #
AddWithValue
# /
(
/ 0
$str
0 9
,
9 :
runid
; @
)
@ A
;
A B
using
 
(
 
var
 
reader
 %
=
& '
cmd
( +
.
+ ,
ExecuteReader
, 9
(
9 :
)
: ;
)
; <
{
 
reader
 
.
 
Read
 #
(
# $
)
$ %
;
% &
var
 
platform
 $
=
% &
reader
' -
[
- .
$str
. 8
]
8 9
.
9 :
ToString
: B
(
B C
)
C D
;
D E
if
 
(
 
platform
 $
!=
% '
null
( ,
)
, -
{
 
return
 "
(
# $
PLATFORM
$ ,
)
, -
Enum
- 1
.
1 2
Parse
2 7
(
7 8
typeof
8 >
(
> ?
PLATFORM
? G
)
G H
,
H I
platform
J R
)
R S
;
S T
}
 
}
 
}
 
}
 
else
 
{
 
Log
 
.
 
Debug
 
(
 
$str
 S
)
S T
;
T U
}
 
return
 
PLATFORM
 
.
 
UNKNOWN
 #
;
# $
}
 	
public
 
static
 
bool
 
Setup
  
(
  !
string
! '
filename
( 0
,
0 1

DBSettings
2 <
?
< =
dbSettingsIn
> J
=
K L
null
M Q
)
Q R
{
 	

dbSettings
 
=
 
(
 
dbSettingsIn
 &
==
' )
null
* .
)
. /
?
0 1
new
2 5

DBSettings
6 @
(
@ A
)
A B
:
C D
dbSettingsIn
E Q
;
Q R
if
¡¡ 
(
¡¡ 
filename
¡¡ 
!=
¡¡ 
null
¡¡  
)
¡¡  !
{
¢¢ 
if
££ 
(
££ 
SQLiteFilename
££ "
!=
££# %
filename
££& .
)
££. /
{
¤¤ 
SQLiteFilename
¥¥ "
=
¥¥# $
filename
¥¥% -
;
¥¥- .
}
¦¦ 
}
§§ 
if
©© 
(
©© 
Connections
©© 
.
©© 
Count
©© !
>
©©" #
$num
©©$ %
)
©©% &
{
ªª 
CloseDatabase
«« 
(
«« 
)
«« 
;
««  
}
¬¬ 
if
®® 
(
®® 
Connections
®® 
==
®® 
null
®® #
||
®®$ &
Connections
®®' 2
.
®®2 3
Count
®®3 8
==
®®9 ;
$num
®®< =
)
®®= >
{
¯¯ 
Connections
°° 
=
°° 
new
°° !
List
°°" &
<
°°& '-
SystemSQLiteSqlConnectionHolder
°°' F
>
°°F G
(
°°G H
)
°°H I
;
°°I J!
PopulateConnections
²² #
(
²²# $
)
²²$ %
;
²²% &
var
´´ 
settings
´´ 
=
´´ 
GetSettings
´´ *
(
´´* +
)
´´+ ,
;
´´, -
if
µµ 
(
µµ 
settings
µµ 
!=
µµ 
null
µµ  $
)
µµ$ %
{
¶¶ 
FirstRun
·· 
=
·· 
false
·· $
;
··$ %
if
¹¹ 
(
¹¹ 
SCHEMA_VERSION
¹¹ &
!=
¹¹' )
settings
¹¹* 2
.
¹¹2 3
SchemaVersion
¹¹3 @
)
¹¹@ A
{
ºº 
Log
»» 
.
»» 
Fatal
»» !
(
»»! "
$str»»" 
)»» 
;»» 
Environment
¼¼ #
.
¼¼# $
Exit
¼¼$ (
(
¼¼( )
(
¼¼) *
int
¼¼* -
)
¼¼- .
	ASA_ERROR
¼¼. 7
.
¼¼7 8
MATCHING_SCHEMA
¼¼8 G
)
¼¼G H
;
¼¼H I
}
½½ 
if
¿¿ 
(
¿¿ 
dbSettingsIn
¿¿ $
!=
¿¿% '
null
¿¿( ,
&&
¿¿- /
settings
¿¿0 8
.
¿¿8 9
ShardingFactor
¿¿9 G
!=
¿¿H J
dbSettingsIn
¿¿K W
.
¿¿W X
ShardingFactor
¿¿X f
)
¿¿f g
{
ÀÀ 
Log
ÁÁ 
.
ÁÁ 
Information
ÁÁ '
(
ÁÁ' (
$"
ÁÁ( *
$str
ÁÁ* F
{
ÁÁF G
dbSettingsIn
ÁÁG S
.
ÁÁS T
ShardingFactor
ÁÁT b
}
ÁÁb c
$strÁÁc 
{ÁÁ 
settingsÁÁ 
.ÁÁ 
ShardingFactorÁÁ 
}ÁÁ 
$strÁÁ ¸
{ÁÁ¸ ¹
settingsÁÁ¹ Á
.ÁÁÁ Â
ShardingFactorÁÁÂ Ð
}ÁÁÐ Ñ
$strÁÁÑ Ò
"ÁÁÒ Ó
)ÁÁÓ Ô
;ÁÁÔ Õ
}
ÂÂ 

dbSettings
ÄÄ 
.
ÄÄ 
ShardingFactor
ÄÄ -
=
ÄÄ. /
settings
ÄÄ0 8
.
ÄÄ8 9
ShardingFactor
ÄÄ9 G
;
ÄÄG H
}
ÅÅ 
else
ÆÆ 
{
ÇÇ 
FirstRun
ÈÈ 
=
ÈÈ 
true
ÈÈ #
;
ÈÈ# $
}
ÉÉ !
PopulateConnections
ËË #
(
ËË# $
)
ËË$ %
;
ËË% &
if
ÍÍ 
(
ÍÍ 
MainConnection
ÍÍ "
==
ÍÍ# %
null
ÍÍ& *
)
ÍÍ* +
{
ÎÎ 
Log
ÏÏ 
.
ÏÏ 
Warning
ÏÏ 
(
ÏÏ  
$str
ÏÏ  d
)
ÏÏd e
;
ÏÏe f
return
ÐÐ 
false
ÐÐ  
;
ÐÐ  !
}
ÑÑ 
if
ÓÓ 
(
ÓÓ 
FirstRun
ÓÓ 
)
ÓÓ 
{
ÔÔ 
try
ÕÕ 
{
ÖÖ 
BeginTransaction
×× (
(
××( )
)
××) *
;
××* +
using
ÙÙ 
var
ÙÙ !
cmd2
ÙÙ" &
=
ÙÙ' (
new
ÙÙ) ,
SQLiteCommand
ÙÙ- :
(
ÙÙ: ;
SQL_CREATE_RUNS
ÙÙ; J
,
ÙÙJ K
MainConnection
ÙÙL Z
.
ÙÙZ [

Connection
ÙÙ[ e
,
ÙÙe f
MainConnection
ÙÙg u
.
ÙÙu v
TransactionÙÙv 
)ÙÙ 
;ÙÙ 
cmd2
ÚÚ 
.
ÚÚ 
ExecuteNonQuery
ÚÚ ,
(
ÚÚ, -
)
ÚÚ- .
;
ÚÚ. /
cmd2
ÜÜ 
.
ÜÜ 
CommandText
ÜÜ (
=
ÜÜ) * 
SQL_CREATE_RESULTS
ÜÜ+ =
;
ÜÜ= >
cmd2
ÝÝ 
.
ÝÝ 
ExecuteNonQuery
ÝÝ ,
(
ÝÝ, -
)
ÝÝ- .
;
ÝÝ. /
cmd2
ßß 
.
ßß 
CommandText
ßß (
=
ßß) *)
SQL_CREATE_FINDINGS_RESULTS
ßß+ F
;
ßßF G
cmd2
àà 
.
àà 
ExecuteNonQuery
àà ,
(
àà, -
)
àà- .
;
àà. /
cmd2
ââ 
.
ââ 
CommandText
ââ (
=
ââ) *-
SQL_CREATE_FINDINGS_LEVEL_INDEX
ââ+ J
;
ââJ K
cmd2
ãã 
.
ãã 
ExecuteNonQuery
ãã ,
(
ãã, -
)
ãã- .
;
ãã. /
cmd2
åå 
.
åå 
CommandText
åå (
=
åå) *3
%SQL_CREATE_FINDINGS_RESULT_TYPE_INDEX
åå+ P
;
ååP Q
cmd2
ææ 
.
ææ 
ExecuteNonQuery
ææ ,
(
ææ, -
)
ææ- .
;
ææ. /
cmd2
èè 
.
èè 
CommandText
èè (
=
èè) *0
"SQL_CREATE_FINDINGS_IDENTITY_INDEX
èè+ M
;
èèM N
cmd2
éé 
.
éé 
ExecuteNonQuery
éé ,
(
éé, -
)
éé- .
;
éé. /
cmd2
ëë 
.
ëë 
CommandText
ëë (
=
ëë) *9
+SQL_CREATE_FINDINGS_LEVEL_RESULT_TYPE_INDEX
ëë+ V
;
ëëV W
cmd2
ìì 
.
ìì 
ExecuteNonQuery
ìì ,
(
ìì, -
)
ìì- .
;
ìì. /
cmd2
îî 
.
îî 
CommandText
îî (
=
îî) *'
SQL_CREATE_FILE_MONITORED
îî+ D
;
îîD E
cmd2
ïï 
.
ïï 
ExecuteNonQuery
ïï ,
(
ïï, -
)
ïï- .
;
ïï. /
cmd2
ññ 
.
ññ 
CommandText
ññ (
=
ññ) *+
SQL_CREATE_PERSISTED_SETTINGS
ññ+ H
;
ññH I
cmd2
òò 
.
òò 
ExecuteNonQuery
òò ,
(
òò, -
)
òò- .
;
òò. /
SetSettings
ôô #
(
ôô# $
new
ôô$ '
Settings
ôô( 0
(
ôô0 1
)
ôô1 2
{
õõ 
SchemaVersion
öö )
=
öö* +
SCHEMA_VERSION
öö, :
,
öö: ;
ShardingFactor
÷÷ *
=
÷÷+ ,

dbSettings
÷÷- 7
.
÷÷7 8
ShardingFactor
÷÷8 F
,
÷÷F G
}
øø 
)
øø 
;
øø 
Connections
úú #
.
úú# $

AsParallel
úú$ .
(
úú. /
)
úú/ 0
.
úú0 1
ForAll
úú1 7
(
úú7 8
cxn
úú8 ;
=>
úú< >
{
ûû 
using
üü !
(
üü" #
var
üü# &
innerCmd
üü' /
=
üü0 1
new
üü2 5
SQLiteCommand
üü6 C
(
üüC D(
SQL_CREATE_COLLECT_RESULTS
üüD ^
,
üü^ _
cxn
üü` c
.
üüc d

Connection
üüd n
,
üün o
cxn
üüp s
.
üüs t
Transaction
üüt 
)üü 
)üü 
{
ýý 
innerCmd
þþ  (
.
þþ( )
ExecuteNonQuery
þþ) 8
(
þþ8 9
)
þþ9 :
;
þþ: ;
innerCmd
  (
.
( )
CommandText
) 4
=
5 6-
SQL_CREATE_COLLECT_RUN_ID_INDEX
7 V
;
V W
innerCmd
  (
.
( )
ExecuteNonQuery
) 8
(
8 9
)
9 :
;
: ;
innerCmd
  (
.
( )
CommandText
) 4
=
5 6@
2SQL_CREATE_COLLECT_RUN_KEY_IDENTITY_COMBINED_INDEX
7 i
;
i j
innerCmd
  (
.
( )
ExecuteNonQuery
) 8
(
8 9
)
9 :
;
: ;
innerCmd
  (
.
( )
CommandText
) 4
=
5 66
(SQL_CREATE_COLLECT_RUN_ID_IDENTITY_INDEX
7 _
;
_ `
innerCmd
  (
.
( )
ExecuteNonQuery
) 8
(
8 9
)
9 :
;
: ;
}
 
}
 
)
 
;
 
}
 
catch
 
(
 
SQLiteException
 *
e
+ ,
)
, -
{
 
Log
 
.
 
Debug
 !
(
! "
e
" #
,
# $
$str
% G
)
G H
;
H I
Environment
 #
.
# $
Exit
$ (
(
( )
(
) *
int
* -
)
- .
	ASA_ERROR
. 7
.
7 8'
FAILED_TO_CREATE_DATABASE
8 Q
)
Q R
;
R S
}
 
finally
 
{
 
Commit
 
(
 
)
  
;
  !
}
 
}
 
return
 
true
 
;
 
}
 
return
 
false
 
;
 
}
 	
public
 
static
 
void
 
TrimToLatest
 '
(
' (
)
( )
{
 	
if
 
(
 
MainConnection
 
!=
 !
null
" &
)
& '
{
 
List
 
<
 
string
 
>
 
Runs
 !
=
" #
new
$ '
List
( ,
<
, -
string
- 3
>
3 4
(
4 5
)
5 6
;
6 7
using
   
var
   
cmd
   
=
   
new
    #
SQLiteCommand
  $ 1
(
  1 2
GET_RUNS
  2 :
,
  : ;
MainConnection
  < J
.
  J K

Connection
  K U
,
  U V
MainConnection
  W e
.
  e f
Transaction
  f q
)
  q r
;
  r s
using
¡¡ 
(
¡¡ 
var
¡¡ 
reader
¡¡ !
=
¡¡" #
cmd
¡¡$ '
.
¡¡' (
ExecuteReader
¡¡( 5
(
¡¡5 6
)
¡¡6 7
)
¡¡7 8
{
¢¢ 
reader
¤¤ 
.
¤¤ 
Read
¤¤ 
(
¤¤  
)
¤¤  !
;
¤¤! "
while
¦¦ 
(
¦¦ 
reader
¦¦ !
.
¦¦! "
Read
¦¦" &
(
¦¦& '
)
¦¦' (
)
¦¦( )
{
§§ 
	DeleteRun
¨¨ !
(
¨¨! "
(
¨¨" #
string
¨¨# )
)
¨¨) *
reader
¨¨* 0
[
¨¨0 1
$str
¨¨1 9
]
¨¨9 :
)
¨¨: ;
;
¨¨; <
}
©© 
}
ªª 
}
«« 
else
¬¬ 
{
­­ 
Log
®® 
.
®® 
Debug
®® 
(
®® 
$str
®® C
)
®®C D
;
®®D E
}
¯¯ 
}
°° 	
public
²² 
static
²² 
void
²² 
UpdateCompareRun
²² +
(
²²+ ,
string
²², 2

firstRunId
²²3 =
,
²²= >
string
²²? E
secondRunId
²²F Q
,
²²Q R

RUN_STATUS
²²S ]
	runStatus
²²^ g
)
²²g h
{
³³ 	
_
´´ 
=
´´ 
MainConnection
´´ 
??
´´ !
throw
´´" '
new
´´( +$
NullReferenceException
´´, B
(
´´B C
Strings
´´C J
.
´´J K
Get
´´K N
(
´´N O
$str
´´O _
)
´´_ `
)
´´` a
;
´´a b
using
µµ 
(
µµ 
var
µµ 
cmd
µµ 
=
µµ 
new
µµ  
SQLiteCommand
µµ! .
(
µµ. /(
UPDATE_RUN_IN_RESULT_TABLE
µµ/ I
,
µµI J
MainConnection
µµK Y
.
µµY Z

Connection
µµZ d
,
µµd e
MainConnection
µµf t
.
µµt u
Transactionµµu 
)µµ 
)µµ 
{
¶¶ 
cmd
·· 
.
·· 

Parameters
·· 
.
·· 
AddWithValue
·· +
(
··+ ,
$str
··, :
,
··: ;

firstRunId
··< F
)
··F G
;
··G H
cmd
¸¸ 
.
¸¸ 

Parameters
¸¸ 
.
¸¸ 
AddWithValue
¸¸ +
(
¸¸+ ,
$str
¸¸, =
,
¸¸= >
secondRunId
¸¸? J
)
¸¸J K
;
¸¸K L
cmd
¹¹ 
.
¹¹ 

Parameters
¹¹ 
.
¹¹ 
AddWithValue
¹¹ +
(
¹¹+ ,
$str
¹¹, 5
,
¹¹5 6
	runStatus
¹¹7 @
)
¹¹@ A
;
¹¹A B
cmd
ºº 
.
ºº 
ExecuteNonQuery
ºº #
(
ºº# $
)
ºº$ %
;
ºº% &
}
»» 
}
¼¼ 	
public
¾¾ 
static
¾¾ 
void
¾¾ 
Vacuum
¾¾ !
(
¾¾! "
)
¾¾" #
{
¿¿ 	
Connections
ÀÀ 
.
ÀÀ 

AsParallel
ÀÀ "
(
ÀÀ" #
)
ÀÀ# $
.
ÀÀ$ %
ForAll
ÀÀ% +
(
ÀÀ+ ,
cxn
ÀÀ, /
=>
ÀÀ0 2
{
ÁÁ 
using
ÂÂ 
var
ÂÂ 
	inner_cmd
ÂÂ #
=
ÂÂ$ %
new
ÂÂ& )
SQLiteCommand
ÂÂ* 7
(
ÂÂ7 8

SQL_VACUUM
ÂÂ8 B
,
ÂÂB C
cxn
ÂÂD G
.
ÂÂG H

Connection
ÂÂH R
,
ÂÂR S
cxn
ÂÂT W
.
ÂÂW X
Transaction
ÂÂX c
)
ÂÂc d
;
ÂÂd e
	inner_cmd
ÃÃ 
.
ÃÃ 
ExecuteNonQuery
ÃÃ )
(
ÃÃ) *
)
ÃÃ* +
;
ÃÃ+ ,
}
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
public
ÇÇ 
static
ÇÇ 
void
ÇÇ 
Write
ÇÇ  
(
ÇÇ  !
CollectObject
ÇÇ! .
?
ÇÇ. /
colObj
ÇÇ0 6
,
ÇÇ6 7
string
ÇÇ8 >
?
ÇÇ> ?
runId
ÇÇ@ E
)
ÇÇE F
{
ÈÈ 	
if
ÉÉ 
(
ÉÉ 
colObj
ÉÉ 
!=
ÉÉ 
null
ÉÉ 
&&
ÉÉ !
runId
ÉÉ" '
!=
ÉÉ( *
null
ÉÉ+ /
)
ÉÉ/ 0
{
ÊÊ 
var
ËË 
objIn
ËË 
=
ËË 
new
ËË 
WriteObject
ËË  +
(
ËË+ ,
colObj
ËË, 2
,
ËË2 3
runId
ËË4 9
)
ËË9 :
;
ËË: ;
Connections
ÌÌ 
[
ÌÌ 
ModuloString
ÌÌ (
(
ÌÌ( )
objIn
ÌÌ) .
.
ÌÌ. /
Identity
ÌÌ/ 7
,
ÌÌ7 8
shardingFactor
ÌÌ9 G
:
ÌÌG H

dbSettings
ÌÌI S
.
ÌÌS T
ShardingFactor
ÌÌT b
)
ÌÌb c
]
ÌÌc d
.
ÌÌd e

WriteQueue
ÌÌe o
.
ÌÌo p
Enqueue
ÌÌp w
(
ÌÌw x
objIn
ÌÌx }
)
ÌÌ} ~
;
ÌÌ~ 
}
ÍÍ 
}
ÎÎ 	
public
ÐÐ 
static
ÐÐ 
void
ÐÐ 
WriteFileMonitor
ÐÐ +
(
ÐÐ+ ,
FileMonitorObject
ÐÐ, =
fmo
ÐÐ> A
,
ÐÐA B
string
ÐÐC I
RunId
ÐÐJ O
)
ÐÐO P
{
ÑÑ 	
if
ÒÒ 
(
ÒÒ 
fmo
ÒÒ 
==
ÒÒ 
null
ÒÒ 
)
ÒÒ 
{
ÓÓ 
return
ÔÔ 
;
ÔÔ 
}
ÕÕ 
_
ÖÖ 
=
ÖÖ 
MainConnection
ÖÖ 
??
ÖÖ !
throw
ÖÖ" '
new
ÖÖ( +$
NullReferenceException
ÖÖ, B
(
ÖÖB C
Strings
ÖÖC J
.
ÖÖJ K
Get
ÖÖK N
(
ÖÖN O
$str
ÖÖO _
)
ÖÖ_ `
)
ÖÖ` a
;
ÖÖa b
using
×× 
var
×× 
cmd
×× 
=
×× 
new
×× 
SQLiteCommand
××  -
(
××- .

SQL_INSERT
××. 8
,
××8 9
MainConnection
××: H
.
××H I

Connection
××I S
,
××S T
MainConnection
××U c
.
××c d
Transaction
××d o
)
××o p
;
××p q
cmd
ØØ 
.
ØØ 

Parameters
ØØ 
.
ØØ 
AddWithValue
ØØ '
(
ØØ' (
$str
ØØ( 1
,
ØØ1 2
RunId
ØØ3 8
)
ØØ8 9
;
ØØ9 :
cmd
ÙÙ 
.
ÙÙ 

Parameters
ÙÙ 
.
ÙÙ 
AddWithValue
ÙÙ '
(
ÙÙ' (
$str
ÙÙ( /
,
ÙÙ/ 0
fmo
ÙÙ1 4
.
ÙÙ4 5
Path
ÙÙ5 9
)
ÙÙ9 :
;
ÙÙ: ;
cmd
ÚÚ 
.
ÚÚ 

Parameters
ÚÚ 
.
ÚÚ 
AddWithValue
ÚÚ '
(
ÚÚ' (
$str
ÚÚ( 4
,
ÚÚ4 5
fmo
ÚÚ6 9
.
ÚÚ9 :
	Timestamp
ÚÚ: C
)
ÚÚC D
;
ÚÚD E
cmd
ÛÛ 
.
ÛÛ 

Parameters
ÛÛ 
.
ÛÛ 
AddWithValue
ÛÛ '
(
ÛÛ' (
$str
ÛÛ( 5
,
ÛÛ5 6
JsonConvert
ÛÛ7 B
.
ÛÛB C
SerializeObject
ÛÛC R
(
ÛÛR S
fmo
ÛÛS V
)
ÛÛV W
)
ÛÛW X
;
ÛÛX Y
cmd
ÝÝ 
.
ÝÝ 
ExecuteNonQuery
ÝÝ 
(
ÝÝ  
)
ÝÝ  !
;
ÝÝ! "
}
ÞÞ 	
private
àà 
const
àà 
string
àà $
GET_COMPARISON_RESULTS
àà 3
=
àà4 5
$stràà6 ¤
;àà¤ ¥
private
áá 
const
áá 
string
áá *
GET_COMPARISON_RESULTS_LIMIT
áá 9
=
áá: ;
$stráá< ¾
;áá¾ ¿
private
ââ 
const
ââ 
string
ââ !
GET_MONITOR_RESULTS
ââ 0
=
ââ1 2
$strââ3 
;ââ 
private
åå 
const
åå 
string
åå 
GET_RESULT_COUNT
åå -
=
åå. /
$stråå0 
;åå 
private
èè 
const
èè 
string
èè (
GET_RESULT_COUNT_MONITORED
èè 7
=
èè8 9
$str
èè: |
;
èè| }
private
êê 
const
êê 
string
êê 
GET_RUNS
êê %
=
êê& '
$str
êê( Z
;
êêZ [
private
ëë 
const
ëë 
string
ëë $
GET_SERIALIZED_RESULTS
ëë 3
=
ëë4 5
$strëë6 
;ëë 
private
ìì 
const
ìì 
string
ìì .
 INSERT_RUN_INTO_RESULT_TABLE_SQL
ìì =
=
ìì> ?
$strìì@ ¬
;ìì¬ ­
private
íí 
const
íí 
int
íí 
SCHEMA_VERSION
íí (
=
íí) *
$num
íí+ ,
;
íí, -
private
îî 
const
îî 
string
îî :
,SQL_CHECK_IF_COMPARISON_PREVIOUSLY_COMPLETED
îî I
=
îîJ K
$strîîL ¥
;îî¥ ¦
private
ïï 
const
ïï 
string
ïï (
SQL_CREATE_COLLECT_RESULTS
ïï 7
=
ïï8 9
$strïï: ¬
;ïï¬ ­
private
ðð 
const
ðð 
string
ðð 6
(SQL_CREATE_COLLECT_RUN_ID_IDENTITY_INDEX
ðð E
=
ððF G
$strððH £
;ðð£ ¤
private
ññ 
const
ññ 
string
ññ -
SQL_CREATE_COLLECT_RUN_ID_INDEX
ññ <
=
ññ= >
$strññ? 
;ññ 
private
òò 
const
òò 
string
òò @
2SQL_CREATE_COLLECT_RUN_KEY_IDENTITY_COMBINED_INDEX
òò O
=
òòP Q
$stròòR Â
;òòÂ Ã
private
óó 
const
óó 
string
óó '
SQL_CREATE_FILE_MONITORED
óó 6
=
óó7 8
$stróó9 
;óó 
private
ôô 
const
ôô 
string
ôô 0
"SQL_CREATE_FINDINGS_IDENTITY_INDEX
ôô ?
=
ôô@ A
$strôôB 
;ôô 
private
õõ 
const
õõ 
string
õõ -
SQL_CREATE_FINDINGS_LEVEL_INDEX
õõ <
=
õõ= >
$str
õõ? 
;õõ 
private
öö 
const
öö 
string
öö 9
+SQL_CREATE_FINDINGS_LEVEL_RESULT_TYPE_INDEX
öö H
=
ööI J
$strööK ¤
;öö¤ ¥
private
÷÷ 
const
÷÷ 
string
÷÷ 3
%SQL_CREATE_FINDINGS_RESULT_TYPE_INDEX
÷÷ B
=
÷÷C D
$str÷÷E 
;÷÷ 
private
øø 
const
øø 
string
øø )
SQL_CREATE_FINDINGS_RESULTS
øø 8
=
øø9 :
$strøø; Ä
;øøÄ Å
private
ùù 
const
ùù 
string
ùù +
SQL_CREATE_PERSISTED_SETTINGS
ùù :
=
ùù; <
$strùù= 
;ùù 
private
úú 
const
úú 
string
úú  
SQL_CREATE_RESULTS
úú /
=
úú0 1
$strúú2 
;úú 
private
ûû 
const
ûû 
string
ûû 
SQL_CREATE_RUNS
ûû ,
=
ûû- .
$str
ûû/ 
;ûû 
private
üü 
const
üü 
string
üü 
SQL_DELETE_RUN
üü +
=
üü, -
$str
üü. X
;
üüX Y
private
ýý 
const
ýý 
string
ýý *
SQL_GET_COLLECT_MISSING_IN_B
ýý 9
=
ýý: ;
$strýý< Ì
;ýýÌ Í
private
ÿÿ 
const
ÿÿ 
string
ÿÿ &
SQL_GET_COLLECT_MODIFIED
ÿÿ 5
=
ÿÿ6 7
$strÿÿ8 
+ÿÿ 
$str< 
+ 
$str
@ ~
+ 
$str
D |
+
} ~
$strH Ý
;Ý Þ
private
 
const
 
string
 !
SQL_GET_NUM_RESULTS
 0
=
1 2
$str3 
; 
private
 
const
 
string
 (
SQL_GET_PERSISTED_SETTINGS
 7
=
8 9
$str
: r
;
r s
private
 
const
 
string
 )
SQL_GET_PLATFORM_FROM_RUNID
 8
=
9 :
$str
; m
;
m n
private
 
const
 
string
 )
SQL_GET_RESULT_TYPES_COUNTS
 8
=
9 :
$str; 
; 
private
 
const
 
string
 '
SQL_GET_RESULTS_BY_RUN_ID
 6
=
7 8
$str
9 g
;
g h
private
 
const
 
string
 
SQL_GET_RUN
 (
=
) *
$str
+ V
;
V W
private
 
const
 
string
 

SQL_INSERT
 '
=
( )
$str* Ï
;Ï Ð
private
 
const
 
string
 (
SQL_INSERT_FINDINGS_RESULT
 7
=
8 9
$str: í
;í î
private
 
const
 
string
 
SQL_INSERT_RUN
 +
=
, -
$str. 
; 
private
 
const
 
string
  
SQL_QUERY_ANALYZED
 /
=
0 1
$str
2 `
;
` a
private
 
const
 
string
 &
SQL_SELECT_LATEST_N_RUNS
 5
=
6 7
$str8 
; 
private
 
const
 
string
 
SQL_TRUNCATE_RUN
 -
=
. /
$str
0 W
;
W X
private
 
const
 
string
 +
SQL_UPSERT_PERSISTED_SETTINGS
 :
=
; <
$str= 
; 
private
 
const
 
string
 

SQL_VACUUM
 '
=
( )
$str
* 2
;
2 3
private
 
const
 
string
 (
UPDATE_RUN_IN_RESULT_TABLE
 7
=
8 9
$str: §
;§ ¨
private
 
static
 

DBSettings
 !

dbSettings
" ,
=
- .
new
/ 2

DBSettings
3 =
(
= >
)
> ?
;
? @
private
 
static
 -
SystemSQLiteSqlConnectionHolder
 6#
GenerateSqlConnection
7 L
(
L M
int
M P
i
Q R
)
R S
{
   	
if
¡¡ 
(
¡¡ 
i
¡¡ 
==
¡¡ 
$num
¡¡ 
)
¡¡ 
{
¢¢ 
return
££ 
new
££ -
SystemSQLiteSqlConnectionHolder
££ :
(
££: ;
SQLiteFilename
££; I
,
££I J

dbSettings
££K U
)
££U V
;
££V W
}
¤¤ 
else
¥¥ 
{
¦¦ 
return
§§ 
new
§§ -
SystemSQLiteSqlConnectionHolder
§§ :
(
§§: ;
$"
§§; =
{
§§= >
SQLiteFilename
§§> L
}
§§L M
$str
§§M N
{
§§N O
i
§§O P
}
§§P Q
"
§§Q R
,
§§R S

dbSettings
§§T ^
)
§§^ _
;
§§_ `
}
¨¨ 
}
©© 	
private
«« 
static
«« 
Settings
«« 
?
««  
GetSettings
««! ,
(
««, -
)
««- .
{
¬¬ 	
try
­­ 
{
®® 
using
¯¯ 
var
¯¯ 
getSettings
¯¯ %
=
¯¯& '
new
¯¯( +
SQLiteCommand
¯¯, 9
(
¯¯9 :(
SQL_GET_PERSISTED_SETTINGS
¯¯: T
,
¯¯T U
MainConnection
¯¯V d
?
¯¯d e
.
¯¯e f

Connection
¯¯f p
,
¯¯p q
MainConnection¯¯r 
?¯¯ 
.¯¯ 
Transaction¯¯ 
)¯¯ 
;¯¯ 
getSettings
°° 
.
°° 

Parameters
°° &
.
°°& '
AddWithValue
°°' 3
(
°°3 4
$str
°°4 9
,
°°9 :
$str
°°; F
)
°°F G
;
°°G H
using
±± 
var
±± 
reader
±±  
=
±±! "
getSettings
±±# .
.
±±. /
ExecuteReader
±±/ <
(
±±< =
)
±±= >
;
±±> ?
if
´´ 
(
´´ 
reader
´´ 
.
´´ 
HasRows
´´ "
)
´´" #
{
µµ 
while
¶¶ 
(
¶¶ 
reader
¶¶ !
.
¶¶! "
Read
¶¶" &
(
¶¶& '
)
¶¶' (
)
¶¶( )
{
·· 
return
¸¸ 
JsonConvert
¸¸ *
.
¸¸* +
DeserializeObject
¸¸+ <
<
¸¸< =
Settings
¸¸= E
>
¸¸E F
(
¸¸F G
(
¸¸G H
string
¸¸H N
)
¸¸N O
reader
¸¸O U
[
¸¸U V
$str
¸¸V b
]
¸¸b c
)
¸¸c d
;
¸¸d e
}
¹¹ 
}
ºº 
}
»» 
catch
¼¼ 
(
¼¼ 
	Exception
¼¼ 
e
¼¼ 
)
¼¼ 
when
¼¼  $
(
¼¼% &
e
¼¼& '
is
¼¼( *
SQLiteException
¼¼+ :
||
¼¼; =
e
¼¼> ?
is
¼¼@ B#
ArgumentNullException
¼¼C X
||
¼¼Y [
e
¼¼\ ]
is
¼¼^ `$
NullReferenceException
¼¼a w
)
¼¼w x
{
½½ 
}
¿¿ 
return
ÁÁ 
null
ÁÁ 
;
ÁÁ 
}
ÂÂ 	
private
ÄÄ 
static
ÄÄ 
void
ÄÄ 
SetSettings
ÄÄ '
(
ÄÄ' (
Settings
ÄÄ( 0
settings
ÄÄ1 9
)
ÄÄ9 :
{
ÅÅ 	
try
ÆÆ 
{
ÇÇ 
using
ÈÈ 
var
ÈÈ 
cmd
ÈÈ 
=
ÈÈ 
new
ÈÈ  #
SQLiteCommand
ÈÈ$ 1
(
ÈÈ1 2+
SQL_UPSERT_PERSISTED_SETTINGS
ÈÈ2 O
,
ÈÈO P
MainConnection
ÈÈQ _
?
ÈÈ_ `
.
ÈÈ` a

Connection
ÈÈa k
,
ÈÈk l
MainConnection
ÈÈm {
?
ÈÈ{ |
.
ÈÈ| }
TransactionÈÈ} 
)ÈÈ 
;ÈÈ 
cmd
ÉÉ 
.
ÉÉ 

Parameters
ÉÉ 
.
ÉÉ 
AddWithValue
ÉÉ +
(
ÉÉ+ ,
$str
ÉÉ, 9
,
ÉÉ9 :
JsonConvert
ÉÉ; F
.
ÉÉF G
SerializeObject
ÉÉG V
(
ÉÉV W
settings
ÉÉW _
)
ÉÉ_ `
)
ÉÉ` a
;
ÉÉa b
cmd
ÊÊ 
.
ÊÊ 

Parameters
ÊÊ 
.
ÊÊ 
AddWithValue
ÊÊ +
(
ÊÊ+ ,
$str
ÊÊ, 1
,
ÊÊ1 2
$str
ÊÊ3 >
)
ÊÊ> ?
;
ÊÊ? @
cmd
ËË 
.
ËË 
ExecuteNonQuery
ËË #
(
ËË# $
)
ËË$ %
;
ËË% &
}
ÌÌ 
catch
ÍÍ 
(
ÍÍ 
SQLiteException
ÍÍ "
)
ÍÍ" #
{
ÍÍ$ %
}
ÍÍ& '
catch
ÏÏ 
(
ÏÏ $
NullReferenceException
ÏÏ )
)
ÏÏ) *
{
ÏÏ+ ,
}
ÏÏ- .
}
ÐÐ 	
}
ÑÑ 
}ÒÒ ê>
QD:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\SystemSqliteInsertTests.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .

Benchmarks. 8
{ 
[ %
MarkdownExporterAttribute 
. 
GitHub %
]% &
[		 !
JsonExporterAttribute		 
.		 
Full		 
]		  
public

 

class

 6
*SystemSqliteInsertTestsWithoutTransactions

 ;
:

< = 
AsaDatabaseBenchmark

> R
{ 
public 6
*SystemSqliteInsertTestsWithoutTransactions 9
(9 :
): ;
{ 	
Logger 
. 
Setup 
( 
true 
, 
true #
)# $
;$ %
Strings 
. 
Setup 
( 
) 
; 
} 	
[ 	
Params	 
( 
$str 
) 
] 
public 
string 
JournalMode !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Params	 
( 
$str 
) 
] 
public 
string 
LockingMode !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Params	 
( 
$num 
) 
] 
public 
int 
N 
{ 
get 
; 
set 
;  
}! "
[## 	
Params##	 
(## 
$num## 
)## 
]## 
public$$ 
int$$ 
ObjectPadding$$  
{$$! "
get$$# &
;$$& '
set$$( +
;$$+ ,
}$$- .
[&& 	
Params&&	 
(&& 
$num&& 
)&& 
]&& 
public'' 
int'' 
PageSize'' 
{'' 
get'' !
;''! "
set''# &
;''& '
}''( )
[** 	
Params**	 
(** 
$num** 
,** 
$num** 
,** 
$num** 
,** 
$num** 
,** 
$num** 
,** 
$num**  
,**  !
$num**" #
,**# $
$num**% &
,**& '
$num**( )
,**) *
$num**+ -
,**- .
$num**/ 1
,**1 2
$num**3 5
)**5 6
]**6 7
public++ 
int++ 
Shards++ 
{++ 
get++ 
;++  
set++! $
;++$ %
}++& '
[// 	
Params//	 
(// 
$num// 
)// 
]// 
public00 
int00 
StartingSize00 
{00  !
get00" %
;00% &
set00' *
;00* +
}00, -
[22 	
Params22	 
(22 
$str22 
)22 
]22 
public33 
string33 
Synchronous33 !
{33" #
get33$ '
;33' (
set33) ,
;33, -
}33. /
public55 
static55 
void55 
Insert_X_Objects55 +
(55+ ,
int55, /
X550 1
,551 2
int553 6
ObjectPadding557 D
=55E F
$num55G H
,55H I
string55J P
runName55Q X
=55Y Z
$str55[ m
)55m n
{66 	
Parallel77 
.77 
For77 
(77 
$num77 
,77 
X77 
,77 
i77  
=>77! #
{88 
var99 
obj99 
=99 
GetRandomObject99 )
(99) *
ObjectPadding99* 7
)997 8
;998 9'
SystemSQLiteDatabaseManager:: +
.::+ ,
Write::, 1
(::1 2
obj::2 5
,::5 6
runName::7 >
)::> ?
;::? @
BagOfObjects;; 
.;; 
Add;;  
(;;  !
obj;;! $
);;$ %
;;;% &
}<< 
)<< 
;<< 
while>> 
(>> '
SystemSQLiteDatabaseManager>> .
.>>. /
HasElements>>/ :
(>>: ;
)>>; <
)>>< =
{?? 
Thread@@ 
.@@ 
Sleep@@ 
(@@ 
$num@@ 
)@@ 
;@@  
}AA 
}BB 	
[DD 	
GlobalCleanupDD	 
]DD 
publicEE 
voidEE 
GlobalCleanupEE !
(EE! "
)EE" #
{FF 	
SetupGG 
(GG 
)GG 
;GG '
SystemSQLiteDatabaseManagerHH '
.HH' (
DestroyHH( /
(HH/ 0
)HH0 1
;HH1 2
}II 	
[KK 	
GlobalSetupKK	 
]KK 
publicLL 
voidLL 
GlobalSetupLL 
(LL  
)LL  !
{MM 	
PopulateDatabasesNN 
(NN 
)NN 
;NN  
}OO 	
[QQ 	
	BenchmarkQQ	 
]QQ 
publicRR 
voidRR 
Insert_N_ObjectsRR $
(RR$ %
)RR% &
=>RR' )
Insert_X_ObjectsRR* :
(RR: ;
NRR; <
,RR< =
ObjectPaddingRR> K
,RRK L
$strRRM _
)RR_ `
;RR` a
[TT 	
IterationCleanupTT	 
]TT 
publicUU 
voidUU 
IterationCleanupUU $
(UU$ %
)UU% &
{VV 	'
SystemSQLiteDatabaseManagerWW '
.WW' (
CloseDatabaseWW( 5
(WW5 6
)WW6 7
;WW7 8
}XX 	
[ZZ 	
IterationSetupZZ	 
]ZZ 
public[[ 
void[[ 
IterationSetup[[ "
([[" #
)[[# $
{\\ 	
Setup]] 
(]] 
)]] 
;]] '
SystemSQLiteDatabaseManager^^ '
.^^' (
BeginTransaction^^( 8
(^^8 9
)^^9 :
;^^: ;
}__ 	
publicaa 
voidaa 
PopulateDatabasesaa %
(aa% &
)aa& '
{bb 	
Setupcc 
(cc 
)cc 
;cc '
SystemSQLiteDatabaseManagerdd '
.dd' (
BeginTransactiondd( 8
(dd8 9
)dd9 :
;dd: ;
Insert_X_Objectsff 
(ff 
StartingSizeff )
,ff) *
ObjectPaddingff+ 8
,ff8 9
$strff: L
)ffL M
;ffM N'
SystemSQLiteDatabaseManagerhh '
.hh' (
Commithh( .
(hh. /
)hh/ 0
;hh0 1'
SystemSQLiteDatabaseManagerii '
.ii' (
CloseDatabaseii( 5
(ii5 6
)ii6 7
;ii7 8
}jj 	
privatell 
voidll 
Setupll 
(ll 
)ll 
{mm 	'
SystemSQLiteDatabaseManagernn '
.nn' (
Setupnn( -
(nn- .
filenamenn. 6
:nn6 7
$"nn8 :
$strnn: G
{nnG H
ShardsnnH N
}nnN O
$strnnO V
"nnV W
,nnW X
newnnY \

DBSettingsnn] g
(nng h
)nnh i
{oo 
JournalModepp 
=pp 
JournalModepp )
,pp) *
LockingModeqq 
=qq 
LockingModeqq )
,qq) *
PageSizerr 
=rr 
PageSizerr #
,rr# $
ShardingFactorss 
=ss  
Shardsss! '
,ss' (
Synchronoustt 
=tt 
Synchronoustt )
}uu 
)uu 
;uu 
}vv 	
}ww 
}xx Î\
YD:\sonarcube_projects\AttackSurfaceAnalyzer\Benchmarks\SystemSqliteSqlConnectionHolder.cs
	namespace 	
	Microsoft
 
. 
CST 
. !
AttackSurfaceAnalyzer -
.- .
Objects. 5
{ 
public 

class +
SystemSQLiteSqlConnectionHolder 0
{ 
public +
SystemSQLiteSqlConnectionHolder .
(. /
string/ 5
databaseFilename6 F
,F G

DBSettingsH R
?R S

dBSettingsT ^
=_ `
defaulta h
,h i
intj m
tableShardsn y
=z {
$num| }
)} ~
{ 	
	_settings 
= 

dBSettings "
==# %
null& *
?+ ,
new- 0

DBSettings1 ;
(; <
)< =
:> ?

dBSettings@ J
;J K
Source 
= 
databaseFilename %
;% &

Connection 
= 
new 
SQLiteConnection -
(- .
$". 0
$str0 <
{< =
Source= C
}C D
$strD P
{P Q
	_settingsQ Z
.Z [
PageSize[ c
}c d
$strd s
{s t
	_settingst }
.} ~
JournalMode	~ 
}
 
$str
 
{
 
	_settings
 ¢
.
¢ £
Synchronous
£ ®
}
® ¯
$str
¯ °
"
° ±
)
± ²
;
² ³

Connection 
. 
Open 
( 
) 
; 
var 
command 
= 
string  
.  !
Format! '
(' (
CultureInfo( 3
.3 4
InvariantCulture4 D
,D E
PRAGMASF M
,M N
	_settingsO X
.X Y
LockingModeY d
)d e
;e f
using 
var 
cmd 
= 
new 
SQLiteCommand  -
(- .
command. 5
,5 6

Connection7 A
)A B
;B C
cmd 
. 
ExecuteNonQuery 
(  
)  !
;! "
TableShards 
= 
tableShards %
;% &
StartWriter 
( 
) 
; 

FlushCount 
= 
	_settings "
." #

FlushCount# -
;- .
} 	
public!! 
SQLiteConnection!! 

Connection!!  *
{!!+ ,
get!!- 0
;!!0 1
set!!2 5
;!!5 6
}!!7 8
public"" 
int"" 

FlushCount"" 
{"" 
get""  #
;""# $
set""% (
;""( )
}""* +
="", -
-"". /
$num""/ 0
;""0 1
public## 
bool## 
KeepRunning## 
{##  !
get##" %
;##% &
set##' *
;##* +
}##, -
public$$ 
string$$ 
Source$$ 
{$$ 
get$$ "
;$$" #
set$$$ '
;$$' (
}$$) *
public%% 
int%% 
TableShards%% 
{%%  
get%%! $
;%%$ %
set%%& )
;%%) *
}%%+ ,
=%%- .
$num%%/ 0
;%%0 1
public&& 
SQLiteTransaction&&  
?&&  !
Transaction&&" -
{&&. /
get&&0 3
;&&3 4
set&&5 8
;&&8 9
}&&: ;
public'' 
ConcurrentQueue'' 
<'' 
WriteObject'' *
>''* +

WriteQueue'', 6
{''7 8
get''9 <
;''< =
private''> E
set''F I
;''I J
}''K L
=''M N
new''O R
ConcurrentQueue''S b
<''b c
WriteObject''c n
>''n o
(''o p
)''p q
;''q r
public)) 
void)) 
BeginTransaction)) $
())$ %
)))% &
{** 	
if++ 
(++ 
Transaction++ 
==++ 
null++ #
&&++$ &

Connection++' 1
!=++2 4
null++5 9
)++9 :
{,, 
Transaction-- 
=-- 

Connection-- (
.--( )
BeginTransaction--) 9
(--9 :
)--: ;
;--; <
}.. 
}// 	
public11 
void11 
Commit11 
(11 
)11 
{22 	
try33 
{44 
Transaction55 
?55 
.55 
Commit55 #
(55# $
)55$ %
;55% &
}66 
catch77 
(77 
	Exception77 
e77 
)77 
{88 
Log99 
.99 
Warning99 
(99 
e99 
,99 
$"99 !
$str99! :
{99: ;
Source99; A
}99A B
$str99B D
{99D E
e99E F
.99F G

StackTrace99G Q
}99Q R
"99R S
)99S T
;99T U
}:: 
finally;; 
{<< 
Transaction== 
=== 
null== "
;==" #
}>> 
}?? 	
publicAA 
voidAA 
DestroyAA 
(AA 
)AA 
{BB 	
ShutDownCC 
(CC 
)CC 
;CC 
tryDD 
{EE 
FileFF 
.FF 
DeleteFF 
(FF 
SourceFF "
)FF" #
;FF# $
}GG 
catchHH 
(HH 
	ExceptionHH 
eHH 
)HH 
{II 
LogJJ 
.JJ 
WarningJJ 
(JJ 
eJJ 
,JJ 
$"JJ !
$strJJ! >
{JJ> ?
SourceJJ? E
}JJE F
"JJF G
)JJG H
;JJH I
}KK 
}LL 	
publicNN 
voidNN 
KeepFlushQueueNN "
(NN" #
)NN# $
{OO 	
KeepRunningPP 
=PP 
truePP 
;PP 
whileQQ 
(QQ 
KeepRunningQQ 
)QQ 
{RR 
whileSS 
(SS 
!SS 

WriteQueueSS "
.SS" #
IsEmptySS# *
)SS* +
{TT 
ifUU 
(UU 

FlushCountUU "
>UU# $
$numUU% &
)UU& '
{VV 
ifWW 
(WW 
RecordCountWW '
%WW( )

FlushCountWW* 4
==WW5 7

FlushCountWW8 B
-WWC D
$numWWE F
)WWF G
{XX 
CommitYY "
(YY" #
)YY# $
;YY$ %
BeginTransactionZZ ,
(ZZ, -
)ZZ- .
;ZZ. /
}[[ 
}\\ 
	WriteNext]] 
(]] 
)]] 
;]]  
}^^ 
Thread__ 
.__ 
Sleep__ 
(__ 
$num__ 
)__ 
;__  
}`` 
}aa 	
publiccc 
voidcc 
	WriteNextcc 
(cc 
)cc 
{dd 	
stringee %
SQL_INSERT_COLLECT_RESULTee ,
=ee- .
$str	ee/ º
;
eeº »
ifgg 
(gg 

WriteQueuegg 
.gg 

TryDequeuegg %
(gg% &
outgg& )
WriteObjectgg* 5
?gg5 6
objIngg7 <
)gg< =
)gg= >
{hh 
tryii 
{jj 
usingkk 
varkk 
cmdkk !
=kk" #
newkk$ '
SQLiteCommandkk( 5
(kk5 6%
SQL_INSERT_COLLECT_RESULTkk6 O
,kkO P

ConnectionkkQ [
,kk[ \
Transactionkk] h
)kkh i
;kki j
cmdll 
.ll 

Parametersll "
.ll" #
AddWithValuell# /
(ll/ 0
$strll0 9
,ll9 :
objInll; @
.ll@ A
RunIdllA F
)llF G
;llG H
cmdmm 
.mm 

Parametersmm "
.mm" #
AddWithValuemm# /
(mm/ 0
$strmm0 :
,mm: ;
objInmm< A
.mmA B
RowKeymmB H
)mmH I
;mmI J
cmdnn 
.nn 

Parametersnn "
.nn" #
AddWithValuenn# /
(nn/ 0
$strnn0 ;
,nn; <
objInnn= B
.nnB C
ColObjnnC I
?nnI J
.nnJ K
IdentitynnK S
)nnS T
;nnT U
cmdoo 
.oo 

Parametersoo "
.oo" #
AddWithValueoo# /
(oo/ 0
$stroo0 =
,oo= >
objInoo? D
.ooD E

SerializedooE O
)ooO P
;ooP Q
cmdpp 
.pp 

Parameterspp "
.pp" #
AddWithValuepp# /
(pp/ 0
$strpp0 >
,pp> ?
objInpp@ E
.ppE F
ColObjppF L
?ppL M
.ppM N

ResultTypeppN X
)ppX Y
;ppY Z
cmdqq 
.qq 
ExecuteNonQueryqq '
(qq' (
)qq( )
;qq) *
}rr 
catchss 
(ss 
SQLiteExceptionss &
ess' (
)ss( )
{tt 
Loguu 
.uu 
Debuguu 
(uu 
	exceptionuu '
:uu' (
euu) *
,uu* +
$"uu, .
$struu. <
{uu< =
objInuu= B
.uuB C
ColObjuuC I
?uuI J
.uuJ K
IdentityuuK S
}uuS T
$struuT a
"uua b
)uub c
;uuc d
}vv 
catchww 
(ww "
NullReferenceExceptionww -
)ww- .
{xx 
}yy 
}zz 
}{{ 	
internal}} 
void}} 
ShutDown}} 
(}} 
)}}  
{~~ 	
KeepRunning 
= 
false 
;  

Connection
 
.
 
Close
 
(
 
)
 
;
 

Connection
 
.
 
Dispose
 
(
 
)
  
;
  !
Transaction
 
=
 
null
 
;
 
}
 	
internal
 
void
 
StartWriter
 !
(
! "
)
" #
{
 	
(
 
(
 
Action
 
)
 
(
 
async
 
(
 
)
 
=>
 !
{
 
await
 
Task
 
.
 
Run
 
(
 
(
  
)
  !
=>
" $
KeepFlushQueue
% 3
(
3 4
)
4 5
)
5 6
.
6 7
ConfigureAwait
7 E
(
E F
false
F K
)
K L
;
L M
}
 
)
 
)
 
(
 
)
 
;
 
}
 	
private
 
const
 
string
 
PRAGMAS
 $
=
% &
$str
' [
;
[ \
private
 
readonly
 

DBSettings
 #
	_settings
$ -
;
- .
private
 
int
 
RecordCount
 
{
  !
get
" %
;
% &
set
' *
;
* +
}
, -
}
 
} 
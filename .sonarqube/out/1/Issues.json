{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.8.0.0",
        "fileVersion": "4.8.0-3.23524.11 (f43cd10b)",
        "semanticVersion": "4.8.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "Non-nullable field 'dbManager' must contain a non-null value when exiting constructor. Consider declaring the field as nullable.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/InsertTestsWithIntermittentTransactions.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 49
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/InsertTestsWithIntermittentTransactions.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/QueryTests.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 9,
                  "endLine": 87,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S125",
          "level": "warning",
          "message": "Remove this commented out code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/QueryTests.cs",
                "region": {
                  "startLine": 166,
                  "startColumn": 9,
                  "endLine": 166,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/AsaDatabaseBenchmark.cs",
                "region": {
                  "startLine": 7,
                  "startColumn": 18,
                  "endLine": 7,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3459",
          "level": "warning",
          "message": "Remove unassigned auto-property 'RecordCount', or set its value.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteSqlConnectionHolder.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 21,
                  "endLine": 143,
                  "endColumn": 32
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1144",
          "level": "warning",
          "message": "Remove the unused private set accessor in property 'RecordCount'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteSqlConnectionHolder.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 40,
                  "endLine": 143,
                  "endColumn": 43
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteSqlConnectionHolder.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 45,
                  "endLine": 34,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3604",
          "level": "warning",
          "message": "Remove the member initializer, all constructors set an initial value for the member.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteSqlConnectionHolder.cs",
                "region": {
                  "startLine": 37,
                  "startColumn": 46,
                  "endLine": 37,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1450",
          "level": "warning",
          "message": "Remove the field '_settings' and declare it as a local variable in the relevant methods.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteSqlConnectionHolder.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 37,
                  "endLine": 142,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1118",
          "level": "warning",
          "message": "Add a 'protected' constructor or the 'static' keyword to the class declaration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/Program.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 25
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2077",
          "level": "warning",
          "message": "Make sure using a dynamically formatted SQL query is safe here.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteSqlConnectionHolder.cs",
                "region": {
                  "startLine": 24,
                  "startColumn": 29,
                  "endLine": 24,
                  "endColumn": 67
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteSqlConnectionHolder.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 17,
                  "endLine": 23,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "SQL Query is dynamically formatted and assigned to command."
            }
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'IterationCleanup' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteInsertTests.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 21,
                  "endLine": 85,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'IterationCleanup' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/InsertTestsWithIntermittentTransactions.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 21,
                  "endLine": 87,
                  "endColumn": 37
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'summary'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/Program.cs",
                "region": {
                  "startLine": 9,
                  "startColumn": 17,
                  "endLine": 9,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2696",
          "level": "warning",
          "message": "Make the enclosing instance method 'static' or remove this set on the 'static' field.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/InsertTestsWithIntermittentTransactions.cs",
                "region": {
                  "startLine": 113,
                  "startColumn": 13,
                  "endLine": 113,
                  "endColumn": 24
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/InsertTestsWithIntermittentTransactions.cs",
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 49
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteSqlConnectionHolder.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 25,
                  "endLine": 87,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteSqlConnectionHolder.cs",
                "region": {
                  "startLine": 85,
                  "startColumn": 21,
                  "endLine": 85,
                  "endColumn": 23
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.NullReferenceException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 55,
                  "startColumn": 41,
                  "endLine": 55,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1186",
          "level": "warning",
          "message": "Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SetupTimeTest.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 21,
                  "endLine": 83,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteSqlConnectionHolder.cs",
                "region": {
                  "startLine": 120,
                  "startColumn": 17,
                  "endLine": 121,
                  "endColumn": 18
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA1822",
          "level": "note",
          "message": "Member 'IterationSetup' does not access instance data and can be marked as static",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SetupTimeTest.cs",
                "region": {
                  "startLine": 83,
                  "startColumn": 21,
                  "endLine": 83,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1751",
          "level": "warning",
          "message": "Refactor the containing loop to do more than one iteration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 94,
                  "startColumn": 29,
                  "endLine": 94,
                  "endColumn": 41
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/QueryTests.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 21,
                  "endLine": 137,
                  "endColumn": 23
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/QueryTests.cs",
                "region": {
                  "startLine": 135,
                  "startColumn": 17,
                  "endLine": 135,
                  "endColumn": 19
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.NullReferenceException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 174,
                  "startColumn": 41,
                  "endLine": 174,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.NullReferenceException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 41,
                  "endLine": 140,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.NullReferenceException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 336,
                  "startColumn": 41,
                  "endLine": 336,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S6605",
          "level": "warning",
          "message": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 546,
                  "startColumn": 32,
                  "endLine": 546,
                  "endColumn": 35
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1751",
          "level": "warning",
          "message": "Refactor the containing loop to do more than one iteration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 369,
                  "startColumn": 33,
                  "endLine": 369,
                  "endColumn": 120
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.NullReferenceException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 465,
                  "startColumn": 41,
                  "endLine": 465,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.NullReferenceException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 486,
                  "startColumn": 41,
                  "endLine": 486,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.NullReferenceException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 572,
                  "startColumn": 41,
                  "endLine": 572,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 635,
                  "startColumn": 21,
                  "endLine": 635,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 669,
                  "startColumn": 28,
                  "endLine": 669,
                  "endColumn": 33
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 671,
                  "startColumn": 49,
                  "endLine": 671,
                  "endColumn": 50
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 673,
                  "startColumn": 13,
                  "endLine": 673,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 675,
                  "startColumn": 17,
                  "endLine": 675,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 681,
                  "startColumn": 13,
                  "endLine": 681,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 686,
                  "startColumn": 13,
                  "endLine": 686,
                  "endColumn": 15
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 686,
                  "startColumn": 37,
                  "endLine": 686,
                  "endColumn": 39
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 693,
                  "startColumn": 17,
                  "endLine": 693,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 697,
                  "startColumn": 21,
                  "endLine": 697,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 703,
                  "startColumn": 21,
                  "endLine": 703,
                  "endColumn": 23
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 703,
                  "startColumn": 46,
                  "endLine": 703,
                  "endColumn": 48
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 710,
                  "startColumn": 17,
                  "endLine": 710,
                  "endColumn": 21
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 717,
                  "startColumn": 17,
                  "endLine": 717,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 723,
                  "startColumn": 17,
                  "endLine": 723,
                  "endColumn": 19
                }
              }
            },
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 779,
                  "startColumn": 21,
                  "endLine": 779,
                  "endColumn": 26
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1",
              "1": "+1",
              "10": "+1",
              "11": "+2 (incl 1 for nesting)",
              "12": "+2 (incl 1 for nesting)",
              "13": "+3 (incl 2 for nesting)",
              "2": "+2 (incl 1 for nesting)",
              "3": "+1",
              "4": "+1",
              "5": "+1",
              "6": "+2 (incl 1 for nesting)",
              "7": "+3 (incl 2 for nesting)",
              "8": "+3 (incl 2 for nesting)",
              "9": "+1"
            }
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'Runs'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 799,
                  "startColumn": 30,
                  "endLine": 799,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.NullReferenceException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 820,
                  "startColumn": 41,
                  "endLine": 820,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1066",
          "level": "warning",
          "message": "Merge this if statement with the enclosing one.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 675,
                  "startColumn": 17,
                  "endLine": 675,
                  "endColumn": 19
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 673,
                  "startColumn": 13,
                  "endLine": 673,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 973,
                  "startColumn": 37,
                  "endLine": 973,
                  "endColumn": 40
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S108",
          "level": "warning",
          "message": "Either remove or fill this block of code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 975,
                  "startColumn": 44,
                  "endLine": 975,
                  "endColumn": 47
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1751",
          "level": "warning",
          "message": "Refactor the containing loop to do more than one iteration.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 952,
                  "startColumn": 25,
                  "endLine": 952,
                  "endColumn": 102
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S112",
          "level": "warning",
          "message": "'System.NullReferenceException' should not be thrown by user code.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/sonarcube_projects/AttackSurfaceAnalyzer/Benchmarks/SystemSqliteDatabaseManager.cs",
                "region": {
                  "startLine": 854,
                  "startColumn": 41,
                  "endLine": 854,
                  "endColumn": 98
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CA1822": {
          "id": "CA1822",
          "shortDescription": "Mark members as static",
          "fullDescription": "Members that do not access instance data or call instance methods can be marked as static. After you mark the methods as static, the compiler will emit nonvirtual call sites to these members. This can give you a measurable performance gain for performance-sensitive code.",
          "defaultLevel": "note",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca1822",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true,
            "tags": [
              "PortedFromFxCop",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "Non-nullable field must contain a non-null value when exiting constructor. Consider declaring as nullable.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S1066": {
          "id": "S1066",
          "shortDescription": "Mergeable \"if\" statements should be combined",
          "fullDescription": "Nested code - blocks of code inside blocks of code - is eventually necessary, but increases complexity. This is why keeping the code as flat as possible, by avoiding unnecessary nesting, is considered a good practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1066",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S108": {
          "id": "S108",
          "shortDescription": "Nested blocks of code should not be left empty",
          "fullDescription": "An empty code block is confusing. It will require some effort from maintainers to determine if it is intentional or indicates the implementation is incomplete.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-108",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1118": {
          "id": "S1118",
          "shortDescription": "Utility classes should not have public constructors",
          "fullDescription": "Whenever there are portions of code that are duplicated and do not depend on the state of their container class, they can be centralized inside a \"utility class\". A utility class is a class that only has static members, hence it should not be instantiated.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1118",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S112": {
          "id": "S112",
          "shortDescription": "General or reserved exceptions should never be thrown",
          "fullDescription": "This rule raises an issue when a general or reserved exception is thrown.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-112",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1144": {
          "id": "S1144",
          "shortDescription": "Unused private types or members should be removed",
          "fullDescription": "This rule raises an issue when a private/internal type or member is never referenced in the code.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1144",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1186": {
          "id": "S1186",
          "shortDescription": "Methods should not be empty",
          "fullDescription": "An empty method is generally considered bad practice and can lead to confusion, readability, and maintenance issues. Empty methods bring no functionality and are misleading to others as they might think the method implementation fulfills a specific and identified requirement.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1186",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S125": {
          "id": "S125",
          "shortDescription": "Sections of code should not be commented out",
          "fullDescription": "Commented-out code distracts the focus from the actual executed code. It creates a noise that increases maintenance code. And because it is never executed, it quickly becomes out of date and invalid.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-125",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1450": {
          "id": "S1450",
          "shortDescription": "Private fields only used as local variables in methods should become local variables",
          "fullDescription": "When the value of a private field is always assigned to in a class' methods before being read, then it is not being used to store class information. Therefore, it should become a local variable in the relevant methods to prevent any misunderstanding.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1450",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "An unused local variable is a variable that has been declared but is not used anywhere in the block of code where it is defined. It is dead code, contributing to unnecessary complexity and leading to confusion when reading the code. Therefore, it should be removed from your code to maintain clarity and efficiency.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1751": {
          "id": "S1751",
          "shortDescription": "Loops with at most one iteration should be refactored",
          "fullDescription": "A loop statement with at most one iteration is equivalent to an if statement; the following block is executed only once.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1751",
          "properties": {
            "category": "Major Bug",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2077": {
          "id": "S2077",
          "shortDescription": "Formatting SQL queries is security-sensitive",
          "fullDescription": "Formatted SQL queries can be difficult to maintain, debug and can increase the risk of SQL injection when concatenating untrusted values into the query. However, this rule doesn’t detect SQL injections (unlike rule {rule:csharpsquid:S3649}), the goal is only to highlight complex/formatted queries.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2077",
          "properties": {
            "category": "Major Security Hotspot",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2696": {
          "id": "S2696",
          "shortDescription": "Instance members should not write to \"static\" fields",
          "fullDescription": "This rule raises an issue each time a static field is updated from a non-static method or property.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2696",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3459": {
          "id": "S3459",
          "shortDescription": "Unassigned members should be removed",
          "fullDescription": "Fields and auto-properties that are never assigned to hold the default values for their types. They are either pointless code or, more likely, mistakes.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3459",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3604": {
          "id": "S3604",
          "shortDescription": "Member initializer values should not be redundant",
          "fullDescription": "Fields, properties and events can be initialized either inline or in the constructor. Initializing them inline and in the constructor at the same time is redundant; the inline initialization will be overridden.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3604",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "This rule raises an issue when the code cognitive complexity of a function is above a certain threshold.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S6605": {
          "id": "S6605",
          "shortDescription": "Collection-specific \"Exists\" method should be used instead of the \"Any\" extension",
          "fullDescription": "Both the List.Exists method and IEnumerable.Any method can be used to find the first element that satisfies a predicate in a collection. However, List.Exists can be faster than IEnumerable.Any for List objects, as well as requires significantly less memory. For small collections, the performance difference may be negligible, but for large collections, it can be noticeable. The same applies to ImmutableList and arrays too.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-6605",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}